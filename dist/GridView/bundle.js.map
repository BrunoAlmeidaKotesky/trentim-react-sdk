{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/Card/Card.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/DateSlider.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GroupPanel.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PeoplePicker.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewFilter.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewGrouping.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewMapper.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridCardRendering.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/usePanelFilterController.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/enums.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/hooks/useRefWithCallback.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/ChoiceGroup\"","webpack:///external \"@fluentui/react/lib/DatePicker\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Label\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Slider\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"fast-sort\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","Card","props","styles","card","backgroundColor","border","margin","borderRadius","position","display","flexDirection","width","height","userSelect","enableUserSelect","color","overflow","top","borderBottom","gridTemplateColumns","columnGap","padding","fontFamily","col","rightCol","alignItems","leftCol","cardTitle","WebkitLineClamp","WebkitBoxOrient","fontSize","lineHeight","projectCode","opacity","bottom","justifyContent","circleWrap","circle","background","status","marginLeft","linkButton","minWidth","React","onClick","e","onCardClick","style","cardSubtitle","cardRightColInformation","_a","containerStyle","_b","_c","values","_d","length","_e","map","idx","title","plantName","circleIndicator","_f","__assign","_g","_h","_j","Button_1","onClickDownButton","iconProps","iconName","createContext","enableFilter","enableSearch","enableCardView","customButtons","setIsFilterPanelOpen","undefined","searchBoxPlaceholder","setRenderAs","defaultButtonsOrder","group","search","filter","setIsGroupPanelOpen","onClickSearchIcon","isOpen","onApply","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","dateValue","setFilterDate","filterOptionsMatrix","availableFilters","footer","options","selectedGroupKeys","setSelectedGroupKeys","DateSliderComponent","useState","displayDatePicker","setDisplayDatePicker","enums_1","NONE","currentSlider","setCurSlider","useContext","Contexts_1","formatSliderValue","num","onSliderChange","_","val","CUSTOM","copyMap","set","itemKey","fromDate","toDate","Date","onRecordDateRange","WEEK","lastWeek","setDate","getDate","MONTH","lastMonth","setMonth","getMonth","YEAR","lastYear","setFullYear","getFullYear","useEffect","defaultSliderValue","size","dateStrings","useMemo","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","showWeekNumbers","weekNumberFormatString","firstWeekOfYear","dateFormat","showGoToToday","Slider_1","min","max","step","defaultValue","container","valueFormat","onChanged","label","DatePicker_1","maxDate","strings","formatDate","date","toLocaleDateString","onSelectDate","newMap","minDate","memo","GridViewInner","ref","useGridController","state","handlers","JSX","CardsList","actualRows","visibleCols","isFilterPanelOpen","filterPanelConfig","groupPanelConfig","listConfig","shouldRenderCard","isGroupPanelOpen","groups","onItemClick","Provider","ListOptions_1","zIndex","contentContainer","id","onRenderCustomComponent","DetailsList_1","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","item","cursor","items","columns","groupProps","isAllGroupsCollapsed","collapseAllVisibility","visible","onRenderHeader","showEmptyGroups","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","hidden","react_1","fallback","cardProps","gap","PanelFilter_1","GroupPanel_1","forwardRef","GroupPanel","Panel","lazy","then","default","PrimaryButton","DefaultButton","RadioButton","ChoiceGroup","FluentPanel","isFooterAtBottom","onDismiss","onRenderFooter","marginRight","onChange","opt","keyWithName","concat","text","defaultSelectedKey","split","__read","ListOptions","searchKeys","onSearchItemChange","enableGrouping","onFilterIconClick","onGroupIconClick","onSearchBoxClick","cardButtonProps","filterButtonProps","searchBoxProps","groupButtonProps","omittedButtonProps","omittedTextFieldProps","defaultStyles","react_2","order","b","renderAs","className","onRenderCustomButton","placeholder","onKeyDown","ENTER","currentTarget","onFocus","onBlur","target","pointerEvents","inputValue","parentElement","childNodes","CLICK","icon","PanelFilter","usePanelFilterController","Dropdown","TagPicker","Label","getDefaultDropdownSelectedKeys","onAddOrRemoveToMap","getDefaultSelectedTag","getDefaultSelectedSlider","Suspense","defaultSelectedKeys","multiSelect","enableMultiple","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","overflowY","onChangeTags","onItemSelected","onTagSelected","onResolveSuggestions","onResolveTagSuggestion","DateSlider_1","onRecordDateChange","PeoplePicker_1","people","getDefaultSelectedPeople","onChangePeople","suggestionProps","mostRecentlyUsedHeaderText","showRemoveButtons","suggestionsAvailableAlertText","suggestionsContainerAriaLabel","PeoplePicker","peopleList","setPeopleList","picker","useRef","onFilterChanged","filterText","currentPersonas","limitResults","filteredPersonas","filterPersonasByText","removeDuplicates","slice","doesTextStartWith","onRemoveSuggestion","indexPeopleList","indexOf","newPeople","Pickers_1","onValidateInput","validateInput","componentRef","resolveDelay","toLowerCase","personas","possibleDupes","persona","listContainsPersona","input","valid","warning","invalid","GridViewFilter","allRows","hiddenFields","filters","columnsToFilter","filterFromColumns","index","renderFilterAs","keys","fieldName","data","stringObject","Utils","getNestedObject","toString","dateConversionOptions","shouldConvertToLocaleString","Utils_1","convertIsoToLocaleString","locales","formatOptions","uniqueOptions","obj","pos","arr","mapObj","push","setActualRows","setIsFilterPanel","applyCustomFilter","onItemsFiltered","onFilterPanelCancel","selectedItems","groupedMaps_1","GridViewMapper_1","groupMaps","groupedMaps","filteredRows","mapKey","filterFrom","forEach","isDate","from","to","ORrowsFromThisKey","rDate","Id","includes","apply","__spreadArray","entries","allMapValues","newFilteredItems","rowValue","some","v","hiddenKeys","searchCb","onSearchBoxItemsFiltered","searchText","allFilteredRows","filteredValues","foundValues","startsWith","keys_1_1","GridViewGrouping","setGroups","setIsGroupPanel","onItemsGrouped","onGroupPanelCancel","groupByFields","startIndex","level","emptyGroupLabel","setIsGrouping","cols","selectedKey","selectedName","active","buildGroups","updatedItemsOrder","defaultEmptyLabel","groupField","groupKey_1","keyDateConverterOptions_1","find","isKeyADate_1","groupFieldName","groupedItems_1","groupName","sortedGroups_1","groupNames","ascending","sort","reverse","groupItems","totalItems","count","isCollapsed","subGroup","GridViewMapper","mapsByKeyKind","keyName","doesNotHaveKey","has","sameMapsList","thisKindMap_1","useGridCardRendering","setEnableGrouping","setShouldRenderCard","console","error","row","cardTitleKey","cardSubtitleKey","titleDateConversionOptions","subtitleDateConversionOptions","rightColumn","cIndicator","titleValue","newCardProps","_k","marginBottom","fontWeight","setCols","isGroping","headerOptions","rows","setAllRows","useRefWithCallback","currentSearchBoxItems","memoizedAvailableFilter","setAvailableFilters","hideColumn","onColumnClick","currentRows","column","naturalSort","createNewSortInstance","comparer","Intl","Collator","numeric","sensitivity","compare","isSortedDescending","isSorted","sortedItems","sortType","columnKeys","by","asc","u","desc","GridViewGrouping_1","onApplyGrouping","convertedColumns","onRender","_2","fieldValue","initialGroupedBy","initialGroupKey","getCurrentRows","reGroupInitialGroup","useCallback","useImperativeHandle","GridViewFilter_1","buildFilters","hiddenFilterKeys","hiddenGroupKeys","f","mapFilterOptions","onApplyFilter","filterPanelTitle","panelChildren","_l","_m","groupPanelTitle","_o","_p","_q","selectedKeys","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","callerType","current","filteredItems","_1","_3","_4","_5","DropDown","lastAddedTag","rootItemKey","option","selected","isDateComponent","listContainsTagList","tag","tagList","compareTag","k","keyToFilter","selectedTags","keyKind","mapWithSameKey","mapWithSameKeyValue","type","tags","selectedItem","currentFilter","result","toISOString","GridView","isNaN","getTime","isIsoDate","test","DateTimeFormat","format","nestedObj","path","pathAsArray","reduce","subKeys","getDeepKeys","subkey","Array","isArray","match","Math","abs","RangeType","IconClickCaller","GroupOrder","initialValue","toggleState","setToggle","refCallback","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { ICardProps } from '../models/interfaces/ICardProps';\r\nimport { CSSProperties } from 'react';\r\n\r\n/**\r\n * A card component that can be used in `GridView` automatically if `renderAs` is set to `card`.\r\n * \r\n * @param props - IInfoCardProps\r\n * @returns JSX.Element\r\n */\r\nexport function Card(props: ICardProps) {\r\n    const styles: Record<string, CSSProperties> = {\r\n        card: {\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            border: \"1px solid #ababab\",\r\n            margin: \"0 0 16px\",\r\n            borderRadius: \"4px\",\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: props?.width || \"100%\",\r\n            height: props?.height || \"150px\",\r\n            userSelect: props?.enableUserSelect ? \"unset\" : \"none\",\r\n            color: \"#333\",\r\n            overflow: \"hidden\"\r\n        },\r\n        top: {\r\n            borderBottom: \"1px solid rgb(237, 235, 233)\",\r\n            overflow: \"hidden\",\r\n            height: \"100%\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 120px\",\r\n            columnGap: \"8px\",\r\n            padding: \"16px\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n        },\r\n        col: { display: \"flex\", flexDirection: \"column\" },\r\n        rightCol: { display: 'flex', flexDirection: 'column', alignItems: \"flex-end\" },\r\n        leftCol: { display: 'flex', flexDirection: 'column' },\r\n        cardTitle: {\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            WebkitBoxOrient: \"vertical\",\r\n            overflow: \"hidden\",\r\n            fontSize: \"18px\",\r\n            lineHeight: 1.4\r\n        },\r\n        projectCode: {\r\n            fontSize: \"16px\",\r\n            opacity: 0.8\r\n        },\r\n        bottom: {\r\n            display: \"flex\",\r\n            padding: \"6px 16px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"rgb(250, 249, 248)\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n\r\n        },\r\n        circleWrap: { display: \"inline-flex\", alignItems: \"center\" },\r\n        circle: {\r\n            width: \"16px\",\r\n            height: \"16px\",\r\n            background: \"#06ad51\",\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #06ad51\",\r\n            display: \"inline-block\"\r\n        },\r\n        status: { display: \"inline-block\", marginLeft: \"8px\" },\r\n        linkButton: { width: \"32px\", height: \"32px\", minWidth: \"32px\" }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={(e) => {\r\n            if (props.onCardClick)\r\n                props?.onCardClick(e);\r\n        }} style={styles.card}>\r\n            <div data-class-name=\"card-top\" style={styles.top}>\r\n                <div data-class-name=\"card-top-left\" style={styles.leftCol}>\r\n                    <div style={styles.cardTitle}>\r\n                        <span>{props?.cardTitle}</span>\r\n                    </div>\r\n                    <div style={styles.projectCode}>\r\n                        <span>{props?.cardSubtitle}</span>\r\n                    </div>\r\n                </div>\r\n                <div data-class-name=\"card-top-right\" style={props?.cardRightColInformation?.containerStyle ?? styles.rightCol}>\r\n                    {props?.cardRightColInformation?.values?.length > 0 && props?.cardRightColInformation?.values.map((value, idx) => {\r\n                        typeof value?.title === 'string' && (\r\n                            <div key={value?.title ?? idx} style={value?.style ?? styles.plantName}>\r\n                                <span>{value?.title}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div data-class-name=\"card-bottom\" style={styles.bottom}>\r\n                <div data-class-name=\"card-circle-wrapper\" style={styles.circleWrap}>\r\n                    <div style={props?.circleIndicator?.color ? { ...styles.circle, background: props?.circleIndicator?.color, border: `1px solid ${props?.circleIndicator?.color}` } : {}}></div>\r\n                    <span style={styles.status}>{props?.circleIndicator?.title}</span>\r\n                </div>\r\n                <div data-class-name=\"card-button-container\">\r\n                    <PrimaryButton onClick={props?.onClickDownButton} style={styles.linkButton} iconProps={{ iconName: props?.iconName || 'Page' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IListOptions\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../models/interfaces/IGroupPanel';\r\nimport type { IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps<IRow>>({ \r\n    enableFilter: true, \r\n    enableSearch: true,\r\n    enableCardView: true,\r\n    customButtons: [], \r\n    setIsFilterPanelOpen: undefined, \r\n    searchBoxPlaceholder: '',\r\n    setRenderAs: undefined, \r\n    defaultButtonsOrder: { group: 0, search: 1, filter: 2, card: 3 },\r\n    setIsGroupPanelOpen: undefined,\r\n    onClickSearchIcon: undefined\r\n});\r\n\r\nexport const FilterPanelContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined,\r\n    dateValue: null,\r\n    setFilterDate: undefined,\r\n    filterOptionsMatrix: [],\r\n    availableFilters: [],\r\n    top: undefined,\r\n    footer: undefined\r\n});\r\n\r\nexport const GroupPanelContext = createContext<IGroupPanel>({\r\n    isOpen: false, \r\n    onApply: undefined,\r\n    onCancel: undefined,\r\n    onClose: undefined,\r\n    onOpen: undefined,\r\n    panelTitle: '',\r\n    options: [],\r\n    selectedGroupKeys: null,\r\n    setSelectedGroupKeys: undefined,\r\n    top: undefined,\r\n    footer: undefined\r\n});","import * as React from 'react';\r\nimport { RangeType } from '../helpers/enums';\r\nimport { Slider, ISliderProps } from '@fluentui/react/lib/Slider';\r\nimport { DatePicker } from '@fluentui/react/lib/DatePicker';\r\nimport type { IDateSliderProps } from '../models/interfaces/IDateSlider';\r\nimport { useContext, useEffect, useState, memo, useMemo } from 'react';\r\nimport { FilterPanelContext } from './Contexts';\r\n\r\nfunction DateSliderComponent(props: IDateSliderProps) {\r\n    const [displayDatePicker, setDisplayDatePicker] = useState(false);\r\n    const [currentSlider, setCurSlider] = useState<RangeType>(RangeType.NONE);\r\n    const {dateValue, setFilterDate} = useContext(FilterPanelContext);\r\n    const formatSliderValue = (num: number): string => num === 0 ? 'Nenhum' : num === 1 ? 'Última Semana' : num === 2 ? 'Último Mês' : num === 3 ? 'Últimos Ano' : '';\r\n    const onSliderChange: ISliderProps['onChanged'] = (_, val) => {\r\n        if(val === RangeType.CUSTOM) {\r\n            setDisplayDatePicker(true);\r\n            setCurSlider(RangeType.CUSTOM);\r\n        }\r\n        else {\r\n            setDisplayDatePicker(false);\r\n            setFilterDate(p => {\r\n                const copyMap = new Map(p);\r\n                copyMap.set(props?.itemKey, {fromDate: null, toDate: new Date()});\r\n                return copyMap;\r\n            })\r\n        }\r\n        if(val === RangeType.NONE) {\r\n            props.onRecordDateRange(null, null, RangeType.NONE);\r\n            setCurSlider(RangeType.NONE);\r\n            setDisplayDatePicker(false);\r\n        }\r\n        else if(val === RangeType.WEEK) {\r\n            const lastWeek = new Date();\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            setCurSlider(RangeType.WEEK);\r\n            props.onRecordDateRange(lastWeek, new Date(), RangeType.WEEK);\r\n        }\r\n        else if(val === RangeType.MONTH) {\r\n            const lastMonth = new Date();\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            setCurSlider(RangeType.MONTH);\r\n            props.onRecordDateRange(lastMonth, new Date(), RangeType.MONTH);\r\n        }\r\n        else if(val === RangeType.YEAR) {\r\n            const lastYear = new Date();\r\n            lastYear.setFullYear(lastYear.getFullYear() - 1);\r\n            setCurSlider(RangeType.YEAR);\r\n            props.onRecordDateRange(lastYear, new Date(), RangeType.YEAR);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurSlider(props.defaultSliderValue);\r\n    }, [props?.defaultSliderValue]);\r\n\r\n    useEffect(() => {\r\n        if(dateValue?.size > 0 && currentSlider === RangeType.CUSTOM)\r\n            props.onRecordDateRange(dateValue?.get(props?.itemKey)?.fromDate, dateValue.get(props?.itemKey)?.toDate, RangeType.CUSTOM);\r\n    }, [currentSlider, dateValue]);\r\n\r\n    useEffect(() => {\r\n        if(props?.defaultSliderValue === 4 && !displayDatePicker)\r\n            setDisplayDatePicker(true);\r\n    }, [props?.defaultSliderValue]);\r\n\r\n    const dateStrings = useMemo(() => ({\r\n        months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n        shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n        days: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\r\n        shortDays: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n        goToToday: 'Hoje',\r\n        prevMonthAriaLabel: 'Mês anterior',\r\n        nextMonthAriaLabel: 'Próximo mês',\r\n        prevYearAriaLabel: 'Ano anterior',\r\n        nextYearAriaLabel: 'Próximo ano',\r\n        closeButtonAriaLabel: 'Fechar',\r\n        isRequiredErrorMessage: 'Este campo é obrigatório.',\r\n        invalidInputErrorMessage: 'Valor de entrada inválido.',\r\n        isOutOfBoundsErrorMessage: 'Valor de entrada fora dos limites.',\r\n        showWeekNumbers: false,\r\n        weekNumberFormatString: '',\r\n        firstWeekOfYear: 0,\r\n        dateFormat: 'd',\r\n        showGoToToday: true,\r\n    }), []);\r\n\r\n    return (<>\r\n    <Slider\r\n        min={0} max={4} step={1}\r\n        defaultValue={props?.defaultSliderValue ?? 0} styles={{container: { display: 'grid' }}}\r\n        valueFormat={formatSliderValue}\r\n        onChanged={onSliderChange}\r\n        label={props?.label}/>\r\n    {displayDatePicker && \r\n        <div>\r\n            <DatePicker\r\n                maxDate={dateValue?.get(props?.itemKey)?.toDate}\r\n                strings={dateStrings}\r\n                value={dateValue?.get(props?.itemKey)?.fromDate}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    setFilterDate(p => {\r\n                        const newMap = new Map(p);\r\n                        newMap.set(props?.itemKey, {fromDate: d, toDate: dateValue?.get(props?.itemKey)?.toDate});\r\n                        return newMap;\r\n                    });\r\n                    setCurSlider(RangeType.CUSTOM);\r\n                }}\r\n                label=\"De\"/>\r\n            <DatePicker\r\n                minDate={dateValue?.get(props?.itemKey)?.fromDate}\r\n                strings={dateStrings}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    setFilterDate(p => {\r\n                        const newMap = new Map(p);\r\n                        newMap.set(props?.itemKey, {fromDate: dateValue?.get(props?.itemKey)?.fromDate, toDate: d});\r\n                        return newMap;\r\n                    });\r\n                    setCurSlider(RangeType.CUSTOM);\r\n                }}\r\n                value={dateValue?.get(props?.itemKey)?.toDate}\r\n                label=\"Até\"/>\r\n        </div>\r\n    }\r\n    </>);\r\n}\r\n\r\nexport const DateSlider = memo(DateSliderComponent);","import * as React from 'react';\r\nimport { useGridController } from './hooks/useGridController';\r\nimport { FilterPanelContext, GroupPanelContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps, BaseType, IGridViewRefHandler } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport GroupPanel from './GroupPanel';\r\nimport { ListOptions } from './ListOptions';\r\nimport { Suspense } from 'react';\r\n\r\ndeclare module \"react\" {\r\n    function forwardRef<T, P = {}>(\r\n      render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\r\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null;\r\n  }\r\n\r\nfunction GridViewInner<T extends BaseType>(props: IGridListProps<T>, ref: React.ForwardedRef<IGridViewRefHandler<T>>) {\r\n    const {state, handlers, JSX} = useGridController(props, ref);\r\n    const {CardsList} = JSX;\r\n    const {actualRows, visibleCols, isFilterPanelOpen, filterPanelConfig, groupPanelConfig, listConfig, shouldRenderCard, isGroupPanelOpen, groups} = state;\r\n    const {onItemClick} = handlers;\r\n\r\n    return (\r\n        <GroupPanelContext.Provider value={groupPanelConfig}>\r\n        <FilterPanelContext.Provider value={filterPanelConfig}>\r\n        <ListOptionsContext.Provider value={listConfig}>\r\n            <div style={props?.styles?.root ?? {}}>\r\n                <ListOptions />\r\n                <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0, ...props?.styles?.contentContainer }} id=\"gridView-root\">\r\n                    {\r\n                    !!props?.onRenderCustomComponent ? actualRows?.map(i => props?.onRenderCustomComponent(i)) :\r\n                    !shouldRenderCard ? \r\n                    <DetailsList\r\n                        {...props?.detailsListProps}\r\n                        onRenderItemColumn={props?.onRenderItemColumn}\r\n                        onRenderRow={(p, defaultRender) => <div onClick={() => onItemClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onItemClick ? 'pointer' : 'default' } } })}</div>}\r\n                        items={actualRows} columns={visibleCols}\r\n                        groups={groups}\r\n                        groupProps={{\r\n                            isAllGroupsCollapsed: true,\r\n                            collapseAllVisibility: CollapseAllVisibility.visible,\r\n                            onRenderHeader: (props, defaultRender) => {\r\n                                if (!props.group!.name)\r\n                                    return <></>;\r\n                                return defaultRender(props);\r\n                            },\r\n                            showEmptyGroups: false\r\n                        }}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                        onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                            <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                            </Sticky>)\r\n                        }\r\n                        checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                    /> :\r\n                    <Suspense fallback={'...'}>\r\n                        <div id=\"gridView-cardContainer\" style={props?.cardProps?.containerStyle ?? {display: 'grid', gap: 12, gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))'}}>\r\n                        {CardsList}\r\n                        </div>\r\n                    </Suspense>\r\n                    }\r\n                </div>\r\n                {isFilterPanelOpen && <PanelFilter />}\r\n                {isGroupPanelOpen && <GroupPanel />}\r\n            </div>\r\n        </ListOptionsContext.Provider>\r\n        </FilterPanelContext.Provider>\r\n        </GroupPanelContext.Provider>);\r\n}\r\n\r\n/** An enhanced version of the `DetailsList` component, with automatic filtering, sorting, grouping, properties searching with many other features to customize.\r\n * \r\n * The component can also be rendered as a collection of `Card` components, with the same functionalities.\r\n */\r\nexport const GridView = React.forwardRef(GridViewInner);","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense } from 'react';\r\nimport { GroupPanelContext } from './Contexts';\r\n\r\nfunction GroupPanel() {\r\n    const {isOpen, panelTitle, onApply, onCancel, onClose, options, selectedGroupKeys, setSelectedGroupKeys, top, footer} = useContext(GroupPanelContext);\r\n    const [FluentPanel, PrimaryButton, DefaultButton, RadioButton] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const RadioButton = lazy(() => import('@fluentui/react/lib/ChoiceGroup').then(({ ChoiceGroup }) => ({ default: ChoiceGroup })));\r\n        return [Panel, PrimaryButton, DefaultButton, RadioButton];\r\n    }, []);\r\n\r\n    if(!isOpen) return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}\r\n                onRenderFooter={_ => (<>\r\n                {!!footer ? footer : null}\r\n                <div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(selectedGroupKeys)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div></>)}>\r\n                {!!top ? top : null}\r\n                <h2>{panelTitle}</h2>\r\n                <Suspense fallback={'...'}>\r\n                    <RadioButton\r\n                        onChange={(_, opt) => {\r\n                            const keyWithName = `${opt?.key};${opt?.text}` as const;\r\n                            setSelectedGroupKeys(keyWithName);\r\n                        }}\r\n                        defaultSelectedKey={selectedGroupKeys?.split(';')?.[0] ?? undefined}\r\n                        options={[{key: '@NONE', text: 'Nenhum'} ,...options]}/>\r\n                </Suspense>\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(GroupPanel);","import * as React from 'react';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {GroupPanelContext, ListOptionsContext} from './Contexts';\r\nimport { IconClickCaller } from '../helpers/enums';\r\n\r\nexport const ListOptions = () => {\r\n    const { \r\n        customButtons, enableFilter, enableSearch, searchKeys, onSearchItemChange, \r\n        setIsFilterPanelOpen, defaultButtonsOrder, searchBoxPlaceholder, enableCardView, \r\n        setRenderAs, enableGrouping, onClickSearchIcon, onFilterIconClick, onGroupIconClick, onSearchBoxClick,\r\n        cardButtonProps, filterButtonProps, searchBoxProps, groupButtonProps\r\n    } = React.useContext(ListOptionsContext);\r\n    const {onOpen} = React.useContext(GroupPanelContext);\r\n\r\n    const omittedButtonProps = useMemo(() => {\r\n        delete cardButtonProps?.['onClick'];\r\n        delete filterButtonProps?.['onClick'];\r\n        delete groupButtonProps?.['onClick'];\r\n        return {\r\n            cardButtonProps,\r\n            filterButtonProps,\r\n            groupButtonProps\r\n        }\r\n    }, [filterButtonProps, filterButtonProps, groupButtonProps, searchBoxProps]);\r\n\r\n    const omittedTextFieldProps = useMemo(() => {\r\n        delete searchBoxProps?.['placeholder'];\r\n        delete searchBoxProps?.['onKeyDown'];\r\n        delete searchBoxProps?.['onFocus'];\r\n        delete searchBoxProps?.['onBlur'];\r\n        return searchBoxProps;\r\n    }, [filterButtonProps, filterButtonProps, groupButtonProps, searchBoxProps]);\r\n\r\n    const defaultStyles = useMemo<Record<string, CSSProperties>>(() =>({\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }), []);\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        {enableGrouping &&\r\n        <DefaultButton\r\n            {...omittedButtonProps?.groupButtonProps}\r\n            onClick={_ => {\r\n                if(!!onGroupIconClick)\r\n                onGroupIconClick();\r\n                onOpen();\r\n            }} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />}\r\n        {enableCardView &&\r\n        <DefaultButton\r\n            {...omittedButtonProps?.cardButtonProps}\r\n            onClick={_ => setRenderAs()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.card}}} iconProps={{iconName: 'GridViewMedium'}} />}\r\n        {customButtons?.length > 0 && customButtons?.map((b, idx) => {\r\n            switch (b?.renderAs) {\r\n                case 'PrimaryButton':\r\n                    return (<PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>);\r\n                case 'DefaultButton': \r\n                    return (<DefaultButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</DefaultButton>);\r\n                case 'CustomButton': \r\n                    return b?.onRenderCustomButton(b?.props) ?? null;\r\n                default: return (<PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>);\r\n            }\r\n        })}\r\n        {(enableSearch && searchKeys) && \r\n        <TextField\r\n            {...omittedTextFieldProps}\r\n            placeholder={searchBoxPlaceholder}\r\n            onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                    onClickSearchIcon(IconClickCaller.ENTER, e?.currentTarget?.value, searchKeys);\r\n                }\r\n            }}\r\n            onFocus={onSearchBoxClick}\r\n            onBlur={e => onSearchItemChange(e.target.value, searchKeys)} \r\n            iconProps={{\r\n                iconName: 'Search',\r\n                style: { pointerEvents: \"auto\", cursor: \"pointer\", position: 'static', padding: 8, backgroundColor: '#e2d7cab5'},\r\n                onClick: (e) => {\r\n                    const inputValue = (e?.currentTarget?.parentElement?.childNodes[0] as HTMLInputElement)?.value;\r\n                    if(inputValue)\r\n                        onClickSearchIcon(IconClickCaller.CLICK);\r\n                }\r\n            }} \r\n            styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter &&\r\n        <DefaultButton\r\n            {...omittedButtonProps?.filterButtonProps}\r\n            onClick={_ => {\r\n                if(!!onFilterIconClick) \r\n                    onFilterIconClick();\r\n                setIsFilterPanelOpen(true);\r\n            }}\r\n            styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport {DateSlider} from './DateSlider';\r\nimport {PeoplePicker} from './PeoplePicker';\r\nimport {usePanelFilterController} from './hooks/usePanelFilterController';\r\n\r\nfunction PanelFilter() {\r\n    const {JSX, state, handlers} = usePanelFilterController();\r\n    const {actualFilteredValues, panelTitle, isOpen, filterOptionsMatrix, availableFilters} = state;\r\n    const {FluentPanel, PrimaryButton, Dropdown, TagPicker, DefaultButton, Label, top, footer} = JSX;\r\n    const { onClose, onCancel, getDefaultDropdownSelectedKeys, onAddOrRemoveToMap, \r\n            getDefaultSelectedTag, getDefaultSelectedSlider } = handlers;\r\n\r\n    if (!isOpen) return null;\r\n    return (\r\n        <React.Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<>\r\n                {!!footer ? footer : null}\r\n                <div style={{padding: 20}}>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => handlers.onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </React.Suspense>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </React.Suspense>\r\n                  </div></>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                {!!top ? top : null}\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    return (<React.Suspense key={filter?.key + \"-\" + idx} fallback={'...'}>\r\n                        {(filter.renderAs === 'Dropdown') ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={filterOptionsMatrix[idx]}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        (filter.renderAs === 'SearchBox') ?\r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <Label>{filter?.name}</Label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{\r\n                                doNotLayer: true,\r\n                                style: {overflowY: 'auto'},\r\n                                styles: {root: {position: 'relative'}}\r\n                            }}\r\n                            onChange={handlers.onChangeTags(filterOptionsMatrix[idx])}\r\n                            onItemSelected={handlers.onTagSelected(filter?.key)}\r\n                            onResolveSuggestions={handlers.onResolveTagSuggestion(filterOptionsMatrix[idx])} /></div> :\r\n                        (filter.renderAs === 'DateSlider') ?\r\n                        <DateSlider\r\n                            itemKey={filter?.key}\r\n                            defaultSliderValue={getDefaultSelectedSlider(filter?.key)}\r\n                            onRecordDateRange={handlers.onRecordDateChange(filter?.key)}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            label={filter?.name}/> :\r\n                        (filter?.renderAs === 'PeoplePicker') ?\r\n                        <div>\r\n                        <Label key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>{filter?.name}</Label>\r\n                        <PeoplePicker\r\n                            label={''}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            people={filterOptionsMatrix[idx]}\r\n                            defaultSelectedItems={handlers.getDefaultSelectedPeople(filter?.key)}\r\n                            onChangePeople={handlers.onChangePeople(filter?.key)} /> \r\n                        </div> : null\r\n                        }\r\n                    </React.Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </React.Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","import * as React from 'react';\r\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\r\nimport { CompactPeoplePicker, IBasePickerSuggestionsProps, ValidationState } from '@fluentui/react/lib/Pickers';\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n    suggestionsHeaderText: 'Pessoas sugeridas',\r\n    mostRecentlyUsedHeaderText: 'Pessoas mais recentes',\r\n    noResultsFoundText: 'Nenhum resultado encontrado',\r\n    loadingText: 'Carregando',\r\n    showRemoveButtons: true,\r\n    suggestionsAvailableAlertText: 'Sugestões disponíveis',\r\n    suggestionsContainerAriaLabel: 'Pessoas sugeridas',\r\n};\r\n\r\ninterface IPeoplePickerProps {\r\n    label: string;\r\n    people: IPersonaProps[];\r\n    onChangePeople: (items: IPersonaProps[]) => void;\r\n    defaultSelectedItems?: IPersonaProps[];\r\n}\r\n\r\nexport const PeoplePicker = (props: IPeoplePickerProps) => {\r\n    const [peopleList, setPeopleList] = React.useState<IPersonaProps[]>(props.people);\r\n    const picker = React.useRef(null);\r\n\r\n    const onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] | Promise<IPersonaProps[]> => {\r\n        if (!filterText)\r\n            return [];\r\n        let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\r\n        filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\r\n        filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\r\n        return filteredPersonas;\r\n    };\r\n\r\n    const filterPersonasByText = (filterText: string)=> peopleList.filter(item => doesTextStartWith(item.text as string, filterText));\r\n    \r\n    const onRemoveSuggestion = (item: IPersonaProps): void => {\r\n        const indexPeopleList: number = peopleList.indexOf(item);\r\n        if (indexPeopleList >= 0) {\r\n            const newPeople: IPersonaProps[] = peopleList\r\n                .slice(0, indexPeopleList)\r\n                .concat(peopleList.slice(indexPeopleList + 1));\r\n            setPeopleList(newPeople);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <CompactPeoplePicker\r\n                onResolveSuggestions={onFilterChanged}\r\n                getTextFromItem={getTextFromItem}\r\n                pickerSuggestionsProps={suggestionProps}\r\n                defaultSelectedItems={props?.defaultSelectedItems}\r\n                onChange={props?.onChangePeople}\r\n                className={'ms-PeoplePicker'}\r\n                onRemoveSuggestion={onRemoveSuggestion}\r\n                onValidateInput={validateInput}\r\n                componentRef={picker}\r\n                resolveDelay={300}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst doesTextStartWith = (text: string, filter: string) => text?.toLowerCase()?.indexOf(filter?.toLowerCase()) === 0;\r\n\r\nconst removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]) => personas.filter(persona => !listContainsPersona(persona, possibleDupes));\r\n\r\nfunction listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) \r\n        return false;\r\n    return personas.filter(item => item?.text === persona?.text)?.length > 0;\r\n}\r\n\r\nconst getTextFromItem = (persona: IPersonaProps) => persona?.text;\r\n\r\nfunction validateInput(input: string): ValidationState {\r\n    if (input.indexOf('@') !== -1) \r\n        return ValidationState.valid;\r\n    else if (input.length > 1) \r\n        return ValidationState.warning;\r\n    return ValidationState.invalid;\r\n}","import { Utils } from '../../helpers/Utils';\r\nimport { GridViewMapper } from './GridViewMapper';\r\nimport type { IRow, TColumn } from '../../models/interfaces/IGridView';\r\nimport type { ApplyFilter, SearchItem } from '../../models/types/Common';\r\nimport type { FilterOption, IAvailableFilters } from '../../models/interfaces/IPanelFilter';\r\n\r\nexport class GridViewFilter {\r\n\r\n    static onApplyFilter: ApplyFilter<IRow<any>> = ({allRows, setActualRows, setIsFilterPanel, applyCustomFilter, onItemsFiltered, onFilterPanelCancel}) => (selectedItems) => {\r\n        if(!!applyCustomFilter) {\r\n            const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n            return applyCustomFilter({allRows, setActualRows, setIsFilterPanel, selectedItems, groupedMaps});\r\n        }\r\n\r\n        if(selectedItems.size === 0) {\r\n            setActualRows(allRows);\r\n            if(!!onItemsFiltered) \r\n                onItemsFiltered(allRows);\r\n            if(!!onFilterPanelCancel)\r\n                onFilterPanelCancel('not-selected');\r\n            return setIsFilterPanel(false);\r\n        }\r\n        const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n        let filteredRows: IRow[] = [];\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            const filterFrom = filteredRows?.length > 0 ? filteredRows : allRows;\r\n            map?.forEach(value => {\r\n                const isDate = !!value?.data?.from && !!value?.data?.to;\r\n                const ORrowsFromThisKey = filterFrom.filter(r => {\r\n                    if(isDate) {\r\n                        const from: Date = value?.data?.from;\r\n                        const to: Date = value?.data?.to;\r\n                        const rDate: Date = new Date(Utils.getNestedObject(r, mapKey));\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return Utils.getNestedObject(r, mapKey) === value?.text;\r\n                });\r\n                if(ORrowsFromThisKey.length > 0 && !filteredRows?.map(r => r?.Id)?.includes(value?.data?.Id))\r\n                    filteredRows.push(...ORrowsFromThisKey);\r\n            });\r\n        }\r\n\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            const allMapValues = [...map.values()];\r\n            const newFilteredItems = filteredRows.filter(r => {\r\n                const rowValue = Utils.getNestedObject(r, mapKey);\r\n                return allMapValues.some(v => {\r\n                    if(v?.data?.from && v?.data?.to) {\r\n                        const from: Date = v?.data?.from;\r\n                        const to: Date = v?.data?.to;\r\n                        const rDate: Date = new Date(rowValue as string);\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return v?.text === rowValue\r\n                });\r\n            });\r\n            if(newFilteredItems?.length > 0)\r\n                filteredRows = newFilteredItems;\r\n        }\r\n\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        setActualRows(filteredRows)\r\n        setIsFilterPanel(false);\r\n        if(!!onItemsFiltered) \r\n            onItemsFiltered(filteredRows);\r\n    }\r\n\r\n    /**Generate the components of each available column and it's unique values */\r\n    static buildFilters(allRows: IRow[], columns: TColumn<any>[], hiddenFields: string[]): IAvailableFilters[] {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = GridViewFilter.filterFromColumns(hiddenFields, columns);\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key ?? col.fieldName; \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConversionOptions?.locales, col?.dateConversionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    static filterFromColumns = (hiddenKeys: string[], columns: TColumn<any>[]) => columns.filter(c => (!hiddenKeys?.includes(c?.key)));\r\n\r\n    static onSearchItemChange: SearchItem = ({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered}) => (searchText, keys) => {\r\n        const allFilteredRows: IRow[] = []; \r\n        if(!searchText) {\r\n            setActualRows(allRows);\r\n            return [];\r\n        } \r\n        for (const key of keys) {\r\n            const filterFrom = allFilteredRows?.length > 0 ? allFilteredRows : allRows;\r\n            const filteredValues = filterFrom.filter(item => {\r\n                const foundValues: string = Utils.getNestedObject(item, (key as string))?.toString();\r\n                return foundValues?.toLowerCase()?.startsWith(searchText?.toLowerCase());\r\n            });\r\n            allFilteredRows.push(...filteredValues);\r\n        }\r\n        searchCb(allFilteredRows);\r\n        if(!!onSearchBoxItemsFiltered)\r\n            onSearchBoxItemsFiltered(allFilteredRows);\r\n        return allFilteredRows;\r\n    }\r\n}","import { Utils } from '../../helpers/Utils';\r\nimport { GroupOrder } from '../../helpers/enums';\r\nimport type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { ApplyGrouping, BuildGroups } from \"../../models/interfaces/IGrouping\";\r\nimport type { IRow } from '../../models/interfaces/IGridView';\r\n\r\nexport class GridViewGrouping {\r\n\r\n    static onApplyGrouping: ApplyGrouping = ({ \r\n        setGroups, setIsGroupPanel, onItemsGrouped, onGroupPanelCancel, groupByFields, startIndex, level, items, emptyGroupLabel, setActualRows, setIsGrouping, cols\r\n    }) => {\r\n        const selectedKey = groupByFields?.[0]?.name?.split(';')?.[0];\r\n        const selectedName = groupByFields?.[0]?.name?.split(';')?.[1];\r\n        if (!groupByFields?.[0] || selectedKey === '@NONE') {\r\n            setIsGroupPanel(false);\r\n            setIsGrouping({active: false, key: null, name: null});\r\n            if (!!onGroupPanelCancel)\r\n                onGroupPanelCancel('not-selected');\r\n            if (!!onItemsGrouped)\r\n                onItemsGrouped({ selectedKey, setGroups });\r\n            return setGroups(undefined);\r\n        }\r\n        setIsGrouping({active: true, key: selectedKey, name: selectedName});\r\n        const {groups, updatedItemsOrder} = GridViewGrouping.buildGroups({emptyGroupLabel, groupByFields, items, level, startIndex, cols});\r\n        setGroups(groups);\r\n        setActualRows(updatedItemsOrder);\r\n        setIsGroupPanel(false);\r\n        if (!!onItemsGrouped)\r\n            onItemsGrouped({ selectedKey, setGroups });\r\n    }\r\n\r\n    /** Original code from: https://github.com/pnp/sp-dev-fx-controls-react/blob/master/src/controls/listView/ListView.tsx \r\n     * \r\n     * This method supports multiple grouping levels and multiple groups, but the GridView component it self does not implement it yet.\r\n    */\r\n    static buildGroups: BuildGroups = ({ emptyGroupLabel, groupByFields, items, level, startIndex, cols }) => {\r\n        const defaultEmptyLabel = emptyGroupLabel ?? 'Sem itens definidos';\r\n\r\n        // Group array which stores the configured grouping\r\n        let groups: IGroup[] = [];\r\n        let updatedItemsOrder: IRow[] = [];\r\n        // Check if there are groupby fields set\r\n        if (groupByFields) {\r\n            const groupField = groupByFields[level];\r\n            const groupKey = groupField?.name?.split(';')[0];\r\n            const keyDateConverterOptions = cols?.find(i => i?.key === groupKey)?.dateConversionOptions;\r\n            const isKeyADate = keyDateConverterOptions?.shouldConvertToLocaleString;\r\n            const groupFieldName = groupField?.name?.split(';')[1];\r\n            // Check if grouping is configured\r\n            if (groupByFields && groupByFields.length > 0) {\r\n                // Create grouped items object\r\n                const groupedItems = {};\r\n                items.forEach(item => {\r\n                    let groupName = Utils.getNestedObject(item, groupKey) as string ?? defaultEmptyLabel;\r\n                    if (isKeyADate)\r\n                        groupName = Utils.convertIsoToLocaleString(groupName, keyDateConverterOptions?.locales, keyDateConverterOptions?.formatOptions);\r\n                    // Check if the group name exists\r\n                    // Check if group name is a number, this can cause sorting issues\r\n                    if (typeof groupName === \"number\") \r\n                        groupName = `${groupName}.`;\r\n                    \r\n                    // Check if current group already exists\r\n                    if (typeof groupedItems[groupName] === \"undefined\") {\r\n                        // Create a new group of items\r\n                        groupedItems[groupName] = [];\r\n                    }\r\n                    groupedItems[groupName].push(item);\r\n                });\r\n\r\n                // Sort the grouped items object by its key\r\n                const sortedGroups = {};\r\n                let groupNames = Object.keys(groupedItems);\r\n                groupNames = groupField.order === GroupOrder.ascending ? groupNames.sort() : groupNames.sort().reverse();\r\n                groupNames.forEach((key: string) => {\r\n                    sortedGroups[key] = groupedItems[key];\r\n                });\r\n\r\n                // Loop over all the groups\r\n                for (const groupItems in sortedGroups) {\r\n                    // Retrieve the total number of items per group\r\n                    const totalItems = groupedItems[groupItems].length;\r\n                    // Create the new group\r\n                    const group: IGroup = {\r\n                        name: groupItems === \"undefined\" ? defaultEmptyLabel : `${groupFieldName}: ${groupItems}`,\r\n                        key: groupItems === \"undefined\" ? defaultEmptyLabel : groupItems,\r\n                        startIndex: startIndex,\r\n                        count: totalItems,\r\n                        isCollapsed: true\r\n                    };\r\n                    // Check if child grouping available\r\n                    if (groupByFields[level + 1]) {\r\n                        // Get the child groups\r\n                        const subGroup = GridViewGrouping.buildGroups({\r\n                            emptyGroupLabel,\r\n                            items: groupedItems[groupItems], \r\n                            groupByFields,\r\n                            startIndex,\r\n                            level: level + 1,\r\n                            cols\r\n                        });\r\n                        subGroup?.updatedItemsOrder?.forEach((item) => {\r\n                            updatedItemsOrder.push(item);\r\n                        });\r\n                        group.children = subGroup.groups;\r\n                    } else {\r\n                        // Add the items to the updated items order array\r\n                        groupedItems[groupItems].forEach((item) => {\r\n                            updatedItemsOrder.push(item);\r\n                        });\r\n                    }\r\n                    // Increase the start index for the next group\r\n                    startIndex = startIndex + totalItems;\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            updatedItemsOrder,\r\n            groups\r\n        };\r\n    }\r\n}","import { FilterOption, SelectedItemsMap } from \"../../models/interfaces/IPanelFilter\";\r\n\r\n/**Internal class to be used when using map data operations on the GridView component context as a whole. */\r\nexport class GridViewMapper {\r\n\r\n    /**\r\n     * Creates a new map collection with the first level keys being the real keys, and the values being the maps with selected maps (with key and values) \r\n     * @example \r\n     * ```ts\r\n     * const selectedItemsMap = new Map([['0_User.Title', data], ['1_User.Title', data]]);\r\n     * const groupedMap = GridViewMapper.groupMaps(selectedItemsMap);\r\n     * //It'll be: key: 'User.Title', value: [Map([['0_User.Title', data], ['1_User.Title', data]])]\r\n     * ```\r\n     **/\r\n    static groupMaps(selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            let keyName = key.split('_')[1];\r\n            if(!keyName && !key.includes('_'))\r\n                keyName = key;\r\n            const doesNotHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesNotHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    static mapFilterOptions = (options: FilterOption[]) => {\r\n        return options\r\n        .filter(i => (i?.text !== null && i?.text !== undefined))\r\n        .map<FilterOption>(({ key, text, data }) => ({\r\n            key,\r\n            text,\r\n            data\r\n        }));\r\n    }\r\n}","import * as React from 'react';\r\nimport { useEffect, Dispatch, SetStateAction, useMemo, lazy } from 'react';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport { IRow } from '../../models/interfaces/IGridView';\r\nimport { ICardProps, IGridCardProps } from '../../models/interfaces/ICardProps';\r\n\r\ninterface IGridCardHandler {\r\n    renderAs: 'card' | 'list';\r\n    enableGrouping: boolean;\r\n    shouldRenderCard: boolean;\r\n    actualRows: IRow[];\r\n    cardProps: IGridCardProps;\r\n    setShouldRenderCard: Dispatch<SetStateAction<boolean>>;\r\n    setEnableGrouping: Dispatch<SetStateAction<boolean>>;\r\n    onRenderCustomComponent: (item: IRow) => React.ReactNode;\r\n    onItemClick: (item: IRow) => void;\r\n}\r\nexport function useGridCardRendering({\r\n    renderAs, \r\n    setEnableGrouping, \r\n    setShouldRenderCard, \r\n    enableGrouping,\r\n    actualRows, \r\n    shouldRenderCard, \r\n    cardProps, \r\n    onRenderCustomComponent,\r\n    onItemClick\r\n}: IGridCardHandler) {\r\n    useEffect(() => {\r\n        if (renderAs === 'card') {\r\n            setShouldRenderCard(true);\r\n            if (!cardProps || Object?.keys(cardProps)?.length === 0)\r\n                console.error(\"[GridView] - You are using `renderAs: card`, but you are not passing cardProps. This will not work.\");\r\n            return setEnableGrouping(false);\r\n        }\r\n        setShouldRenderCard(false);\r\n        if (enableGrouping)\r\n            setEnableGrouping(true);\r\n    }, [renderAs]);\r\n\r\n    const Card = useMemo(() => {\r\n        if (!shouldRenderCard) return null;\r\n        return lazy(() => import('../../Card/Card').then((module) => ({ default: module?.Card })));\r\n    }, [shouldRenderCard]);\r\n\r\n    const CardsList = useMemo(() => {\r\n        if (!Card || renderAs === 'list') return null;\r\n        \r\n        return actualRows?.map(row => {\r\n            if (!!onRenderCustomComponent)\r\n                return onRenderCustomComponent(row);\r\n            let cardTitle: string = Utils.getNestedObject(row, cardProps?.cardTitleKey) || '';\r\n            let cardSubtitle: string = Utils.getNestedObject(row, cardProps?.cardSubtitleKey) || '';\r\n            if (cardProps?.titleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardTitle = Utils.convertIsoToLocaleString(cardTitle, cardProps?.titleDateConversionOptions?.locales, cardProps?.titleDateConversionOptions?.formatOptions);\r\n            if (cardProps?.subtitleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardSubtitle = Utils.convertIsoToLocaleString(cardSubtitle, cardProps?.subtitleDateConversionOptions?.locales, cardProps?.subtitleDateConversionOptions?.formatOptions);\r\n            const rightCol = cardProps?.rightColumn;\r\n            const cIndicator = cardProps?.circleIndicator;\r\n            let titleValue = Utils.getNestedObject(row, cIndicator?.title) as string;\r\n            if (cIndicator?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                titleValue = Utils.convertIsoToLocaleString(titleValue, cIndicator?.dateConversionOptions?.locales, cIndicator?.dateConversionOptions?.formatOptions);\r\n            const circleIndicator = {\r\n                ...cIndicator,\r\n                title: titleValue\r\n            };\r\n            const newCardProps: ICardProps = {\r\n                ...cardProps,\r\n                cardTitle,\r\n                cardSubtitle,\r\n                cardRightColInformation: rightCol?.keys && {\r\n                    ...rightCol,\r\n                    values: rightCol?.keys?.map(opt => {\r\n                        let title: string = Utils.getNestedObject(row, opt?.title);\r\n                        if (opt?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                            title = Utils.convertIsoToLocaleString(title, opt?.dateConversionOptions?.locales, opt?.dateConversionOptions?.formatOptions);\r\n                        return ({ title, style: opt?.style ?? { fontSize: 16, marginBottom: 4, fontWeight: 600 } });\r\n                    })\r\n                },\r\n                circleIndicator,\r\n                onClickDownButton: e => {\r\n                    onItemClick(row);\r\n                    if (cardProps?.onCardClick)\r\n                        cardProps?.onCardClick(e);\r\n                }\r\n            }\r\n            return (<Card key={row?.Id} {...newCardProps} />);\r\n        })\r\n    }, [Card, cardProps, actualRows, renderAs, onRenderCustomComponent]);\r\n\r\n    return CardsList;\r\n}","import * as React from 'react';\r\nimport { useRefWithCallback } from '../../hooks/useRefWithCallback';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport { useState, useEffect, useMemo, useImperativeHandle, useCallback } from 'react';\r\nimport { useGridCardRendering } from './useGridCardRendering';\r\nimport { GridViewFilter } from '../handlers/GridViewFilter';\r\nimport { GridViewGrouping } from '../handlers/GridViewGrouping';\r\nimport { GridViewMapper } from '../handlers/GridViewMapper';\r\nimport { IconClickCaller, GroupOrder } from '../../helpers/enums';\r\nimport { createNewSortInstance } from 'fast-sort';\r\nimport type { IGridListProps, IRow, TColumn, BaseType, IGridViewRefHandler } from '../../models/interfaces/IGridView';\r\nimport type { IListOptionsProps } from '../../models/interfaces/IListOptions';\r\nimport type { IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../../models/interfaces/IGroupPanel';\r\nimport type { IGroup } from '@fluentui/react/lib/DetailsList';\r\nimport type { KeyAndName } from '../../models/types/Common';\r\n\r\ndeclare module \"react\" {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\r\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null;\r\n}\r\n\r\n/** TO-DO: Use `useReducer` with context for better code splitting. */\r\nexport function useGridController<T extends BaseType>(props: IGridListProps<T>, ref: React.ForwardedRef<IGridViewRefHandler<T>>) {\r\n    const [renderAs, setRenderAs] = useState<typeof props.renderAs>(props?.renderAs || 'list');\r\n    const [shouldRenderCard, setShouldRenderCard] = useState(props?.renderAs === 'card');\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [isGroping, setIsGrouping] = useState<{ active: boolean, key: string, name: string }>({ active: false, key: null, name: null });\r\n    const [groups, setGroups] = useState<IGroup[]>(undefined);\r\n    const [enableGrouping, setEnableGrouping] = useState(props?.headerOptions?.enableGrouping ?? false);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [selectedGroupKeys, setSelectedGroupKeys] = useState<KeyAndName>(null);\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState<IRow<T>[]>(props?.rows ?? []);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n    const [isGroupPanelOpen, setIsGroupPanel] = useState(false);\r\n    const [dateValue, setFilterDate] = useState<Map<string, { fromDate: Date, toDate: Date }>>(null);\r\n    const [searchCb, currentSearchBoxItems] = useRefWithCallback<IRow[]>([]);\r\n    const [memoizedAvailableFilter, setAvailableFilters] = useState<IAvailableFilters[]>([]);\r\n\r\n    const visibleCols = useMemo(() => cols?.filter(c => !c?.hideColumn), [cols]);\r\n    useEffect(() => { setRenderAs(props?.renderAs); }, [props?.renderAs]);\r\n\r\n    const onItemClick = (item: IRow<T>) => !!props?.onItemClick && props?.onItemClick(item);\r\n    const onColumnClick = (currentRows: IRow<T>[]) => (_: any, column: TColumn<T>): void => {\r\n        const naturalSort = createNewSortInstance({\r\n            comparer: new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' }).compare,\r\n        });\r\n        if (!column) return;\r\n        let isSortedDescending = column?.isSortedDescending;\r\n        if (column?.isSorted)\r\n            isSortedDescending = !isSortedDescending;\r\n        let sortedItems = currentRows;\r\n        const sortType: 'asc' | 'desc' = isSortedDescending ? 'desc' : 'asc';\r\n        const columnKeys = column?.key;\r\n        if (isGroping?.active) {\r\n            const groupKey = isGroping?.key;\r\n            if (groupKey === column?.key)\r\n                return;\r\n            if (sortType === 'asc')\r\n                sortedItems = naturalSort(sortedItems).by({\r\n                    asc: [u => Utils.getNestedObject(u, groupKey as any)?.toString(), u => Utils.getNestedObject(u, columnKeys as any)?.toString()],\r\n                })\r\n            else if (sortType === 'desc')\r\n                sortedItems = naturalSort(sortedItems).by({\r\n                    desc: [u => Utils.getNestedObject(u, groupKey as any)?.toString(), u => Utils.getNestedObject(u, columnKeys as any)?.toString()]\r\n                })\r\n            GridViewGrouping.onApplyGrouping({\r\n                emptyGroupLabel: props?.emptyGroupLabel,\r\n                setIsGroupPanel,\r\n                setGroups,\r\n                onItemsGrouped: props?.onItemsGrouped,\r\n                onGroupPanelCancel: props?.onGroupPanelCancel,\r\n                items: sortedItems,\r\n                groupByFields: [{ name: `${groupKey};${isGroping?.name}`, order: GroupOrder.ascending }],\r\n                setActualRows,\r\n                level: 0,\r\n                startIndex: 0,\r\n                cols,\r\n                setIsGrouping\r\n            });\r\n            setCols(c => c.map(col => {\r\n                col.isSorted = col.key === column?.key;\r\n                if (col?.isSorted)\r\n                    col.isSortedDescending = isSortedDescending;\r\n                return col;\r\n            }));\r\n            return;\r\n        }\r\n        if(sortType === 'asc')\r\n            sortedItems = naturalSort(sortedItems).by({\r\n                asc: u => Utils.getNestedObject(u, columnKeys as any)?.toString(),\r\n            });\r\n        else if(sortType === 'desc')\r\n            sortedItems = naturalSort(sortedItems).by({\r\n                desc: u => Utils.getNestedObject(u, columnKeys as any)?.toString(),\r\n            });\r\n        setActualRows(sortedItems);\r\n        setCols(c => c.map(col => {\r\n            col.isSorted = col.key === column?.key;\r\n            if (col?.isSorted)\r\n                col.isSortedDescending = isSortedDescending;\r\n            return col;\r\n        }));\r\n    }\r\n\r\n    const CardsList = useGridCardRendering({\r\n        renderAs,\r\n        actualRows,\r\n        onItemClick,\r\n        cardProps: props?.cardProps,\r\n        enableGrouping: props?.headerOptions?.enableGrouping,\r\n        onRenderCustomComponent: props?.onRenderCustomComponent,\r\n        setEnableGrouping,\r\n        setShouldRenderCard,\r\n        shouldRenderCard\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!props?.columns?.length) return;\r\n        const columns = props?.columns;\r\n        const convertedColumns = columns.map(c => {\r\n            if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                c.onRender = (item, _2) => {\r\n                    const fieldValue: string = Utils.getNestedObject(item, c?.fieldName);\r\n                    return <span>{fieldValue}</span>;\r\n                }\r\n                return c;\r\n            } else if (c?.dateConversionOptions?.shouldConvertToLocaleString) {\r\n                c.onRender = (item, _2) => {\r\n                    const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConversionOptions?.locales, c?.dateConversionOptions?.formatOptions);\r\n                    return <span>{fieldValue}</span>;\r\n                }\r\n            }\r\n            return c;\r\n        });\r\n        setCols(convertedColumns);\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        if (!props?.initialGroupedBy?.key) return;\r\n        const initialGroupKey = props?.initialGroupedBy?.key as string;\r\n        const fieldName = initialGroupKey + \";\" + props?.initialGroupedBy?.name as KeyAndName;\r\n        GridViewGrouping.onApplyGrouping({\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n            onItemsGrouped: props?.onItemsGrouped,\r\n            onGroupPanelCancel: props?.onGroupPanelCancel,\r\n            items: actualRows,\r\n            groupByFields: [{ name: fieldName, order: GroupOrder.ascending }],\r\n            setActualRows,\r\n            level: 0,\r\n            startIndex: 0,\r\n            cols,\r\n            setIsGrouping\r\n        });\r\n    }, [props?.initialGroupedBy?.key]);\r\n\r\n    useEffect(() => {\r\n        if (props?.getCurrentRows)\r\n            props?.getCurrentRows(actualRows);\r\n    }, [actualRows]);\r\n\r\n    const reGroupInitialGroup = useCallback(() => {\r\n        const initialGroupKey = props?.initialGroupedBy?.key as string;\r\n        const fieldName = initialGroupKey + \";\" + props?.initialGroupedBy?.name as KeyAndName;\r\n        GridViewGrouping.onApplyGrouping({\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n            onItemsGrouped: props?.onItemsGrouped,\r\n            onGroupPanelCancel: props?.onGroupPanelCancel,\r\n            items: actualRows,\r\n            groupByFields: [{ name: fieldName, order: GroupOrder.ascending }],\r\n            setActualRows,\r\n            level: 0,\r\n            startIndex: 0,\r\n            cols,\r\n            setIsGrouping\r\n        });\r\n    }, [actualRows, cols, props?.emptyGroupLabel, props?.initialGroupedBy?.key]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        reGroupInitialGroup\r\n    }), [actualRows]);\r\n\r\n    useEffect(() => { setActualRows(props?.rows); setAllRows(props?.rows) }, [props?.rows]);\r\n    useEffect(() => {\r\n        setCols(columns => [...columns.map(c => ({ ...c, onColumnClick: onColumnClick(actualRows) }))]);\r\n    }, [actualRows?.length, isGroping?.active, isGroping?.key, isGroping?.name]);\r\n\r\n    useEffect(() => {\r\n        setAvailableFilters([...GridViewFilter.buildFilters(allRows, cols, props?.hiddenFilterKeys as string[])]);\r\n    }, [allRows?.length, cols?.length, props?.hiddenGroupKeys?.length]);\r\n\r\n    const filterOptionsMatrix = useMemo(() => memoizedAvailableFilter.map(f => GridViewMapper.mapFilterOptions(f?.options)), [memoizedAvailableFilter]);\r\n\r\n    const filterPanelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: GridViewFilter.onApplyFilter({\r\n            allRows,\r\n            setActualRows,\r\n            setIsFilterPanel,\r\n            applyCustomFilter: props?.applyCustomFilter,\r\n            onItemsFiltered: props?.onItemsFiltered,\r\n            onFilterPanelCancel: props?.onFilterPanelCancel\r\n        }),\r\n        onCancel: () => {\r\n            setIsFilterPanel(false);\r\n            if (props?.onFilterPanelCancel)\r\n                props?.onFilterPanelCancel('cancel');\r\n        },\r\n        onClose: () => {\r\n            setIsFilterPanel(false);\r\n            if (props?.onFilterPanelCancel)\r\n                props?.onFilterPanelCancel('dismiss');\r\n        },\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues,\r\n        dateValue, setFilterDate,\r\n        filterOptionsMatrix,\r\n        availableFilters: memoizedAvailableFilter,\r\n        top: props?.panelChildren?.filter?.top,\r\n        footer: props?.panelChildren?.filter?.footer\r\n    }\r\n\r\n    const groupPanelConfig: IGroupPanel = {\r\n        isOpen: isGroupPanelOpen,\r\n        onCancel: () => {\r\n            setIsGroupPanel(false);\r\n            if (props?.onGroupPanelCancel)\r\n                props?.onGroupPanelCancel('cancel');\r\n        },\r\n        onClose: () => {\r\n            setIsGroupPanel(false);\r\n            if (props?.onGroupPanelCancel)\r\n                props?.onGroupPanelCancel('dismiss');\r\n        },\r\n        onOpen: () => { setIsGroupPanel(true); },\r\n        panelTitle: props?.groupPanelTitle ?? 'Agrupar',\r\n        setSelectedGroupKeys,\r\n        selectedGroupKeys,\r\n        options: GridViewFilter.filterFromColumns(props?.hiddenGroupKeys as string[], cols)?.map(c => ({ key: c?.key, text: c?.name })) ?? [],\r\n        onApply: (selectedKeys: KeyAndName) => GridViewGrouping.onApplyGrouping({\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n            onItemsGrouped: props?.onItemsGrouped,\r\n            onGroupPanelCancel: props?.onGroupPanelCancel,\r\n            items: actualRows,\r\n            setActualRows,\r\n            groupByFields: [{ name: selectedKeys, order: GroupOrder.ascending }],\r\n            level: 0,\r\n            startIndex: 0,\r\n            cols,\r\n            setIsGrouping\r\n        }),\r\n        top: props?.panelChildren?.group?.top,\r\n        footer: props?.panelChildren?.group?.footer\r\n    }\r\n\r\n    const listConfig: IListOptionsProps<any> = {\r\n        ...props?.headerOptions,\r\n        onSearchItemChange: GridViewFilter.onSearchItemChange({ allRows, searchCb, setActualRows, onSearchBoxItemsFiltered: props?.onSearchBoxItemsFiltered }),\r\n        setRenderAs: () => renderAs === 'card' ? setRenderAs('list') : setRenderAs('card'),\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        setIsGroupPanelOpen: (value) => { setIsGroupPanel(value); },\r\n        enableSearch: props?.headerOptions?.enableSearch ?? true,\r\n        enableFilter: props?.headerOptions?.enableFilter ?? true,\r\n        enableCardView: props?.headerOptions?.enableCardView ?? false,\r\n        enableGrouping,\r\n        onClickSearchIcon: (callerType, text, key) => {\r\n            if (callerType === IconClickCaller.CLICK)\r\n                return setActualRows(currentSearchBoxItems?.current as IRow<T>[]);\r\n            if (callerType === IconClickCaller.ENTER) {\r\n                if (!text)\r\n                    return setActualRows(allRows);\r\n                const filteredItems = GridViewFilter.onSearchItemChange({ allRows, searchCb, setActualRows, onSearchBoxItemsFiltered: props?.onSearchBoxItemsFiltered })(text, key);\r\n                searchCb(filteredItems);\r\n                setActualRows(filteredItems as IRow<T>[]);\r\n            }\r\n        },\r\n        onFilterIconClick: props?.onFilterIconClick,\r\n        onGroupIconClick: props?.onGroupIconClick,\r\n        onSearchBoxClick: props?.onSearchBoxClick,\r\n        cardButtonProps: props?.headerOptions?.cardButtonProps,\r\n        filterButtonProps: props?.headerOptions?.filterButtonProps,\r\n        groupButtonProps: props?.headerOptions?.groupButtonProps,\r\n        searchBoxProps: props?.headerOptions?.searchBoxProps,\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            visibleCols,\r\n            filterPanelConfig,\r\n            groupPanelConfig,\r\n            isFilterPanelOpen,\r\n            isGroupPanelOpen,\r\n            listConfig,\r\n            shouldRenderCard,\r\n            groups\r\n        },\r\n        handlers: { onItemClick },\r\n        JSX: { CardsList }\r\n    }\r\n}","import { lazy, useContext, useMemo, useRef, useEffect } from 'react';\r\nimport { FilterPanelContext } from '../Contexts';\r\nimport { RangeType } from '../../helpers/enums';\r\nimport type { FilterOption } from '../../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\nimport type { IPersonaProps } from '@fluentui/react/lib/Persona';\r\n\r\nexport function usePanelFilterController() {\r\n    const { isOpen, onClose, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen, filterOptionsMatrix, availableFilters, top, footer, setFilterDate } = useContext(FilterPanelContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker, Label] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        const Label = lazy(() => import('@fluentui/react/lib/Label').then(({ Label }) => ({ default: Label })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker, Label];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if (!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string);\r\n        }\r\n        else if(option.selected && copyMap.has(option?.key as string) && option?.isDateComponent) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if (onOpen) onOpen(); }, []);\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0)\r\n            return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if (keyKind === keyToFilter)\r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    const getDefaultSelectedSlider = (keyToFilter: string): RangeType => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.find(([key]) => key === keyToFilter);\r\n        const mapWithSameKeyValue = mapWithSameKey?.[1]?.data;\r\n        if(mapWithSameKeyValue) \r\n            return mapWithSameKeyValue?.type;\r\n        return RangeType.NONE;\r\n    }\r\n\r\n    const getDefaultSelectedPeople = (keyToFilter: string): IPersonaProps[] => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.filter(([key]) => {\r\n            const keyKind = key?.split('_')[1];\r\n            return keyKind === keyToFilter\r\n        });\r\n        if(mapWithSameKey?.length > 0) {\r\n            const people = mapWithSameKey?.map(([_, value]) => value as IPersonaProps);\r\n            return people;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const onChangeTags = (options: FilterOption[]) => (tags: ITag[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(tags.length === 0) {\r\n            options.forEach(opt => {\r\n                if(copyMap.has(opt?.key as string))\r\n                    copyMap.delete(opt?.key as string);\r\n            });\r\n        } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n            copyMap.delete(lastAddedTag?.current?.key as string);\r\n            lastAddedTag.current = null; \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    const onTagSelected = (key: string) =>(selectedItem: ITag) => {\r\n        onAddOrRemoveToMap(key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n        lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n        return selectedItem;\r\n    }\r\n\r\n    const onResolveTagSuggestion = (options: FilterOption[]) => (currentFilter: string, tagList: ITag[], ) => {\r\n        const result = currentFilter\r\n        ? options.filter(opt => \r\n            opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n            && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n        return result;\r\n    }\r\n\r\n    const onRecordDateChange = (key: string) => (from: Date, to: Date, type: RangeType) => {\r\n        if((from || to) && type !== RangeType.NONE)\r\n            onAddOrRemoveToMap(key, {\r\n                key: key,\r\n                text: `${from?.toISOString()} - ${to?.toISOString()}`,\r\n                data: { from, to, type },\r\n                selected: true,\r\n                isDateComponent: true,\r\n                name: `${from?.toISOString()} - ${to?.toISOString()}`\r\n            } as unknown as FilterOption);\r\n        else {\r\n            const copyMap = new Map(actualFilteredValues);\r\n            copyMap.delete(key);\r\n            setFilterDate(p => {\r\n                p.delete(key);\r\n                return p;\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        }\r\n    }\r\n\r\n    const onChangePeople = (key: string) => (items: IPersonaProps[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(items.length === 0) {\r\n            actualFilteredValues?.forEach((_, k) => {\r\n                if(k?.split('_')?.[1] === key)\r\n                    copyMap.delete(k);\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        } \r\n        else {\r\n            items.forEach(i => {\r\n                onAddOrRemoveToMap(key, {\r\n                    key: i?.key,\r\n                    text: i?.text,\r\n                    data: i?.['data'],\r\n                    selected: true,\r\n                    isDateComponent: false,\r\n                    name: i?.text\r\n                } as unknown as FilterOption);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            isOpen,\r\n            actualFilteredValues,\r\n            panelTitle,\r\n            filterOptionsMatrix,\r\n            availableFilters\r\n        },\r\n        handlers: {\r\n            getDefaultDropdownSelectedKeys,\r\n            getDefaultSelectedTag,\r\n            getDefaultSelectedSlider,\r\n            getDefaultSelectedPeople,\r\n            onAddOrRemoveToMap,\r\n            onClose,\r\n            onCancel,\r\n            onApply,\r\n            onOpen,\r\n            setActualFilteredValues,\r\n            onChangeTags,\r\n            onTagSelected,\r\n            onResolveTagSuggestion,\r\n            onRecordDateChange,\r\n            onChangePeople\r\n        },\r\n        JSX: {\r\n            FluentPanel,\r\n            Dropdown,\r\n            PrimaryButton,\r\n            DefaultButton,\r\n            TagPicker,\r\n            Label,\r\n            top, footer\r\n        }\r\n    }\r\n}","export {GridView} from './GridView';","import type { Paths, TypeFrom } from 'bakutils-types';\r\n\r\nexport class Utils {\r\n\r\n    /**Tries to convert an ISO `string` to the locale format. */\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if (!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    /**Get a value from a deep nested object.\r\n     * \r\n     * @param obj The object to search in.\r\n     * @param path The path to the value, as an array of keys, separated by dots.\r\n     * @returns The value, if found.\r\n     * \r\n     * Theoretically, this function can be used to get the value from an `number[]` as the type of the `pathArr`, but I've not tested it.\r\n     */\r\n    public static getNestedObject<\r\n        /**Inferred string path from the given object  */\r\n        Path extends Paths<Obj, 8>,\r\n        ReturnV extends any = unknown,\r\n        Obj extends Record<any, any> = Record<any, any>>\r\n        (nestedObj: Obj, path: Path): ReturnV {\r\n        const pathAsArray = path?.split(\".\");\r\n        try {\r\n            return pathAsArray?.reduce((obj, key) => (obj && obj[key as string] !== 'undefined') ? obj[key as string] : undefined, nestedObj) as ReturnV;\r\n        } catch (e) {\r\n            console.error(e);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    public static setDeepValue = <\r\n    Obj extends Record<any, any>,\r\n    Path extends string = Paths<Obj, 4>\r\n    >(obj: Obj, path: Path, value: TypeFrom<Obj, Path>): Obj => {\r\n        if (Object(obj) !== obj) return obj; // When obj is not an object\r\n        // If not yet an array, get the keys from the string-path\r\n        if (!Array.isArray(path)) \r\n            (path as any) = path?.toString()?.match(/[^.[\\]]+/g) || []; \r\n        ((path as any)?.slice(0,-1) as any[]).reduce((a, c, i) => // Iterate all of them except the last one\r\n             Object(a[c]) === a[c] // Does the key exist and is its value an object?\r\n                 // Yes: then follow that path\r\n                 ? a[c] \r\n                 // No: create the key. Is the next key a potential array-index?\r\n                 : a[c] = Math.abs(path[i+1] as any)>>0 === +path[i+1] \r\n                       ? [] // Yes: assign a new array object\r\n                       : {}, // No: assign a new plain object\r\n             obj)[path[path.length-1]] = value; // Finally assign the value to the last key\r\n        return obj; // Return the top-level object to allow chaining\r\n    }\r\n\r\n    /**\r\n     * This is similar to `Object.keys`, but it traverses through the whole object hierarchy and separates the nested keys by dots.\r\n     */\r\n    public static getDeepKeys<\r\n    ResultKeys extends Array<Paths<Obj, 8>>, \r\n    Obj extends Record<any, any> = Record<any, any>>\r\n    (obj: Obj): ResultKeys | string[] {\r\n        let keys: string[] = [];\r\n        for (let key in obj) {\r\n            keys.push(key);\r\n            if (typeof obj[key] === \"object\") {\r\n                let subKeys = Utils.getDeepKeys(obj[key]) as string[];\r\n                keys = keys.concat(subKeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n}","\r\nexport enum RangeType {\r\n    NONE,\r\n    WEEK,\r\n    MONTH,\r\n    YEAR,\r\n    CUSTOM\r\n}\r\n\r\nexport enum IconClickCaller {\r\n    CLICK,\r\n    ENTER\r\n}\r\n\r\nexport enum GroupOrder {\r\n    ascending = 1,\r\n    descending\r\n}","import { RefObject, useCallback, useRef, useState } from \"react\";\r\n\r\n/**\r\n * This hook can be used when using ref inside useCallbacks\r\n * \r\n * Usage\r\n * ```tsx\r\n * const [refCallback, ref, toggle] = useRefWithCallback<HTMLSpanElement>();\r\n * const onClick = useCallback(() => {\r\n    if (ref.current) \r\n      ref.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [toggle]);\r\n\r\n  //Change the value of the ref with refCallback(value);\r\n\r\n  return (<span ref={refCallback} />);\r\n  ```\r\n * @returns \r\n */\r\nexport function useRefWithCallback<T>(initialValue: T): [\r\n    (value: T) => void,\r\n    RefObject<T>,\r\n    boolean\r\n] {\r\n    const ref = useRef<T | null>(initialValue);\r\n    const [toggleState, setToggle] = useState(false);\r\n    const refCallback = useCallback((value: T) => {\r\n        ref.current = value;\r\n        setToggle(val => !val);\r\n    }, []);\r\n\r\n    return [refCallback, ref, toggleState];\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/ChoiceGroup\");","module.exports = require(\"@fluentui/react/lib/DatePicker\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Label\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Slider\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"fast-sort\");","module.exports = require(\"react\");"],"sourceRoot":""}