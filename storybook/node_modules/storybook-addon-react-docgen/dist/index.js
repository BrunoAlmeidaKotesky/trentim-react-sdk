"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Story", {
  enumerable: true,
  get: function get() {
    return _Story["default"];
  }
});
exports.withPropsTable = void 0;

var _react = _interopRequireDefault(require("react"));

var _server = _interopRequireDefault(require("react-dom/server"));

var _nestedObjectAssign = _interopRequireDefault(require("nested-object-assign"));

var _addons = _interopRequireWildcard(require("@storybook/addons"));

var _Story = _interopRequireWildcard(require("./Components/Story"));

var _makeTableComponent = _interopRequireDefault(require("./Components/makeTableComponent"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultOptions = {
  propTables: [],
  maxPropsIntoLine: 3,
  maxPropObjectKeys: 3,
  maxPropArrayLength: 3,
  maxPropStringLength: 50
};

function addPropsTable(storyFn, context, docGenOptions) {
  var options = _objectSpread(_objectSpread({}, defaultOptions), docGenOptions); // Props.propTables can only be either an array of components or null
  // propTables option is allowed to be set to 'false' (a boolean)
  // if the option is false, replace it with null to avoid react warnings


  if (!options.propTables) {
    options.propTables = null;
  }

  return _objectSpread(_objectSpread({
    context: context,
    components: (0, _Story.getProps)({
      propTables: options.propTables,
      include: options.propTablesInclude,
      exclude: options.propTablesExclude,
      order: options.propTablesSortOrder,
      children: storyFn
    }).map(function (c) {
      return _objectSpread({}, c);
    }).filter(function (c) {
      return c && Object.keys(c).length;
    }),
    styles: typeof options.styles === 'function' ? options.styles : (0, _nestedObjectAssign["default"])({}, _Story.stylesheetBase, options.styles),
    propTables: (options.propTables || []).map(function (c) {
      return _objectSpread({}, c);
    }),
    propTablesInclude: options.propTablesInclude,
    propTablesExclude: options.propTablesExclude,
    propTablesSortOrder: options.propTablesSortOrder
  }, options.TableComponent && {
    PropTable: (0, _makeTableComponent["default"])(options.TableComponent)
  }), {}, {
    maxPropObjectKeys: options.maxPropObjectKeys,
    maxPropArrayLength: options.maxPropArrayLength,
    maxPropsIntoLine: options.maxPropsIntoLine,
    maxPropStringLength: options.maxPropStringLength,
    excludedPropTypes: options.excludedPropTypes
  });
}

var withPropsTable = (0, _addons.makeDecorator)({
  name: 'withPropsTable',
  parameterName: 'props',
  allowDeprecatedUsage: true,
  wrapper: function wrapper(getStory, context, _ref) {
    var options = _ref.options,
        parameters = _ref.parameters;

    var channel = _addons["default"].getChannel();

    var storyOptions = parameters || options;

    var mergedOptions = _objectSpread(_objectSpread({}, options), storyOptions);

    var content = getStory(context);
    var response = addPropsTable(content, context, mergedOptions);
    var shouldLegacyRender = Boolean(mergedOptions.TableComponent);

    if (shouldLegacyRender) {
      channel.emit('storybook/PropsTable/add_PropsTable', {
        legacy: _server["default"].renderToString( /*#__PURE__*/_react["default"].createElement(_Story["default"], response))
      });
    } else {
      channel.emit('storybook/PropsTable/add_PropsTable', response);
    }

    return content;
  }
});
exports.withPropsTable = withPropsTable;