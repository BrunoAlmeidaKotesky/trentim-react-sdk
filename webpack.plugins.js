const webpack = require('webpack');
const CircularDependencyPlugin = require('circular-dependency-plugin')
const UglifyJsPlugin = require('uglifyjs-webpack-plugin');
const { CleanWebpackPlugin } = require('clean-webpack-plugin')

module.exports = {
  plugins: [

    // new webpack.IgnorePlugin(/\/something$/),            // Ignore something
    // new webpack.IgnorePlugin(/^\.\/locale$/, /moment$/), // Ignore Moment's locale
    new webpack.optimize.OccurrenceOrderPlugin(),
    new UglifyJsPlugin({
      cache: true,
      parallel: true,
      uglifyOptions: {
        compress: false,
        ecma: 6,
        mangle: true,
        warnings: false, // Suppress uglification warnings
        pure_getters: true,
        unsafe: true,
        unsafe_comps: true,
        screw_ie8: true,
        conditionals: true,
        unused: true,
        comparisons: true,
        sequences: true,
        dead_code: true,
        evaluate: true,
        if_return: true,
        join_vars: true
      },
      sourceMap: true
    }),
    new CleanWebpackPlugin(),
    new CircularDependencyPlugin({
      // `onStart` is called before the cycle detection starts
      onStart({compilation}) {
        console.log('Circular Dependency: Start detecting webpack modules cycles');
      },
      exclude: /a\.js|node_modules/,
      // `onDetected` is called for each module that is cyclical
      onDetected({module: webpackModuleRecord, paths, compilation}) {
        // `paths` will be an Array of the relative module paths that make up the cycle
        // `module` will be the module record generated by webpack that caused the cycle
        if (paths[0].indexOf('node_modules/') > -1) return; // ignore node_modules
        compilation.errors.push(new Error(
          [
            'Circular Dependency detected:',
            webpackModuleRecord,
            paths.join(' -> '),
          ].join(' '),
        ))
      },
      // `onEnd` is called before the cycle detection ends
      onEnd({compilation}) {
        console.log('Circular Dependency: End detecting webpack modules cycles');
      },
    }),

  ]
};

