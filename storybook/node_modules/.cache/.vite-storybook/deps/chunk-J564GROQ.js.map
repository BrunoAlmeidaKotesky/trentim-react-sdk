{
  "version": 3,
  "sources": ["../../../entities/lib/decode_codepoint.js", "../../../entities/lib/decode.js", "../../../entities/lib/encode.js", "../../../entities/lib/index.js", "../../../ansi-to-html/src/ansi_to_html.js"],
  "sourcesContent": ["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n", "'use strict';\nconst entities = require('entities');\nconst defaults = {\n    fg: '#FFF',\n    bg: '#000',\n    newline: false,\n    escapeXML: false,\n    stream: false,\n    colors: getDefaultColors()\n};\n\nfunction getDefaultColors() {\n    const colors = {\n        0: '#000',\n        1: '#A00',\n        2: '#0A0',\n        3: '#A50',\n        4: '#00A',\n        5: '#A0A',\n        6: '#0AA',\n        7: '#AAA',\n        8: '#555',\n        9: '#F55',\n        10: '#5F5',\n        11: '#FF5',\n        12: '#55F',\n        13: '#F5F',\n        14: '#5FF',\n        15: '#FFF'\n    };\n\n    range(0, 5).forEach(red => {\n        range(0, 5).forEach(green => {\n            range(0, 5).forEach(blue => setStyleColor(red, green, blue, colors));\n        });\n    });\n\n    range(0, 23).forEach(function (gray) {\n        const c = gray + 232;\n        const l = toHexString(gray * 10 + 8);\n\n        colors[c] = '#' + l + l + l;\n    });\n\n    return colors;\n}\n\n/**\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {object} colors\n */\nfunction setStyleColor(red, green, blue, colors) {\n    const c = 16 + (red * 36) + (green * 6) + blue;\n    const r = red > 0 ? red * 40 + 55 : 0;\n    const g = green > 0 ? green * 40 + 55 : 0;\n    const b = blue > 0 ? blue * 40 + 55 : 0;\n\n    colors[c] = toColorHexString([r, g, b]);\n}\n\n/**\n * Converts from a number like 15 to a hex string like 'F'\n * @param {number} num\n * @returns {string}\n */\nfunction toHexString(num) {\n    let str = num.toString(16);\n\n    while (str.length < 2) {\n        str = '0' + str;\n    }\n\n    return str;\n}\n\n/**\n * Converts from an array of numbers like [15, 15, 15] to a hex string like 'FFF'\n * @param {[red, green, blue]} ref\n * @returns {string}\n */\nfunction toColorHexString(ref) {\n    const results = [];\n\n    for (const r of ref) {\n        results.push(toHexString(r));\n    }\n\n    return '#' + results.join('');\n}\n\n/**\n * @param {Array} stack\n * @param {string} token\n * @param {*} data\n * @param {object} options\n */\nfunction generateOutput(stack, token, data, options) {\n    let result;\n\n    if (token === 'text') {\n        result = pushText(data, options);\n    } else if (token === 'display') {\n        result = handleDisplay(stack, data, options);\n    } else if (token === 'xterm256') {\n        result = pushForegroundColor(stack, options.colors[data]);\n    } else if (token === 'rgb') {\n        result = handleRgb(stack, data);\n    }\n\n    return result;\n}\n\n/**\n * @param {Array} stack\n * @param {string} data\n * @returns {*}\n */\nfunction handleRgb(stack, data) {\n    data = data.substring(2).slice(0, -1);\n    const operation = +data.substr(0,2);\n\n    const color = data.substring(5).split(';');\n    const rgb = color.map(function(value) {\n        return ('0' + Number(value).toString(16)).substr(-2);\n    }).join('');\n\n    return pushStyle(stack, (operation === 38 ? 'color:#' : 'background-color:#') + rgb);\n}\n\n/**\n * @param {Array} stack\n * @param {number} code\n * @param {object} options\n * @returns {*}\n */\nfunction handleDisplay(stack, code, options) {\n    code = parseInt(code, 10);\n\n    const codeMap = {\n        '-1': () => '<br/>',\n        0: () => stack.length && resetStyles(stack),\n        1: () => pushTag(stack, 'b'),\n        3: () => pushTag(stack, 'i'),\n        4: () => pushTag(stack, 'u'),\n        8: () => pushStyle(stack, 'display:none'),\n        9: () => pushTag(stack, 'strike'),\n        22: () => pushStyle(stack, 'font-weight:normal;text-decoration:none;font-style:normal'),\n        23: () => closeTag(stack, 'i'),\n        24: () => closeTag(stack, 'u'),\n        39: () => pushForegroundColor(stack, options.fg),\n        49: () => pushBackgroundColor(stack, options.bg),\n        53: () => pushStyle(stack, 'text-decoration:overline')\n    };\n\n    let result;\n    if (codeMap[code]) {\n        result = codeMap[code]();\n    } else if (4 < code && code < 7) {\n        result = pushTag(stack, 'blink');\n    } else if (29 < code && code < 38) {\n        result = pushForegroundColor(stack, options.colors[code - 30]);\n    } else if ((39 < code && code < 48)) {\n        result = pushBackgroundColor(stack, options.colors[code - 40]);\n    } else if ((89 < code && code < 98)) {\n        result = pushForegroundColor(stack, options.colors[8 + (code - 90)]);\n    } else if ((99 < code && code < 108)) {\n        result = pushBackgroundColor(stack, options.colors[8 + (code - 100)]);\n    }\n\n    return result;\n}\n\n/**\n * Clear all the styles\n * @returns {string}\n */\nfunction resetStyles(stack) {\n    const stackClone = stack.slice(0);\n\n    stack.length = 0;\n\n    return stackClone.reverse().map(function (tag) {\n        return '</' + tag + '>';\n    }).join('');\n}\n\n/**\n * Creates an array of numbers ranging from low to high\n * @param {number} low\n * @param {number} high\n * @returns {Array}\n * @example range(3, 7); // creates [3, 4, 5, 6, 7]\n */\nfunction range(low, high) {\n    const results = [];\n\n    for (let j = low; j <= high; j++) {\n        results.push(j);\n    }\n\n    return results;\n}\n\n\n\n/**\n * Returns a new function that is true if value is NOT the same category\n * @param {string} category\n * @returns {function}\n */\nfunction notCategory(category) {\n    return function (e) {\n        return (category === null || e.category !== category) && category !== 'all';\n    };\n}\n\n/**\n * Converts a code into an ansi token type\n * @param {number} code\n * @returns {string}\n */\nfunction categoryForCode(code) {\n    code = parseInt(code, 10);\n    let result = null;\n\n    if (code === 0) {\n        result = 'all';\n    } else if (code === 1) {\n        result = 'bold';\n    } else if ((2 < code && code < 5)) {\n        result = 'underline';\n    } else if ((4 < code && code < 7)) {\n        result = 'blink';\n    } else if (code === 8) {\n        result = 'hide';\n    } else if (code === 9) {\n        result = 'strike';\n    } else if ((29 < code && code < 38) || code === 39 || (89 < code && code < 98)) {\n        result = 'foreground-color';\n    } else if ((39 < code && code < 48) || code === 49 || (99 < code && code < 108)) {\n        result = 'background-color';\n    }\n\n    return result;\n}\n\n/**\n * @param {string} text\n * @param {object} options\n * @returns {string}\n */\nfunction pushText(text, options) {\n    if (options.escapeXML) {\n        return entities.encodeXML(text);\n    }\n\n    return text;\n}\n\n/**\n * @param {Array} stack\n * @param {string} tag\n * @param {string} [style='']\n * @returns {string}\n */\nfunction pushTag(stack, tag, style) {\n    if (!style) {\n        style = '';\n    }\n\n    stack.push(tag);\n\n    return `<${tag}${style ? ` style=\"${style}\"` : ''}>`;\n}\n\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\nfunction pushStyle (stack, style) {\n    return pushTag(stack, 'span', style);\n}\n\nfunction pushForegroundColor(stack, color) {\n    return pushTag(stack, 'span', 'color:' + color);\n}\n\nfunction pushBackgroundColor(stack, color) {\n    return pushTag(stack, 'span', 'background-color:' + color);\n}\n\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\nfunction closeTag(stack, style) {\n    let last;\n\n    if (stack.slice(-1)[0] === style) {\n        last = stack.pop();\n    }\n\n    if (last) {\n        return '</' + style + '>';\n    }\n}\n\n/**\n * @param {string} text\n * @param {object} options\n * @param {function} callback\n * @returns {Array}\n */\nfunction tokenize(text, options, callback) {\n    let ansiMatch = false;\n    const ansiHandler = 3;\n\n    function remove() {\n        return '';\n    }\n\n    function removeXterm256(m, g1) {\n        callback('xterm256', g1);\n        return '';\n    }\n\n    function newline(m) {\n        if (options.newline) {\n            callback('display', -1);\n        } else {\n            callback('text', m);\n        }\n\n        return '';\n    }\n\n    function ansiMess(m, g1) {\n        ansiMatch = true;\n        if (g1.trim().length === 0) {\n            g1 = '0';\n        }\n\n        g1 = g1.trimRight(';').split(';');\n\n        for (const g of g1) {\n            callback('display', g);\n        }\n\n        return '';\n    }\n\n    function realText(m) {\n        callback('text', m);\n\n        return '';\n    }\n\n    function rgb(m) {\n        callback('rgb', m);\n\n        return '';\n    }\n\n    /* eslint no-control-regex:0 */\n    const tokens = [{\n        pattern: /^\\x08+/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[[012]?K/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[\\(B/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[[34]8;2;\\d+;\\d+;\\d+m/,\n        sub: rgb\n    }, {\n        pattern: /^\\x1b\\[38;5;(\\d+)m/,\n        sub: removeXterm256\n    }, {\n        pattern: /^\\n/,\n        sub: newline\n    },{\n        pattern: /^\\r+\\n/,\n        sub: newline\n    }, {\n        pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\n        sub: ansiMess\n    }, {\n        // CSI n J\n        // ED - Erase in Display Clears part of the screen.\n        // If n is 0 (or missing), clear from cursor to end of screen.\n        // If n is 1, clear from cursor to beginning of the screen.\n        // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).\n        // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer\n        //   (this feature was added for xterm and is supported by other terminal applications).\n        pattern: /^\\x1b\\[\\d?J/,\n        sub: remove\n    }, {\n        // CSI n ; m f\n        // HVP - Horizontal Vertical Position Same as CUP\n        pattern: /^\\x1b\\[\\d{0,3};\\d{0,3}f/,\n        sub: remove\n    }, {\n        // catch-all for CSI sequences?\n        pattern: /^\\x1b\\[?[\\d;]{0,3}/,\n        sub: remove\n    }, {\n        /**\n         * extracts real text - not containing:\n         * - `\\x1b' - ESC - escape (Ascii 27)\n         * - '\\x08' - BS - backspace (Ascii 8)\n         * - `\\n` - Newline - linefeed (LF) (ascii 10)\n         * - `\\r` - Windows Carriage Return (CR)\n         */\n        pattern: /^(([^\\x1b\\x08\\r\\n])+)/,\n        sub: realText\n    }];\n\n    function process(handler, i) {\n        if (i > ansiHandler && ansiMatch) {\n            return;\n        }\n\n        ansiMatch = false;\n\n        text = text.replace(handler.pattern, handler.sub);\n    }\n\n    const results1 = [];\n    let {length} = text;\n\n    outer:\n    while (length > 0) {\n        for (let i = 0, o = 0, len = tokens.length; o < len; i = ++o) {\n            const handler = tokens[i];\n            process(handler, i);\n\n            if (text.length !== length) {\n                // We matched a token and removed it from the text. We need to\n                // start matching *all* tokens against the new text.\n                length = text.length;\n                continue outer;\n            }\n        }\n\n        if (text.length === length) {\n            break;\n        }\n        results1.push(0);\n\n        length = text.length;\n    }\n\n    return results1;\n}\n\n/**\n * If streaming, then the stack is \"sticky\"\n *\n * @param {Array} stickyStack\n * @param {string} token\n * @param {*} data\n * @returns {Array}\n */\nfunction updateStickyStack(stickyStack, token, data) {\n    if (token !== 'text') {\n        stickyStack = stickyStack.filter(notCategory(categoryForCode(data)));\n        stickyStack.push({token, data, category: categoryForCode(data)});\n    }\n\n    return stickyStack;\n}\n\nclass Filter {\n    /**\n     * @param {object} options\n     * @param {string=} options.fg The default foreground color used when reset color codes are encountered.\n     * @param {string=} options.bg The default background color used when reset color codes are encountered.\n     * @param {boolean=} options.newline Convert newline characters to `<br/>`.\n     * @param {boolean=} options.escapeXML Generate HTML/XML entities.\n     * @param {boolean=} options.stream Save style state across invocations of `toHtml()`.\n     * @param {(string[] | {[code: number]: string})=} options.colors Can override specific colors or the entire ANSI palette.\n     */\n    constructor (options) {\n        options = options || {};\n\n        if (options.colors) {\n            options.colors = Object.assign({}, defaults.colors, options.colors);\n        }\n\n        this.options = Object.assign({}, defaults, options);\n        this.stack = [];\n        this.stickyStack = [];\n    }\n    /**\n     * @param {string | string[]} input\n     * @returns {string}\n     */\n    toHtml (input) {\n        input = typeof input === 'string' ? [input] : input;\n        const {stack, options} = this;\n        const buf = [];\n\n        this.stickyStack.forEach(element => {\n            const output = generateOutput(stack, element.token, element.data, options);\n\n            if (output) {\n                buf.push(output);\n            }\n        });\n\n        tokenize(input.join(''), options, (token, data) => {\n            const output = generateOutput(stack, token, data, options);\n\n            if (output) {\n                buf.push(output);\n            }\n\n            if (options.stream) {\n                this.stickyStack = updateStickyStack(this.stickyStack, token, data);\n            }\n        });\n\n        if (stack.length) {\n            buf.push(resetStyles(stack));\n        }\n\n        return buf.join('');\n    }\n}\n\nmodule.exports = Filter;\n"],
  "mappings": "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",
  "names": ["require_decode", "entities", "require", "defaults", "fg", "bg", "newline", "escapeXML", "stream", "colors", "getDefaultColors", "range", "forEach", "red", "green", "blue", "setStyleColor", "gray", "c", "l", "toHexString", "r", "g", "b", "toColorHexString", "num", "str", "toString", "length", "ref", "results", "push", "join", "generateOutput", "stack", "token", "data", "options", "result", "pushText", "handleDisplay", "pushForegroundColor", "handleRgb", "substring", "slice", "operation", "substr", "color", "split", "rgb", "map", "value", "Number", "pushStyle", "code", "parseInt", "codeMap", "resetStyles", "pushTag", "closeTag", "pushBackgroundColor", "stackClone", "reverse", "tag", "low", "high", "j", "notCategory", "category", "e", "categoryForCode", "text", "encodeXML", "style", "last", "pop", "tokenize", "callback", "ansiMatch", "ansiHandler", "remove", "removeXterm256", "m", "g1", "ansiMess", "trim", "trimRight", "realText", "tokens", "pattern", "sub", "process", "handler", "i", "replace", "results1", "outer", "o", "len", "updateStickyStack", "stickyStack", "filter", "Filter", "Object", "assign", "input", "buf", "element", "output", "module", "exports"]
}
