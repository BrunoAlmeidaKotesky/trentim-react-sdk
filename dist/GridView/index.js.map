{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/Card/Card.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/DateSlider.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridViewFilter.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridViewGrouping.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridViewMapper.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GroupPanel.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PeoplePicker.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/usePanelFilterController.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/enums.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/ChoiceGroup\"","webpack:///external \"@fluentui/react/lib/DatePicker\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Slider\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","InfoCard","React","memo","props","styles","card","backgroundColor","border","margin","borderRadius","position","display","flexDirection","width","height","userSelect","enableUserSelect","color","overflow","top","borderBottom","gridTemplateColumns","columnGap","padding","fontFamily","col","rightCol","alignItems","leftCol","cardTitle","WebkitLineClamp","WebkitBoxOrient","fontSize","lineHeight","projectCode","opacity","bottom","justifyContent","circleWrap","circle","background","status","marginLeft","linkButton","minWidth","onClick","e","onCardClick","style","cardSubtitle","cardRightColInformation","_a","containerStyle","_b","_c","values","_d","length","_e","map","idx","title","plantName","circleIndicator","_f","__assign","_g","_h","_j","Button_1","onClickDownButton","iconProps","iconName","createContext","enableFilter","enableSearch","enableCardView","customButtons","setIsFilterPanelOpen","undefined","searchBoxPlaceholder","setRenderAs","defaultButtonsOrder","group","search","filter","setIsGroupPanelOpen","isOpen","onApply","availableFilters","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","options","selectedGroupKeys","setSelectedGroupKeys","DateSliderComponent","useState","displayDatePicker","setDisplayDatePicker","fromDate","setFromDate","Date","toDate","setToDate","formatSliderValue","num","onSliderChange","_","val","onRecordDateRange","enums_1","NONE","lastWeek","setDate","getDate","WEEK","lastMonth","setMonth","getMonth","MONTH","lastYear","setFullYear","getFullYear","YEAR","useEffect","CUSTOM","defaultValues","slider","dateStrings","useMemo","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","showWeekNumbers","weekNumberFormatString","firstWeekOfYear","dateFormat","showGoToToday","Slider_1","min","max","step","defaultValue","container","valueFormat","onChanged","label","DatePicker_1","maxDate","strings","from","formatDate","date","toLocaleDateString","onSelectDate","getTime","minDate","to","GridView","useGridController","state","handlers","JSX","CardsList","actualRows","cols","isFilterPanelOpen","filterPanelConfig","groupPanelConfig","listConfig","shouldRenderCard","isGroupPanelOpen","groups","onItemClick","Contexts_1","Provider","ListOptions_1","zIndex","onRenderCustomComponent","DetailsList_1","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","item","cursor","items","columns","groupProps","isAllGroupsCollapsed","collapseAllVisibility","visible","onRenderHeader","showEmptyGroups","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","hidden","react_1","fallback","id","cardProps","gap","PanelFilter_1","GroupPanel_1","GridViewFilter","allRows","hiddenFields","filters","columnsToFilter","filterFromColumns","index","renderAs","renderFilterAs","keys","split","fieldName","data","stringObject","Utils","getNestedObject","toString","dateConversionOptions","shouldConvertToLocaleString","Utils_1","convertIsoToLocaleString","locales","formatOptions","text","uniqueOptions","obj","pos","arr","mapObj","indexOf","push","enableMultiple","setActualRows","setIsFilterPanel","selectedItems","size","groupedMaps","GridViewMapper_1","groupMaps","filteredRows","mapKey","filterFrom","forEach","isDate","ORrowsFromThisKey","rDate","Id","includes","apply","__spreadArray","entries","allMapValues","newFilteredItems","rowValue","some","v","hiddenKeys","GridViewGrouping","setGroups","setIsGroupPanel","emptyGroupLabel","keyAndName","defaultEmptyLabel","sort","b","reduce","acc","cur","valueFromKey","isKeyADate","find","concat","startIndex","count","g","lastAcc","GridViewMapper","mapsByKeyKind","keyName","doesNotHaveKey","has","sameMapsList","set","thisKindMap_1","GroupPanel","useContext","Panel","lazy","then","default","PrimaryButton","DefaultButton","RadioButton","ChoiceGroup","FluentPanel","isFooterAtBottom","onDismiss","onRenderFooter","marginRight","onChange","opt","keyWithName","defaultSelectedKey","__read","ListOptions","searchKeys","onSearchItem","enableGrouping","defaultStyles","order","className","newValue","placeholder","icon","PanelFilter","usePanelFilterController","Dropdown","TagPicker","getDefaultDropdownSelectedKeys","onAddOrRemoveToMap","getDefaultSelectedTag","getDefaultSelectedDate","Suspense","mapOptions","defaultSelectedKeys","multiSelect","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","onChangeTags","onItemSelected","onTagSelected","onResolveSuggestions","onResolveTagSuggestion","DateSlider_1","onRecordDateChange","PeoplePicker_1","people","getDefaultSelectedPeople","onChangePeople","suggestionProps","mostRecentlyUsedHeaderText","showRemoveButtons","suggestionsAvailableAlertText","suggestionsContainerAriaLabel","PeoplePicker","peopleList","setPeopleList","picker","useRef","onFilterChanged","filterText","currentPersonas","limitResults","filteredPersonas","filterPersonasByText","removeDuplicates","slice","doesTextStartWith","onRemoveSuggestion","indexPeopleList","newPeople","Pickers_1","onValidateInput","validateInput","componentRef","resolveDelay","toLowerCase","personas","possibleDupes","persona","listContainsPersona","input","valid","warning","invalid","setShouldRenderCard","setCols","headerOptions","setEnableGrouping","rows","setAllRows","console","error","Card","row","hasCustomCard","cProps","cardTitleKey","cardSubtitleKey","titleDateConversionOptions","subtitleDateConversionOptions","rightColumn","cIndicator","titleValue","_k","_l","_m","_o","marginBottom","fontWeight","convertedColumns","onRender","_2","fieldValue","onColumnClick","currentRows","column","isSortedDescending","isSorted","sortedItems","copyAndSort","GridViewFilter_1","onApplyFilter","buildFilters","hiddenFilterKeys","filterPanelTitle","groupPanelTitle","hiddenGroupKeys","GridViewGrouping_1","onApplyGrouping","itemValues","keys_1_1","containsText","_p","DropDown","lastAddedTag","rootItemKey","option","copyMap","selected","itemKey","isDateComponent","listContainsTagList","tag","tagList","compareTag","selectedKeys","k","keyToFilter","selectedTags","keyKind","mapWithSameKey","mapWithSameKeyValue","type","tags","current","selectedItem","currentFilter","result","f","toISOString","isNaN","isIsoDate","test","Intl","DateTimeFormat","format","columnKey","aValue","bValue","nestedObj","pathArr","subKeys","getDeepKeys","subkey","RangeType","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { IInfoCardProps } from '../models/interfaces/IInfoCardProps';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst InfoCard = React.memo((props: IInfoCardProps) => {\r\n    const styles: Record<string, CSSProperties> = {\r\n        card: {\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            border: \"1px solid #ababab\",\r\n            margin: \"0 0 16px\",\r\n            borderRadius: \"4px\",\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: props?.width || \"100%\",\r\n            height: props?.height || \"150px\",\r\n            userSelect: props?.enableUserSelect ? \"unset\" : \"none\",\r\n            color: \"#333\",\r\n            overflow: \"hidden\"\r\n        },\r\n        top: {\r\n            borderBottom: \"1px solid rgb(237, 235, 233)\",\r\n            overflow: \"hidden\",\r\n            height: \"100%\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 120px\",\r\n            columnGap: \"8px\",\r\n            padding: \"16px\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n        },\r\n        col: { display: \"flex\", flexDirection: \"column\" },\r\n        rightCol: { display: 'flex', flexDirection: 'column', alignItems: \"flex-end\" },\r\n        leftCol: { display: 'flex', flexDirection: 'column' },\r\n        cardTitle: {\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            WebkitBoxOrient: \"vertical\",\r\n            overflow: \"hidden\",\r\n            fontSize: \"18px\",\r\n            lineHeight: 1.4\r\n        },\r\n        projectCode: {\r\n            fontSize: \"16px\",\r\n            opacity: 0.8\r\n        },\r\n        bottom: {\r\n            display: \"flex\",\r\n            padding: \"6px 16px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"rgb(250, 249, 248)\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n\r\n        },\r\n        circleWrap: { display: \"inline-flex\", alignItems: \"center\" },\r\n        circle: {\r\n            width: \"16px\",\r\n            height: \"16px\",\r\n            background: \"#06ad51\",\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #06ad51\",\r\n            display: \"inline-block\"\r\n        },\r\n        status: { display: \"inline-block\", marginLeft: \"8px\" },\r\n        linkButton: { width: \"32px\", height: \"32px\", minWidth: \"32px\" }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={(e) => {\r\n            if (props.onCardClick)\r\n                props?.onCardClick(e);\r\n        }} style={styles.card}>\r\n            <div data-class-name=\"card-top\" style={styles.top}>\r\n                <div data-class-name=\"card-top-left\" style={styles.leftCol}>\r\n                    <div style={styles.cardTitle}>\r\n                        <span>{props?.cardTitle}</span>\r\n                    </div>\r\n                    <div style={styles.projectCode}>\r\n                        <span>{props?.cardSubtitle}</span>\r\n                    </div>\r\n                </div>\r\n                <div data-class-name=\"card-top-right\" style={props?.cardRightColInformation?.containerStyle ?? styles.rightCol}>\r\n                    {props?.cardRightColInformation?.values?.length > 0 && props?.cardRightColInformation?.values.map((value, idx) => (\r\n                        <div key={value?.title ?? idx} style={value?.style ?? styles.plantName}>\r\n                            <span>{value?.title}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div data-class-name=\"card-bottom\" style={styles.bottom}>\r\n                <div data-class-name=\"card-circle-wrapper\" style={styles.circleWrap}>\r\n                    <div style={props?.circleIndicator?.color ? { ...styles.circle, background: props?.circleIndicator?.color, border: `1px solid ${props?.circleIndicator?.color}` } : {}}></div>\r\n                    <span style={styles.status}>{props?.circleIndicator?.title}</span>\r\n                </div>\r\n                <div data-class-name=\"card-button-container\">\r\n                    <PrimaryButton onClick={props?.onClickDownButton} style={styles.linkButton} iconProps={{ iconName: props?.iconName || 'Page' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default InfoCard;","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IListOptions\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../models/interfaces/IGroupPanel';\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps>({ \r\n    enableFilter: true, \r\n    enableSearch: true,\r\n    enableCardView: true,\r\n    customButtons: [], \r\n    setIsFilterPanelOpen: undefined, \r\n    searchBoxPlaceholder: '',\r\n    setRenderAs: undefined, \r\n    defaultButtonsOrder: { group: 0, search: 1, filter: 2, card: 3 },\r\n    setIsGroupPanelOpen: undefined\r\n});\r\n\r\nexport const FilterPanelContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    availableFilters: [], \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined\r\n});\r\n\r\nexport const GroupPanelContext = createContext<IGroupPanel>({\r\n    isOpen: false, \r\n    onApply: undefined,\r\n    onCancel: undefined,\r\n    onClose: undefined,\r\n    onOpen: undefined,\r\n    panelTitle: '',\r\n    options: [],\r\n    selectedGroupKeys: null,\r\n    setSelectedGroupKeys: undefined\r\n});","import * as React from 'react';\r\nimport { RangeType } from '../helpers/enums';\r\nimport { Slider, ISliderProps } from '@fluentui/react/lib/Slider';\r\nimport { DatePicker } from '@fluentui/react/lib/DatePicker';\r\nimport type { IDateSliderProps } from '../models/interfaces/IDateSlider';\r\n\r\nfunction DateSliderComponent(props: IDateSliderProps) {\r\n    const [displayDatePicker, setDisplayDatePicker] = React.useState(false);\r\n    const [fromDate, setFromDate] = React.useState<Date>(null);\r\n    const [toDate, setToDate] = React.useState(new Date());\r\n    const formatSliderValue = (num: number): string => num === 0 ? 'Nenhum' : num === 1 ? 'Última Semana' : num === 2 ? 'Último Mês' : num === 3 ? 'Últimos Ano' : '';\r\n    const onSliderChange: ISliderProps['onChanged'] = (_, val) => {\r\n        if(val === 4)\r\n            setDisplayDatePicker(true);\r\n        else {\r\n            setDisplayDatePicker(false);\r\n            setFromDate(null);\r\n            setToDate(new Date());\r\n        }\r\n        if(val === 0) {\r\n            props.onRecordDateRange(null, null, RangeType.NONE);\r\n        }\r\n        else if(val === 1) {\r\n            const lastWeek = new Date();\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            props.onRecordDateRange(lastWeek, new Date(), RangeType.WEEK);\r\n        }\r\n        else if(val === 2) {\r\n            const lastMonth = new Date();\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            props.onRecordDateRange(lastMonth, new Date(), RangeType.MONTH);\r\n        }\r\n        else if(val === 3) {\r\n            const lastYear = new Date();\r\n            lastYear.setFullYear(lastYear.getFullYear() - 1);\r\n            props.onRecordDateRange(lastYear, new Date(), RangeType.YEAR);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(fromDate && toDate)\r\n            props.onRecordDateRange(fromDate, toDate, RangeType.CUSTOM);\r\n    }, [fromDate, toDate]);\r\n\r\n    React.useEffect(() => {\r\n        if(props?.defaultValues?.slider === 4 && !displayDatePicker)\r\n            setDisplayDatePicker(true);\r\n    }, [props?.defaultValues?.slider]);\r\n\r\n    const dateStrings = React.useMemo(() => ({\r\n        months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n        shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n        days: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\r\n        shortDays: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n        goToToday: 'Hoje',\r\n        prevMonthAriaLabel: 'Mês anterior',\r\n        nextMonthAriaLabel: 'Próximo mês',\r\n        prevYearAriaLabel: 'Ano anterior',\r\n        nextYearAriaLabel: 'Próximo ano',\r\n        closeButtonAriaLabel: 'Fechar',\r\n        isRequiredErrorMessage: 'Este campo é obrigatório.',\r\n        invalidInputErrorMessage: 'Valor de entrada inválido.',\r\n        isOutOfBoundsErrorMessage: 'Valor de entrada fora dos limites.',\r\n        showWeekNumbers: false,\r\n        weekNumberFormatString: '',\r\n        firstWeekOfYear: 0,\r\n        dateFormat: 'd',\r\n        showGoToToday: true,\r\n    }), []);\r\n\r\n    return (<>\r\n    <Slider\r\n        min={0} max={4} step={1}\r\n        defaultValue={props?.defaultValues?.slider ?? 0} styles={{container: { display: 'grid' }}}\r\n        valueFormat={formatSliderValue}\r\n        onChanged={onSliderChange}\r\n        label={props?.label}/>\r\n    {displayDatePicker && \r\n        <div>\r\n            {/**Translate Datepicker all props to portuguese*/}\r\n            <DatePicker\r\n                maxDate={toDate}\r\n                strings={dateStrings}\r\n                value={props?.defaultValues?.from ?? fromDate}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    if(d && !fromDate || !fromDate && d)\r\n                        setFromDate(d);\r\n                    else if(d && fromDate && fromDate.getTime() > d.getTime())\r\n                        setFromDate(d);\r\n                    else if(d && fromDate && fromDate.getTime() < d.getTime() && !toDate)\r\n                        setToDate(d);\r\n                }}\r\n                label=\"De\"/>\r\n            <DatePicker\r\n                minDate={fromDate}\r\n                strings={dateStrings}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    if(d && !toDate || !toDate && d)\r\n                        setToDate(d);\r\n                    else if(d && toDate && toDate.getTime() < d.getTime())\r\n                        setToDate(d);\r\n                    else if(d && toDate && toDate.getTime() > d.getTime())\r\n                        setFromDate(d);\r\n                }}\r\n                value={props?.defaultValues?.to ?? toDate}\r\n                label=\"Até\"/>\r\n        </div>\r\n    }\r\n    </>);\r\n}\r\n\r\nexport const DateSlider = React.memo(DateSliderComponent);","import * as React from 'react';\r\nimport { useGridController } from './hooks/useGridController';\r\nimport { FilterPanelContext, GroupPanelContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport GroupPanel from './GroupPanel';\r\nimport { ListOptions } from './ListOptions';\r\nimport { Suspense } from 'react';\r\n\r\n/** Mudar nome do componente talvez? Ele é mais do que só um Grid. */\r\nexport function GridView<T = any>(props: IGridListProps<T>) {\r\n    const {state, handlers, JSX} = useGridController(props);\r\n    const {CardsList} = JSX;\r\n    const {actualRows, cols, isFilterPanelOpen, filterPanelConfig, groupPanelConfig, listConfig, shouldRenderCard, isGroupPanelOpen, groups} = state;\r\n    const {onItemClick} = handlers;\r\n\r\n    return (\r\n        <GroupPanelContext.Provider value={groupPanelConfig}>\r\n        <FilterPanelContext.Provider value={filterPanelConfig}>\r\n        <ListOptionsContext.Provider value={listConfig}>\r\n            <div>\r\n                <ListOptions />\r\n                <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0 }}>\r\n                    {\r\n                    !!props?.onRenderCustomComponent ? actualRows?.map(i => props?.onRenderCustomComponent(i)) :\r\n                    !shouldRenderCard ? \r\n                    <DetailsList\r\n                        {...props?.detailsListProps}\r\n                        onRenderItemColumn={props?.onRenderItemColumn}\r\n                        onRenderRow={(p, defaultRender) => <div onClick={() => onItemClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onItemClick ? 'pointer' : 'default' } } })}</div>}\r\n                        items={actualRows} columns={cols}\r\n                        groups={groups}\r\n                        groupProps={{\r\n                            isAllGroupsCollapsed: /*props?.groups ? props?.groups.filter(gr => !gr?.isCollapsed)?.length === 0 :*/ true,\r\n                            collapseAllVisibility: CollapseAllVisibility.visible,\r\n                            onRenderHeader: (props, defaultRender) => {\r\n                                if (!props.group!.name)\r\n                                    return <></>;\r\n                                return defaultRender(props);\r\n                            },\r\n                            showEmptyGroups: false\r\n                        }}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                        onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                            <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                            </Sticky>)}\r\n                        checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                    /> :\r\n                    <Suspense fallback={'...'}>\r\n                        <div id=\"gridView-cardContainer\" style={props?.cardProps?.containerStyle ?? {display: 'grid', gap: 12, gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))'}}>\r\n                        {CardsList}\r\n                        </div>\r\n                    </Suspense>\r\n                    }\r\n                </div>\r\n                {isFilterPanelOpen && <PanelFilter />}\r\n                {isGroupPanelOpen && <GroupPanel />}\r\n            </div>\r\n        </ListOptionsContext.Provider>\r\n        </FilterPanelContext.Provider>\r\n        </GroupPanelContext.Provider>);\r\n}","import { Utils } from '../helpers/Utils';\r\nimport { GridViewMapper } from './GridViewMapper';\r\nimport type { IRow, TColumn } from '../models/interfaces/IGridView';\r\nimport type { ApplyFilter } from '../models/types/Common';\r\nimport type { FilterOption, IAvailableFilters } from '../models/interfaces/IPanelFilter';\r\n\r\nexport class GridViewFilter {\r\n\r\n    static onApplyFilter: ApplyFilter = ({allRows, setActualRows, setIsFilterPanel}) => (selectedItems) => {\r\n        /**Se não tiver nada no map, limpa os filtros. */\r\n        if(selectedItems.size === 0) {\r\n            setActualRows(allRows);\r\n            return setIsFilterPanel(false);\r\n        }\r\n        //Agrupa os maps selecionados em um outro grupo maior, dividindo por tipo. (key: tipo, value: map)\r\n        const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n        let filteredRows: IRow[] = [];\r\n        /**Para cada key principal dos maps selecionados */\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            //Se tivesse algo memorizando o filtro poderia colocar aqui, porém no momento ele sempre vai começar filtrando todas colunas inicialmente (idx 0).\r\n            const filterFrom = filteredRows?.length > 0 ? filteredRows : allRows;\r\n            //Para cada map selecionado\r\n            map?.forEach(value => {\r\n                const isDate = !!value?.data?.from && !!value?.data?.to;\r\n                const ORrowsFromThisKey = filterFrom.filter(r => {\r\n                    //Verifica se os dados do map são do tipo data.\r\n                    if(isDate) {\r\n                        const from: Date = value?.data?.from;\r\n                        const to: Date = value?.data?.to;\r\n                        const rDate: Date = new Date(Utils.getNestedObject(r, mapKey.split('.')));\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    //Se não for data, verifica se o valor do map é igual ao valor do map do row comparando os valores pela key.\r\n                    return Utils.getNestedObject(r, mapKey.split('.')) === value?.text;\r\n                });\r\n                //Se os rows filtrados do OR não estiverem no filteredRows, verificando pelo Id, adiciona. (Campos do tipo data não tem como comparar Id)\r\n                if(ORrowsFromThisKey.length > 0 && !filteredRows?.map(r => r?.Id)?.includes(value?.data?.Id))\r\n                    filteredRows.push(...ORrowsFromThisKey);\r\n            });\r\n        }\r\n        //Garante que o array filtrada não vai ter nenhum item repetido.\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        //Outra iteração dos maps selecionados, desta vez para verificar a condição de AND.\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            //Pega todos os possíveis valores do map atual.\r\n            const allMapValues = [...map.values()];\r\n            //Cria um novo array temporário, filtrando dos arays já filtrados, verificando se no allMapValues está presente no filteredRows.\r\n            const newFilteredItems = filteredRows.filter(r => {\r\n                const rowValue = Utils.getNestedObject(r, mapKey.split('.'));\r\n                //return allMapValues.map(v => v?.text).includes(rowValue as string); \r\n                return allMapValues.some(v => {\r\n                    if(v?.data?.from && v?.data?.to) {\r\n                        const from: Date = v?.data?.from;\r\n                        const to: Date = v?.data?.to;\r\n                        const rDate: Date = new Date(rowValue as string);\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return v?.text === rowValue\r\n                });\r\n            });\r\n            if(newFilteredItems?.length > 0)\r\n                filteredRows = newFilteredItems;\r\n        }\r\n        //Garante novamente que o array filtrada não vai ter nenhum item repetido.\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        setActualRows(filteredRows)\r\n        setIsFilterPanel(false);\r\n    }\r\n\r\n    /**Generate the components of each available column and it's unique values */\r\n    static buildFilters(allRows: IRow[], columns: TColumn<any>[], hiddenFields: string[]): IAvailableFilters[] {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = GridViewFilter.filterFromColumns(hiddenFields, columns);\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConversionOptions?.locales, col?.dateConversionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    static filterFromColumns = (hiddenKeys: string[], columns: TColumn<any>[]) => columns.filter(c => (!hiddenKeys?.includes(c?.key)));\r\n}","import { Utils } from '../helpers/Utils';\r\nimport type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { ApplyGrouping } from \"../models/types/Common\";\r\n\r\nexport class GridViewGrouping {\r\n    \r\n    static onApplyGrouping: ApplyGrouping = ({actualRows, cols, setGroups, setIsGroupPanel, emptyGroupLabel}) => (keyAndName) => {\r\n        const defaultEmptyLabel = emptyGroupLabel ?? 'Sem itens definidos';\r\n        if (!keyAndName || keyAndName?.split(';')?.[0] === '@NONE') {\r\n            setIsGroupPanel(false);\r\n            return setGroups(undefined);\r\n        }\r\n        const groups: IGroup[] = [...actualRows]\r\n            .sort((a, b) => (a?.Id as number) - (b?.Id as number))\r\n            .reduce<IGroup[]>((acc, cur) => {\r\n                const [key, name] = keyAndName?.split(';');\r\n                let valueFromKey = Utils.getNestedObject(cur, key.split('.')) as string ?? defaultEmptyLabel;\r\n                const isKeyADate = cols.find(i => i?.key === key)?.dateConversionOptions?.shouldConvertToLocaleString;\r\n                if (isKeyADate)\r\n                    valueFromKey = Utils.convertIsoToLocaleString(\r\n                        valueFromKey, \r\n                        cols.find(i => i?.key === key)?.dateConversionOptions?.locales, \r\n                        cols.find(i => i?.key === key)?.dateConversionOptions?.formatOptions);\r\n                \r\n                const group: IGroup = {\r\n                    key: valueFromKey,\r\n                    name: `${name}: ${valueFromKey}`,\r\n                    startIndex: 0,\r\n                    count: 1,\r\n                }\r\n                if (acc.length === 0) {\r\n                    acc.push(group)\r\n                    return acc\r\n                } else if (!acc?.map(i => i?.key).includes(valueFromKey)) {\r\n                    const count = acc?.filter(g => g?.key === valueFromKey).length;\r\n                    const startIndex = acc[acc.length - 1]?.startIndex + acc[acc.length - 1]?.count;\r\n                    acc.push({\r\n                        key: valueFromKey,\r\n                        name: `${name}: ${valueFromKey}`,\r\n                        startIndex,\r\n                        count\r\n                    });\r\n                }\r\n                const lastAcc = acc[acc.length - 1];\r\n                if (lastAcc?.key === valueFromKey)\r\n                    acc[acc.length - 1].count++;\r\n                return acc\r\n            }, []);\r\n        setGroups(groups);\r\n        setIsGroupPanel(false);\r\n    }\r\n}","import { SelectedItemsMap } from \"../models/interfaces/IPanelFilter\";\r\n\r\n/**Internal class to be used when using map data operations on the GridView component context as a whole. */\r\nexport class GridViewMapper {\r\n\r\n    /**\r\n     * Creates a new map collection with the first level keys being the real keys, and the values being the maps with selected maps (with key and values) \r\n     * @example \r\n     * ```ts\r\n     * const selectedItemsMap = new Map([['0_User.Title', data], ['1_User.Title', data]]);\r\n     * const groupedMap = GridViewMapper.groupMaps(selectedItemsMap);\r\n     * //It'll be: key: 'User.Title', value: [Map([['0_User.Title', data], ['1_User.Title', data]])]\r\n     * ```\r\n     **/\r\n    static groupMaps(selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            let keyName = key.split('_')[1];\r\n            if(!keyName && !key.includes('_'))\r\n                keyName = key;\r\n            const doesNotHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesNotHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense } from 'react';\r\nimport { GroupPanelContext } from './Contexts';\r\n\r\nfunction GroupPanel() {\r\n    const {isOpen, panelTitle, onApply, onCancel, onClose, options, selectedGroupKeys, setSelectedGroupKeys} = useContext(GroupPanelContext);\r\n    const [FluentPanel, PrimaryButton, DefaultButton, RadioButton] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const RadioButton = lazy(() => import('@fluentui/react/lib/ChoiceGroup').then(({ ChoiceGroup }) => ({ default: ChoiceGroup })));\r\n        return [Panel, PrimaryButton, DefaultButton, RadioButton];\r\n    }, []);\r\n\r\n    if(!isOpen) return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}\r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(selectedGroupKeys)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div>)}>\r\n                <h2>{panelTitle}</h2>\r\n                <Suspense fallback={'...'}>\r\n                    <RadioButton\r\n                        onChange={(_, opt) => {\r\n                            const keyWithName = `${opt?.key};${opt?.text}` as const;\r\n                            setSelectedGroupKeys(keyWithName);\r\n                        }}\r\n                        defaultSelectedKey={selectedGroupKeys?.split(';')?.[0] ?? undefined}\r\n                        options={[{key: '@NONE', text: 'Nenhum'} ,...options]}/>\r\n                </Suspense>\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(GroupPanel);","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {GroupPanelContext, ListOptionsContext} from './Contexts';\r\n\r\nexport const ListOptions = () => {\r\n    const {customButtons, enableFilter, enableSearch, searchKeys, onSearchItem, setIsFilterPanelOpen, defaultButtonsOrder, searchBoxPlaceholder, enableCardView, setRenderAs, enableGrouping} = React.useContext(ListOptionsContext);\r\n    const {onOpen} = React.useContext(GroupPanelContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        {enableGrouping &&\r\n        <DefaultButton \r\n            onClick={ _ => onOpen()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />}\r\n        {enableCardView && \r\n        <DefaultButton \r\n            onClick={_ => setRenderAs()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.card}}} iconProps={{iconName: 'GridViewMedium'}} />}\r\n        {customButtons?.length > 0 && customButtons?.map((b, idx) => \r\n            <PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>)}\r\n        {(enableSearch && searchKeys) && \r\n        <TextField \r\n            onChange={(_, newValue) => onSearchItem(newValue, searchKeys)} placeholder={searchBoxPlaceholder}\r\n            iconProps={{iconName: 'Search'}} styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => setIsFilterPanelOpen(true)} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport {DateSlider} from './DateSlider';\r\nimport {PeoplePicker} from './PeoplePicker';\r\nimport {usePanelFilterController} from './hooks/usePanelFilterController';\r\n\r\nfunction PanelFilter() {\r\n    const {JSX, state, handlers} = usePanelFilterController();\r\n    const {actualFilteredValues, panelTitle, availableFilters, isOpen} = state;\r\n    const {FluentPanel, PrimaryButton, Dropdown, TagPicker, DefaultButton} = JSX;\r\n    const {onClose, onCancel, getDefaultDropdownSelectedKeys, onAddOrRemoveToMap, getDefaultSelectedTag, getDefaultSelectedDate} = handlers;\r\n\r\n    if (!isOpen) return null;\r\n    return (\r\n        <React.Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => handlers.onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </React.Suspense>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </React.Suspense>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    const options = handlers.mapOptions(filter?.options);\r\n                    return (<React.Suspense key={filter?.key + \"-\" + idx} fallback={'...'}>\r\n                        {(filter.renderAs === 'Dropdown') ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={options}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        (filter.renderAs === 'SearchBox') ?\r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <label>{filter?.name}</label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{doNotLayer: true}}\r\n                            onChange={handlers.onChangeTags(options)}\r\n                            onItemSelected={handlers.onTagSelected(filter?.key)}\r\n                            onResolveSuggestions={handlers.onResolveTagSuggestion(options)} /></div> :\r\n                        (filter.renderAs === 'DateSlider') ?\r\n                        <DateSlider\r\n                            defaultValues={getDefaultSelectedDate(filter?.key)}\r\n                            onRecordDateRange={handlers.onRecordDateChange(filter?.key)}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            label={filter?.name}/> :\r\n                        (filter?.renderAs === 'PeoplePicker') ?\r\n                        <PeoplePicker \r\n                            label={filter?.name} key={filter?.key + \"-\" + idx}\r\n                            people={options}\r\n                            defaultSelectedItems={handlers.getDefaultSelectedPeople(filter?.key)}\r\n                            onChangePeople={handlers.onChangePeople(filter?.key)} /> : null\r\n                        }\r\n                    </React.Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </React.Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","import * as React from 'react';\r\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\r\nimport { CompactPeoplePicker, IBasePickerSuggestionsProps, ValidationState } from '@fluentui/react/lib/Pickers';\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n    suggestionsHeaderText: 'Pessoas sugeridas',\r\n    mostRecentlyUsedHeaderText: 'Pessoas mais recentes',\r\n    noResultsFoundText: 'Nenhum resultado encontrado',\r\n    loadingText: 'Carregando',\r\n    showRemoveButtons: true,\r\n    suggestionsAvailableAlertText: 'Sugestões disponíveis',\r\n    suggestionsContainerAriaLabel: 'Pessoas sugeridas',\r\n};\r\n\r\ninterface IPeoplePickerProps {\r\n    label: string;\r\n    people: IPersonaProps[];\r\n    onChangePeople: (items: IPersonaProps[]) => void;\r\n    defaultSelectedItems?: IPersonaProps[];\r\n}\r\n\r\nexport const PeoplePicker = (props: IPeoplePickerProps) => {\r\n    const [peopleList, setPeopleList] = React.useState<IPersonaProps[]>(props.people);\r\n    const picker = React.useRef(null);\r\n\r\n    const onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] | Promise<IPersonaProps[]> => {\r\n        if (!filterText)\r\n            return [];\r\n        let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\r\n        filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\r\n        filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\r\n        return filteredPersonas;\r\n    };\r\n\r\n    const filterPersonasByText = (filterText: string)=> peopleList.filter(item => doesTextStartWith(item.text as string, filterText));\r\n    \r\n    const onRemoveSuggestion = (item: IPersonaProps): void => {\r\n        const indexPeopleList: number = peopleList.indexOf(item);\r\n        if (indexPeopleList >= 0) {\r\n            const newPeople: IPersonaProps[] = peopleList\r\n                .slice(0, indexPeopleList)\r\n                .concat(peopleList.slice(indexPeopleList + 1));\r\n            setPeopleList(newPeople);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <CompactPeoplePicker\r\n                onResolveSuggestions={onFilterChanged}\r\n                getTextFromItem={getTextFromItem}\r\n                pickerSuggestionsProps={suggestionProps}\r\n                defaultSelectedItems={props?.defaultSelectedItems}\r\n                onChange={props?.onChangePeople}\r\n                className={'ms-PeoplePicker'}\r\n                onRemoveSuggestion={onRemoveSuggestion}\r\n                onValidateInput={validateInput}\r\n                componentRef={picker}\r\n                resolveDelay={300}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst doesTextStartWith = (text: string, filter: string) => text?.toLowerCase()?.indexOf(filter?.toLowerCase()) === 0;\r\n\r\nconst removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]) => personas.filter(persona => !listContainsPersona(persona, possibleDupes));\r\n\r\nfunction listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) \r\n        return false;\r\n    return personas.filter(item => item?.text === persona?.text)?.length > 0;\r\n}\r\n\r\nconst getTextFromItem = (persona: IPersonaProps) => persona?.text;\r\n\r\nfunction validateInput(input: string): ValidationState {\r\n    if (input.indexOf('@') !== -1) \r\n        return ValidationState.valid;\r\n    else if (input.length > 1) \r\n        return ValidationState.warning;\r\n    return ValidationState.invalid;\r\n}","import * as React from 'react';\r\nimport { useState, useEffect, useMemo, lazy } from 'react';\r\nimport {GridViewFilter} from '../GridViewFilter';\r\nimport {GridViewGrouping} from '../GridViewGrouping';\r\nimport type { IGridListProps, IRow, TColumn } from '../../models/interfaces/IGridView';\r\nimport type { IListOptionsProps } from '../../models/interfaces/IListOptions';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport type { IPanelFilterProps, SelectedItemsMap } from '../../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../../models/interfaces/IGroupPanel';\r\nimport type { IGroup } from '@fluentui/react/lib/DetailsList';\r\nimport type { KeyAndName } from '../../models/types/Common';\r\nimport type { IInfoCardProps } from '../../models/interfaces/IInfoCardProps';\r\n\r\nexport function useGridController(props: IGridListProps<any>) {\r\n    const [renderAs, setRenderAs] = useState<typeof props.renderAs>(props?.renderAs || 'list');\r\n    const [shouldRenderCard, setShouldRenderCard] = useState(props?.renderAs === 'card');\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [groups, setGroups] = useState<IGroup[]>(undefined);\r\n    const [enableGrouping, setEnableGrouping] = useState(props?.headerOptions?.enableGrouping ?? false);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [selectedGroupKeys, setSelectedGroupKeys] = useState<KeyAndName>(null);\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState(props?.rows ?? []);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n    const [isGroupPanelOpen, setIsGroupPanel] = useState(false);\r\n\r\n    useEffect(() => { setRenderAs(props?.renderAs); }, [props?.renderAs]);\r\n\r\n    useEffect(() => {\r\n        if(renderAs === 'card') {\r\n            setShouldRenderCard(true);\r\n            if(!props?.cardProps || Object?.keys(props?.cardProps)?.length === 0)\r\n                console.error(\"[GridView] - You are using `renderAs: card`, but you are not passing cardProps. This will not work.\");\r\n            return setEnableGrouping(false);\r\n        }\r\n        setShouldRenderCard(false);\r\n        if(props?.headerOptions?.enableGrouping)\r\n            setEnableGrouping(true);\r\n    }, [renderAs]);\r\n\r\n    const Card = useMemo(() => {\r\n        if(!shouldRenderCard) return null;\r\n        return lazy(() => import('../../Card/Card').then((module) => ({ default: module?.default })));\r\n    }, [shouldRenderCard]);\r\n\r\n    const CardsList = useMemo(() => {\r\n        if(!Card || renderAs === 'list') return null;\r\n        \r\n        return actualRows?.map(row => {\r\n            const hasCustomCard = !!props?.onRenderCustomComponent;\r\n            if(hasCustomCard)\r\n                return props?.onRenderCustomComponent(row);\r\n            const cProps = props?.cardProps;\r\n            let cardTitle: string = Utils.getNestedObject(row, cProps?.cardTitleKey?.split('.')) || '';\r\n            let cardSubtitle: string = Utils.getNestedObject(row, cProps?.cardSubtitleKey?.split('.')) || '';\r\n            if(cProps?.titleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardTitle = Utils.convertIsoToLocaleString(cardTitle, cProps?.titleDateConversionOptions?.locales, cProps?.titleDateConversionOptions?.formatOptions);\r\n            if(cProps?.subtitleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardSubtitle = Utils.convertIsoToLocaleString(cardSubtitle, cProps?.subtitleDateConversionOptions?.locales, cProps?.subtitleDateConversionOptions?.formatOptions);\r\n            const rightCol = cProps?.rightColumn;\r\n            const cIndicator = cProps?.circleIndicator;\r\n            let titleValue = Utils.getNestedObject(row, cIndicator?.title?.split('.') as any) as string;\r\n            if(cIndicator?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                titleValue = Utils.convertIsoToLocaleString(titleValue, cIndicator?.dateConversionOptions?.locales, cIndicator?.dateConversionOptions?.formatOptions);\r\n            const circleIndicator = {\r\n                ...cIndicator, \r\n                title: titleValue\r\n            };\r\n            const cardProps: IInfoCardProps = {\r\n                ...cProps,\r\n                cardTitle,\r\n                cardSubtitle,\r\n                cardRightColInformation: rightCol?.keys && {\r\n                    ...rightCol,\r\n                    values: rightCol?.keys?.map(opt => {\r\n                        let title: string = Utils.getNestedObject(row, opt?.title?.split('.') as any);\r\n                        if(opt?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                            title = Utils.convertIsoToLocaleString(title, opt?.dateConversionOptions?.locales, opt?.dateConversionOptions?.formatOptions);\r\n                        return ({title, style: opt?.style ??  { fontSize: 16, marginBottom: 4, fontWeight: 600 }});\r\n                    })\r\n                },\r\n                circleIndicator,\r\n                onClickDownButton: e => {\r\n                    onItemClick(row);\r\n                    if(cProps?.onCardClick)\r\n                        cProps?.onCardClick(e);\r\n                }\r\n            }\r\n            return (<Card key={row?.Id} {...cardProps} />);\r\n        })\r\n    }, [Card, props?.cardProps, actualRows, renderAs, props?.onRenderCustomComponent]);\r\n\r\n    useEffect(() => {\r\n        if (props?.columns?.length) {\r\n            const columns = props?.columns;\r\n            const convertedColumns = columns.map(c => {\r\n                if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue: string = Utils.getNestedObject(item, c?.fieldName?.split('.'));\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                    return c;\r\n                } else if (c?.dateConversionOptions?.shouldConvertToLocaleString) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConversionOptions?.locales, c?.dateConversionOptions?.formatOptions);\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                }\r\n                return c;\r\n            })\r\n            setCols(convertedColumns);\r\n        }\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        setActualRows(props?.rows);\r\n        setAllRows(props?.rows)\r\n    }, [props?.rows?.length]);\r\n\r\n    const onItemClick = (item: IRow) => !!props?.onItemClick && props?.onItemClick(item);\r\n    const onColumnClick = (currentRows: IRow[]) => (_: any, column: TColumn<any>): void => {\r\n        if(!column) return;\r\n        let isSortedDescending = column?.isSortedDescending;\r\n        if (column?.isSorted) \r\n          isSortedDescending = !isSortedDescending;\r\n    \r\n        const sortedItems = Utils.copyAndSort(currentRows, column?.key, isSortedDescending);\r\n        setActualRows(sortedItems);\r\n        setCols(c => c.map(col => {\r\n            col.isSorted = col.key === column?.key;\r\n            if (col?.isSorted) \r\n              col.isSortedDescending = isSortedDescending;\r\n            return col;\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCols(columns => [...columns.map(c => ({...c, onColumnClick: onColumnClick(actualRows)}))]);\r\n    }, [actualRows?.length]);\r\n\r\n    const filterPanelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: GridViewFilter.onApplyFilter({allRows, setActualRows, setIsFilterPanel}),\r\n        onCancel: () => { setIsFilterPanel(false); },\r\n        onClose: () =>  { setIsFilterPanel(false); },\r\n        availableFilters: GridViewFilter.buildFilters(allRows, cols, props?.hiddenFilterKeys as string[]),\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues\r\n    }\r\n\r\n    const groupPanelConfig: IGroupPanel = {\r\n        isOpen: isGroupPanelOpen,\r\n        onCancel: () => { setIsGroupPanel(false); },\r\n        onClose: () =>  { setIsGroupPanel(false); },\r\n        onOpen: () => { setIsGroupPanel(true); },\r\n        panelTitle: props?.groupPanelTitle ?? 'Agrupar',\r\n        setSelectedGroupKeys,\r\n        selectedGroupKeys,\r\n        options: GridViewFilter.filterFromColumns(props?.hiddenGroupKeys as string[], cols)?.map(c => ({key: c?.key, text: c?.name})) ?? [],\r\n        onApply: GridViewGrouping.onApplyGrouping({\r\n            actualRows,\r\n            cols,\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n        })\r\n    }\r\n\r\n    const listConfig: IListOptionsProps = {\r\n        ...props?.headerOptions,\r\n        onSearchItem: (text, keys) => {\r\n            const filteredRows: IRow[] = []; \r\n            if(!text)\r\n                filteredRows.push(...allRows);\r\n            else {\r\n                filteredRows.push(...allRows?.filter(item => {\r\n                    const itemValues: string[] = [];\r\n                    for (const key of keys) {\r\n                        const value = Utils.getNestedObject(item, (key as string)?.split('.'));\r\n                        if(value !== undefined && value !== null)\r\n                            itemValues.push(value.toString());\r\n                    }\r\n                    const containsText = itemValues.some(v => v?.toLowerCase().includes(text?.toLowerCase()));\r\n                    return containsText;\r\n                }));\r\n            } \r\n            setActualRows(filteredRows);\r\n        },\r\n        setRenderAs: () => {\r\n            if(renderAs === 'card')\r\n                return setRenderAs('list');\r\n            setRenderAs('card');\r\n        },\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        setIsGroupPanelOpen: (value) => { setIsGroupPanel(value); },\r\n        enableSearch: props?.headerOptions?.enableSearch ?? true,\r\n        enableFilter: props?.headerOptions?.enableFilter ?? true,\r\n        enableCardView: props?.headerOptions?.enableCardView ?? false,\r\n        enableGrouping\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            cols,\r\n            filterPanelConfig,\r\n            groupPanelConfig,\r\n            isFilterPanelOpen,\r\n            isGroupPanelOpen,\r\n            listConfig,\r\n            shouldRenderCard,\r\n            groups\r\n        },\r\n        handlers: {\r\n            onItemClick\r\n        },\r\n        JSX: { CardsList }\r\n    }\r\n}","import { lazy, useContext, useMemo, useRef, useEffect } from 'react';\r\nimport { FilterPanelContext } from '../Contexts';\r\nimport { RangeType } from '../../helpers/enums';\r\nimport type { FilterOption } from '../../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\nimport type { IPersonaProps } from '@fluentui/react/lib/Persona';\r\n\r\nexport function usePanelFilterController() {\r\n    const { isOpen, onClose, availableFilters, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen } = useContext(FilterPanelContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if (!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string);\r\n        }\r\n        else if(option.selected && copyMap.has(option?.key as string) && option?.isDateComponent) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if (onOpen) onOpen(); }, []);\r\n\r\n    const mapOptions = (options: FilterOption[]) => {\r\n        return options\r\n        .filter(i => (i?.text !== null && i?.text !== undefined))\r\n        .map<FilterOption>(({ key, text, data }) => ({\r\n            key,\r\n            text,\r\n            data\r\n        }));\r\n    }\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0)\r\n            return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if (keyKind === keyToFilter)\r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    const getDefaultSelectedDate = (keyToFilter: string): {slider: RangeType, from: Date, to: Date} => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.find(([key]) => key === keyToFilter);\r\n        const mapWithSameKeyValue = mapWithSameKey?.[1]?.data;\r\n        if(mapWithSameKeyValue)\r\n            return {slider: mapWithSameKeyValue?.type, from: mapWithSameKeyValue?.from, to: mapWithSameKeyValue?.to};\r\n        return {\r\n            slider: RangeType.NONE,\r\n            from: null,\r\n            to: null\r\n        }\r\n    }\r\n\r\n    const getDefaultSelectedPeople = (keyToFilter: string): IPersonaProps[] => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.filter(([key]) => {\r\n            const keyKind = key?.split('_')[1];\r\n            return keyKind === keyToFilter\r\n        });\r\n        if(mapWithSameKey?.length > 0) {\r\n            const people = mapWithSameKey?.map(([_, value]) => value as IPersonaProps);\r\n            return people;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const onChangeTags = (options: FilterOption[]) => (tags: ITag[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(tags.length === 0) {\r\n            options.forEach(opt => {\r\n                if(copyMap.has(opt?.key as string))\r\n                    copyMap.delete(opt?.key as string);\r\n            });\r\n        } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n            copyMap.delete(lastAddedTag?.current?.key as string);\r\n            lastAddedTag.current = null; \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    const onTagSelected = (key: string) =>(selectedItem: ITag) => {\r\n        onAddOrRemoveToMap(key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n        lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n        return selectedItem;\r\n    }\r\n\r\n    const onResolveTagSuggestion = (options: FilterOption[]) => (currentFilter: string, tagList: ITag[], ) => {\r\n        const result = currentFilter\r\n        ? options.filter(opt => \r\n            opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n            && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n        return result;\r\n    }\r\n\r\n    const onRecordDateChange = (key: string) => (from: Date, to: Date, type: RangeType) => {\r\n        if(from && to && type !== RangeType.NONE)\r\n            onAddOrRemoveToMap(key, {\r\n                key: key,\r\n                text: `${from?.toISOString()} - ${to?.toISOString()}`,\r\n                data: { from, to, type },\r\n                selected: true,\r\n                isDateComponent: true,\r\n                name: `${from?.toISOString()} - ${to?.toISOString()}`\r\n            } as unknown as FilterOption);\r\n        else {\r\n            const copyMap = new Map(actualFilteredValues);\r\n            copyMap.delete(key);\r\n            setActualFilteredValues(copyMap);\r\n        }\r\n    }\r\n\r\n    const onChangePeople = (key: string) => (items: IPersonaProps[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(items.length === 0) {\r\n            actualFilteredValues?.forEach((_, k) => {\r\n                if(k?.split('_')?.[1] === key)\r\n                    copyMap.delete(k);\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        } \r\n        else {\r\n            items.forEach(i => {\r\n                onAddOrRemoveToMap(key, {\r\n                    key: i?.key,\r\n                    text: i?.text,\r\n                    data: i?.['data'],\r\n                    selected: true,\r\n                    isDateComponent: false,\r\n                    name: i?.text\r\n                } as unknown as FilterOption);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            isOpen,\r\n            actualFilteredValues,\r\n            panelTitle,\r\n            availableFilters\r\n        },\r\n        handlers: {\r\n            getDefaultDropdownSelectedKeys,\r\n            getDefaultSelectedTag,\r\n            getDefaultSelectedDate,\r\n            getDefaultSelectedPeople,\r\n            onAddOrRemoveToMap,\r\n            onClose,\r\n            onCancel,\r\n            onApply,\r\n            onOpen,\r\n            setActualFilteredValues,\r\n            onChangeTags,\r\n            onTagSelected,\r\n            onResolveTagSuggestion,\r\n            onRecordDateChange,\r\n            mapOptions,\r\n            onChangePeople\r\n        },\r\n        JSX: {\r\n            FluentPanel,\r\n            Dropdown,\r\n            PrimaryButton,\r\n            DefaultButton,\r\n            TagPicker\r\n        }\r\n    }\r\n}","export {GridView} from './GridView';","\r\nexport class Utils {\r\n\r\n    /**Tries to convert an ISO `string` to the locale format. */\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        return items.slice(0).sort((a: T, b: T) => {\r\n            const aValue = Utils.getNestedObject(a, columnKey?.split('.'));\r\n            const bValue = Utils.getNestedObject(b, columnKey?.split('.'));\r\n            return ((isSortedDescending ? aValue < bValue : aValue > bValue) ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**Get a value from a deep nested object.\r\n     * \r\n     * @param obj The object to search in.\r\n     * @param path The path to the value, as an array of keys, separated by dots.\r\n     * @returns The value, if found.\r\n     * \r\n     * Theoretically, this function can be used to get the value from an `number[]` as the type of the `pathArr`, but I've not tested it.\r\n     */\r\n    public static getNestedObject<Path, ReturnV extends any, Obj extends Record<any, any>>(nestedObj: Obj, pathArr: Path[]): ReturnV {\r\n        return pathArr?.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj) as ReturnV;\r\n    }\r\n\r\n    public static getDeepKeys(obj: Record<any, any>): string[] {\r\n        let keys: string[] = [];\r\n        for(let key in obj) {\r\n            keys.push(key);\r\n            if(typeof obj[key] === \"object\") {\r\n                let subKeys = Utils.getDeepKeys(obj[key]);\r\n                keys = keys.concat(subKeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n}","\r\nexport enum RangeType {\r\n    NONE,\r\n    WEEK,\r\n    MONTH,\r\n    YEAR,\r\n    CUSTOM\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/ChoiceGroup\");","module.exports = require(\"@fluentui/react/lib/DatePicker\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Slider\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"react\");"],"sourceRoot":""}