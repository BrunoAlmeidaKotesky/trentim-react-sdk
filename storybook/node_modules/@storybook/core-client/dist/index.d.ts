import { ClientApi } from '@storybook/client-api';
export { ClientApi } from '@storybook/client-api';
export { StoryStore } from '@storybook/store';
import { AnyFramework, Store_WebProjectAnnotations, ArgsStoryFn } from '@storybook/types';

interface CoreClient_RendererImplementation<TFramework extends AnyFramework> {
    decorateStory?: Store_WebProjectAnnotations<TFramework>['applyDecorators'];
    render?: ArgsStoryFn<TFramework>;
}
interface CoreClient_ClientAPIFacade {
    storiesOf: (...args: any[]) => never;
    raw: (...args: any[]) => never;
}
interface CoreClient_StartReturnValue<TFramework extends AnyFramework> {
    forceReRender: () => void;
    configure: any;
    clientApi: ClientApi<TFramework> | CoreClient_ClientAPIFacade;
}
declare function start<TFramework extends AnyFramework>(renderToDOM: Store_WebProjectAnnotations<TFramework>['renderToDOM'], { decorateStory, render }?: CoreClient_RendererImplementation<TFramework>): CoreClient_StartReturnValue<TFramework>;

export { start };
