import * as u from "react";
import { _ as A, C as ae, H as Ne, J as ie, a7 as Fe, au as Se, b0 as Re, g as j, a1 as Q, x as z, ax as re, b1 as we, b2 as He, b3 as Pe, a$ as fe, B as b, Y, aA as Ie, ao as De, Q as _e, a0 as J, a5 as $, b4 as Me, K as Ae, z as se, A as ye, b5 as Oe, W as Ve, L as le, N as h, P as G, R as Le, a2 as We, ap as ze, b6 as Ge, T as Te, aq as je, ar as qe, as as xe, ah as Ce, at as Be, aQ as Ze, $ as me, b7 as Ue, aU as $e, b8 as Ke, t as Qe, i as Ye, a_ as he, X as ve, O as Je, b9 as Xe, ba as et } from "./IconButton.c64bd954.mjs";
var tt = function(r) {
  A(o, r);
  function o(t) {
    var e = r.call(this, t) || this;
    return e.state = {
      isRendered: ae() === void 0
    }, e;
  }
  return o.prototype.componentDidMount = function() {
    var t = this, e = this.props.delay;
    this._timeoutId = window.setTimeout(function() {
      t.setState({
        isRendered: !0
      });
    }, e);
  }, o.prototype.componentWillUnmount = function() {
    this._timeoutId && clearTimeout(this._timeoutId);
  }, o.prototype.render = function() {
    return this.state.isRendered ? u.Children.only(this.props.children) : null;
  }, o.defaultProps = {
    delay: 0
  }, o;
}(u.Component), rt = ["TEMPLATE", "STYLE", "SCRIPT"];
function ot(r) {
  var o = Ne(r);
  if (!o)
    return function() {
    };
  for (var t = []; r !== o.body && r.parentElement; ) {
    for (var e = 0, n = r.parentElement.children; e < n.length; e++) {
      var l = n[e], a = l.getAttribute("aria-hidden");
      l !== r && (a == null ? void 0 : a.toLowerCase()) !== "true" && rt.indexOf(l.tagName) === -1 && t.push([l, a]);
    }
    r = r.parentElement;
  }
  return t.forEach(function(s) {
    var c = s[0];
    c.setAttribute("aria-hidden", "true");
  }), function() {
    nt(t), t = [];
  };
}
function nt(r) {
  r.forEach(function(o) {
    var t = o[0], e = o[1];
    e ? t.setAttribute("aria-hidden", e) : t.removeAttribute("aria-hidden");
  });
}
function it(r) {
  return r.clientWidth < r.scrollWidth;
}
function at(r) {
  return r.clientHeight < r.scrollHeight;
}
function st(r) {
  return it(r) || at(r);
}
var lt = function() {
  var r, o = ae();
  return !((r = o == null ? void 0 : o.navigator) === null || r === void 0) && r.userAgent ? o.navigator.userAgent.indexOf("rv:11.0") > -1 : !1;
}, oe = {
  boxShadow: "none",
  margin: 0,
  padding: 0,
  boxSizing: "border-box"
}, jt = {
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
};
function be(r) {
  return {
    selectors: {
      "::placeholder": r,
      ":-ms-input-placeholder": r,
      "::-ms-input-placeholder": r
    }
  };
}
var qt = function() {
  var r = ie({});
  return u.useEffect(
    function() {
      return function() {
        for (var o = 0, t = Object.keys(r); o < t.length; o++) {
          var e = t[o];
          clearTimeout(e);
        }
      };
    },
    [r]
  ), ie({
    setTimeout: function(o, t) {
      var e = setTimeout(o, t);
      return r[e] = 1, e;
    },
    clearTimeout: function(o) {
      delete r[o], clearTimeout(o);
    }
  });
}, ut = "FocusTrapZone", dt = function(r, o, t) {
  u.useImperativeHandle(r, function() {
    return {
      get previouslyFocusedElement() {
        return o;
      },
      focus: t
    };
  }, [o, t]);
}, P = u.forwardRef(function(r, o) {
  var t = u.useRef(null), e = u.useRef(null), n = u.useRef(null), l = Fe(t, o), a = Se(void 0, r.id), s = Re(), c = j(r, Q), i = ie(function() {
    return {
      previouslyFocusedElementOutsideTrapZone: void 0,
      previouslyFocusedElementInTrapZone: void 0,
      disposeFocusHandler: void 0,
      disposeClickHandler: void 0,
      hasFocus: !1,
      unmodalize: void 0
    };
  }), p = r.ariaLabelledBy, d = r.className, C = r.children, y = r.componentRef, T = r.disabled, v = r.disableFirstFocus, B = v === void 0 ? !1 : v, F = r.disabled, k = F === void 0 ? !1 : F, N = r.elementToFocusOnDismiss, S = r.forceFocusInsideTrap, x = S === void 0 ? !0 : S, I = r.focusPreviouslyFocusedInnerElement, D = r.firstFocusableSelector, E = r.firstFocusableTarget, q = r.ignoreExternalFocusing, O = r.isClickableOutsideFocusTrap, V = O === void 0 ? !1 : O, f = r.onFocus, Z = r.onBlur, R = r.onFocusCapture, g = r.onBlurCapture, L = r.enableAriaHiddenSiblings, W = {
    "aria-hidden": !0,
    style: {
      pointerEvents: "none",
      position: "fixed"
    },
    tabIndex: T ? -1 : 0,
    "data-is-visible": !0,
    "data-is-focus-trap-zone-bumper": !0
  }, w = u.useCallback(function() {
    if (I && i.previouslyFocusedElementInTrapZone && z(t.current, i.previouslyFocusedElementInTrapZone)) {
      re(i.previouslyFocusedElementInTrapZone);
      return;
    }
    var m = typeof D == "string" ? D : D && D(), _ = null;
    t.current && (typeof E == "string" ? _ = t.current.querySelector(E) : E ? _ = E(t.current) : m && (_ = t.current.querySelector("." + m)), _ || (_ = we(t.current, t.current.firstChild, !1, !1, !1, !0))), _ && re(_);
  }, [D, E, I, i]), U = u.useCallback(function(m) {
    if (!T) {
      var _ = m === i.hasFocus ? n.current : e.current;
      if (t.current) {
        var X = m === i.hasFocus ? He(t.current, _, !0, !1) : Pe(t.current, _, !0, !1);
        X && (X === e.current || X === n.current ? w() : X.focus());
      }
    }
  }, [T, w, i]), H = u.useCallback(function(m) {
    g == null || g(m);
    var _ = m.relatedTarget;
    m.relatedTarget === null && (_ = s.activeElement), z(t.current, _) || (i.hasFocus = !1);
  }, [s, i, g]), Ee = u.useCallback(function(m) {
    R == null || R(m), m.target === e.current ? U(!0) : m.target === n.current && U(!1), i.hasFocus = !0, m.target !== m.currentTarget && !(m.target === e.current || m.target === n.current) && (i.previouslyFocusedElementInTrapZone = m.target);
  }, [R, i, U]), ue = u.useCallback(function() {
    if (P.focusStack = P.focusStack.filter(function(_) {
      return a !== _;
    }), s) {
      var m = s.activeElement;
      !q && i.previouslyFocusedElementOutsideTrapZone && typeof i.previouslyFocusedElementOutsideTrapZone.focus == "function" && (z(t.current, m) || m === s.body) && (i.previouslyFocusedElementOutsideTrapZone === e.current || i.previouslyFocusedElementOutsideTrapZone === n.current || re(i.previouslyFocusedElementOutsideTrapZone));
    }
  }, [s, a, q, i]), de = u.useCallback(function(m) {
    if (!T && P.focusStack.length && a === P.focusStack[P.focusStack.length - 1]) {
      var _ = m.target;
      z(t.current, _) || (w(), i.hasFocus = !0, m.preventDefault(), m.stopPropagation());
    }
  }, [T, a, w, i]), ce = u.useCallback(function(m) {
    if (!T && P.focusStack.length && a === P.focusStack[P.focusStack.length - 1]) {
      var _ = m.target;
      _ && !z(t.current, _) && (w(), i.hasFocus = !0, m.preventDefault(), m.stopPropagation());
    }
  }, [T, a, w, i]), pe = u.useCallback(function() {
    x && !i.disposeFocusHandler ? i.disposeFocusHandler = fe(window, "focus", de, !0) : !x && i.disposeFocusHandler && (i.disposeFocusHandler(), i.disposeFocusHandler = void 0), !V && !i.disposeClickHandler ? i.disposeClickHandler = fe(window, "click", ce, !0) : V && i.disposeClickHandler && (i.disposeClickHandler(), i.disposeClickHandler = void 0);
  }, [ce, de, x, V, i]);
  return u.useEffect(function() {
    var m = t.current;
    return pe(), function() {
      (!T || x || !z(m, s == null ? void 0 : s.activeElement)) && ue();
    };
  }, [pe]), u.useEffect(function() {
    var m = x !== void 0 ? x : !0, _ = T !== void 0 ? T : !1;
    if (!_ || m) {
      if (k)
        return;
      P.focusStack.push(a), i.previouslyFocusedElementOutsideTrapZone = N || s.activeElement, !B && !z(t.current, i.previouslyFocusedElementOutsideTrapZone) && w(), !i.unmodalize && t.current && L && (i.unmodalize = ot(t.current));
    } else
      (!m || _) && (ue(), i.unmodalize && i.unmodalize());
    N && i.previouslyFocusedElementOutsideTrapZone !== N && (i.previouslyFocusedElementOutsideTrapZone = N);
  }, [N, x, T]), ct(function() {
    i.disposeClickHandler && (i.disposeClickHandler(), i.disposeClickHandler = void 0), i.disposeFocusHandler && (i.disposeFocusHandler(), i.disposeFocusHandler = void 0), i.unmodalize && i.unmodalize(), delete i.previouslyFocusedElementInTrapZone, delete i.previouslyFocusedElementOutsideTrapZone;
  }), dt(y, i.previouslyFocusedElementInTrapZone, w), u.createElement(
    "div",
    b({}, c, { className: d, ref: l, "aria-labelledby": p, onFocusCapture: Ee, onFocus: f, onBlur: Z, onBlurCapture: H }),
    u.createElement("div", b({}, W, { ref: e })),
    C,
    u.createElement("div", b({}, W, { ref: n }))
  );
}), ct = function(r) {
  var o = u.useRef(r);
  o.current = r, u.useEffect(function() {
    return function() {
      o.current && o.current();
    };
  }, [r]);
};
P.displayName = ut;
P.focusStack = [];
var pt = Y(), ft = function(r) {
  A(o, r);
  function o() {
    var t = r !== null && r.apply(this, arguments) || this;
    return t._onRenderContent = function(e) {
      return typeof e.content == "string" ? u.createElement("p", { className: t._classNames.subText }, e.content) : u.createElement("div", { className: t._classNames.subText }, e.content);
    }, t;
  }
  return o.prototype.render = function() {
    var t = this.props, e = t.className, n = t.calloutProps, l = t.directionalHint, a = t.directionalHintForRTL, s = t.styles, c = t.id, i = t.maxWidth, p = t.onRenderContent, d = p === void 0 ? this._onRenderContent : p, C = t.targetElement, y = t.theme;
    return this._classNames = pt(s, {
      theme: y,
      className: e || n && n.className,
      beakWidth: n && n.beakWidth,
      gapSpace: n && n.gapSpace,
      maxWidth: i
    }), u.createElement(
      Ie,
      b({ target: C, directionalHint: l, directionalHintForRTL: a }, n, j(this.props, Q, ["id"]), { className: this._classNames.root }),
      u.createElement("div", { className: this._classNames.content, id: c, onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, d(this.props, this._onRenderContent))
    );
  }, o.defaultProps = {
    directionalHint: De.topCenter,
    maxWidth: "364px",
    calloutProps: {
      isBeakVisible: !0,
      beakWidth: 16,
      gapSpace: 0,
      setInitialFocus: !0,
      doNotLayer: !1
    }
  }, o;
}(u.Component), mt = function(r) {
  var o = r.className, t = r.beakWidth, e = t === void 0 ? 16 : t, n = r.gapSpace, l = n === void 0 ? 0 : n, a = r.maxWidth, s = r.theme, c = s.semanticColors, i = s.fonts, p = s.effects, d = -(Math.sqrt(e * e / 2) + l) + 1 / window.devicePixelRatio;
  return {
    root: [
      "ms-Tooltip",
      s.fonts.medium,
      _e.fadeIn200,
      {
        background: c.menuBackground,
        boxShadow: p.elevation8,
        padding: "8px",
        maxWidth: a,
        selectors: {
          ":after": {
            content: "''",
            position: "absolute",
            bottom: d,
            left: d,
            right: d,
            top: d,
            zIndex: 0
          }
        }
      },
      o
    ],
    content: [
      "ms-Tooltip-content",
      i.small,
      {
        position: "relative",
        zIndex: 1,
        color: c.menuItemText,
        wordWrap: "break-word",
        overflowWrap: "break-word",
        overflow: "hidden"
      }
    ],
    subText: [
      "ms-Tooltip-subtext",
      {
        fontSize: "inherit",
        fontWeight: "inherit",
        color: "inherit",
        margin: 0
      }
    ]
  };
}, ht = J(ft, mt, void 0, {
  scope: "Tooltip"
}), K;
(function(r) {
  r[r.zero = 0] = "zero", r[r.medium = 1] = "medium", r[r.long = 2] = "long";
})(K || (K = {}));
var te;
(function(r) {
  r[r.Parent = 0] = "Parent", r[r.Self = 1] = "Self";
})(te || (te = {}));
var vt = Y(), bt = function(r) {
  A(o, r);
  function o(t) {
    var e = r.call(this, t) || this;
    return e._tooltipHost = u.createRef(), e._defaultTooltipId = $("tooltip"), e.show = function() {
      e._toggleTooltip(!0);
    }, e.dismiss = function() {
      e._hideTooltip();
    }, e._getTargetElement = function() {
      if (!!e._tooltipHost.current) {
        var n = e.props.overflowMode;
        if (n !== void 0)
          switch (n) {
            case te.Parent:
              return e._tooltipHost.current.parentElement;
            case te.Self:
              return e._tooltipHost.current;
          }
        return e._tooltipHost.current;
      }
    }, e._onTooltipFocus = function(n) {
      if (e._ignoreNextFocusEvent) {
        e._ignoreNextFocusEvent = !1;
        return;
      }
      e._onTooltipMouseEnter(n);
    }, e._onTooltipBlur = function(n) {
      e._ignoreNextFocusEvent = (document == null ? void 0 : document.activeElement) === n.target, e._hideTooltip();
    }, e._onTooltipMouseEnter = function(n) {
      var l = e.props, a = l.overflowMode, s = l.delay;
      if (o._currentVisibleTooltip && o._currentVisibleTooltip !== e && o._currentVisibleTooltip.dismiss(), o._currentVisibleTooltip = e, a !== void 0) {
        var c = e._getTargetElement();
        if (c && !st(c))
          return;
      }
      if (!(n.target && Me(n.target, e._getTargetElement())))
        if (e._clearDismissTimer(), e._clearOpenTimer(), s !== K.zero) {
          e.setState({ isAriaPlaceholderRendered: !0 });
          var i = e._getDelayTime(s);
          e._openTimerId = e._async.setTimeout(function() {
            e._toggleTooltip(!0);
          }, i);
        } else
          e._toggleTooltip(!0);
    }, e._onTooltipMouseLeave = function(n) {
      var l = e.props.closeDelay;
      e._clearDismissTimer(), e._clearOpenTimer(), l ? e._dismissTimerId = e._async.setTimeout(function() {
        e._toggleTooltip(!1);
      }, l) : e._toggleTooltip(!1), o._currentVisibleTooltip === e && (o._currentVisibleTooltip = void 0);
    }, e._onTooltipKeyDown = function(n) {
      (n.which === Ae.escape || n.ctrlKey) && e.state.isTooltipVisible && (e._hideTooltip(), n.stopPropagation());
    }, e._clearDismissTimer = function() {
      e._async.clearTimeout(e._dismissTimerId);
    }, e._clearOpenTimer = function() {
      e._async.clearTimeout(e._openTimerId);
    }, e._hideTooltip = function() {
      e._clearOpenTimer(), e._clearDismissTimer(), e._toggleTooltip(!1);
    }, e._toggleTooltip = function(n) {
      e.state.isAriaPlaceholderRendered && e.setState({
        isAriaPlaceholderRendered: !1
      }), e.state.isTooltipVisible !== n && e.setState({ isTooltipVisible: n }, function() {
        return e.props.onTooltipToggle && e.props.onTooltipToggle(n);
      });
    }, e._getDelayTime = function(n) {
      switch (n) {
        case K.medium:
          return 300;
        case K.long:
          return 500;
        default:
          return 0;
      }
    }, se(e), e.state = {
      isAriaPlaceholderRendered: !1,
      isTooltipVisible: !1
    }, e._async = new ye(e), e;
  }
  return o.prototype.render = function() {
    var t = this.props, e = t.calloutProps, n = t.children, l = t.content, a = t.directionalHint, s = t.directionalHintForRTL, c = t.hostClassName, i = t.id, p = t.setAriaDescribedBy, d = p === void 0 ? !0 : p, C = t.tooltipProps, y = t.styles, T = t.theme;
    this._classNames = vt(y, {
      theme: T,
      className: c
    });
    var v = this.state, B = v.isAriaPlaceholderRendered, F = v.isTooltipVisible, k = i || this._defaultTooltipId, N = !!(l || C && C.onRenderContent && C.onRenderContent()), S = F && N, x = d && F && N ? k : void 0;
    return u.createElement(
      "div",
      b({ className: this._classNames.root, ref: this._tooltipHost }, { onFocusCapture: this._onTooltipFocus }, { onBlurCapture: this._onTooltipBlur }, { onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave, onKeyDown: this._onTooltipKeyDown, role: "none", "aria-describedby": x }),
      n,
      S && u.createElement(ht, b({ id: k, content: l, targetElement: this._getTargetElement(), directionalHint: a, directionalHintForRTL: s, calloutProps: Oe({}, e, {
        onDismiss: this._hideTooltip,
        onMouseEnter: this._onTooltipMouseEnter,
        onMouseLeave: this._onTooltipMouseLeave
      }), onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave }, j(this.props, Q), C)),
      B && u.createElement("div", { id: k, role: "none", style: Ve }, l)
    );
  }, o.prototype.componentWillUnmount = function() {
    o._currentVisibleTooltip && o._currentVisibleTooltip === this && (o._currentVisibleTooltip = void 0), this._async.dispose();
  }, o.defaultProps = {
    delay: K.medium
  }, o;
}(u.Component), gt = {
  root: "ms-TooltipHost",
  ariaPlaceholder: "ms-TooltipHost-aria-placeholder"
}, _t = function(r) {
  var o = r.className, t = r.theme, e = le(gt, t);
  return {
    root: [
      e.root,
      {
        display: "inline"
      },
      o
    ]
  };
}, Zt = J(bt, _t, void 0, {
  scope: "TooltipHost"
}), ke = function() {
  return {
    position: "absolute",
    width: 1,
    right: 31,
    top: 8,
    bottom: 8
  };
};
function yt(r) {
  var o, t, e, n, l, a = r.semanticColors, s = r.palette, c = a.buttonBackground, i = a.buttonBackgroundPressed, p = a.buttonBackgroundHovered, d = a.buttonBackgroundDisabled, C = a.buttonText, y = a.buttonTextHovered, T = a.buttonTextDisabled, v = a.buttonTextChecked, B = a.buttonTextCheckedHovered;
  return {
    root: {
      backgroundColor: c,
      color: C
    },
    rootHovered: {
      backgroundColor: p,
      color: y,
      selectors: (o = {}, o[h] = {
        borderColor: "Highlight",
        color: "Highlight"
      }, o)
    },
    rootPressed: {
      backgroundColor: i,
      color: v
    },
    rootExpanded: {
      backgroundColor: i,
      color: v
    },
    rootChecked: {
      backgroundColor: i,
      color: v
    },
    rootCheckedHovered: {
      backgroundColor: i,
      color: B
    },
    rootDisabled: {
      color: T,
      backgroundColor: d,
      selectors: (t = {}, t[h] = {
        color: "GrayText",
        borderColor: "GrayText",
        backgroundColor: "Window"
      }, t)
    },
    splitButtonContainer: {
      selectors: (e = {}, e[h] = {
        border: "none"
      }, e)
    },
    splitButtonMenuButton: {
      color: s.white,
      backgroundColor: "transparent",
      selectors: {
        ":hover": {
          backgroundColor: s.neutralLight,
          selectors: (n = {}, n[h] = {
            color: "Highlight"
          }, n)
        }
      }
    },
    splitButtonMenuButtonDisabled: {
      backgroundColor: a.buttonBackgroundDisabled,
      selectors: {
        ":hover": {
          backgroundColor: a.buttonBackgroundDisabled
        }
      }
    },
    splitButtonDivider: b(b({}, ke()), { backgroundColor: s.neutralTertiaryAlt, selectors: (l = {}, l[h] = {
      backgroundColor: "WindowText"
    }, l) }),
    splitButtonDividerDisabled: {
      backgroundColor: r.palette.neutralTertiaryAlt
    },
    splitButtonMenuButtonChecked: {
      backgroundColor: s.neutralQuaternaryAlt,
      selectors: {
        ":hover": {
          backgroundColor: s.neutralQuaternaryAlt
        }
      }
    },
    splitButtonMenuButtonExpanded: {
      backgroundColor: s.neutralQuaternaryAlt,
      selectors: {
        ":hover": {
          backgroundColor: s.neutralQuaternaryAlt
        }
      }
    },
    splitButtonMenuIcon: {
      color: a.buttonText
    },
    splitButtonMenuIconDisabled: {
      color: a.buttonTextDisabled
    }
  };
}
function Tt(r) {
  var o, t, e, n, l, a, s, c, i, p = r.palette, d = r.semanticColors;
  return {
    root: {
      backgroundColor: d.primaryButtonBackground,
      border: "1px solid " + d.primaryButtonBackground,
      color: d.primaryButtonText,
      selectors: (o = {}, o[h] = b({ color: "Window", backgroundColor: "WindowText", borderColor: "WindowText" }, G()), o["." + Le + " &:focus"] = {
        selectors: {
          ":after": {
            border: "none",
            outlineColor: p.white
          }
        }
      }, o)
    },
    rootHovered: {
      backgroundColor: d.primaryButtonBackgroundHovered,
      border: "1px solid " + d.primaryButtonBackgroundHovered,
      color: d.primaryButtonTextHovered,
      selectors: (t = {}, t[h] = {
        color: "Window",
        backgroundColor: "Highlight",
        borderColor: "Highlight"
      }, t)
    },
    rootPressed: {
      backgroundColor: d.primaryButtonBackgroundPressed,
      border: "1px solid " + d.primaryButtonBackgroundPressed,
      color: d.primaryButtonTextPressed,
      selectors: (e = {}, e[h] = b({ color: "Window", backgroundColor: "WindowText", borderColor: "WindowText" }, G()), e)
    },
    rootExpanded: {
      backgroundColor: d.primaryButtonBackgroundPressed,
      color: d.primaryButtonTextPressed
    },
    rootChecked: {
      backgroundColor: d.primaryButtonBackgroundPressed,
      color: d.primaryButtonTextPressed
    },
    rootCheckedHovered: {
      backgroundColor: d.primaryButtonBackgroundPressed,
      color: d.primaryButtonTextPressed
    },
    rootDisabled: {
      color: d.primaryButtonTextDisabled,
      backgroundColor: d.primaryButtonBackgroundDisabled,
      selectors: (n = {}, n[h] = {
        color: "GrayText",
        borderColor: "GrayText",
        backgroundColor: "Window"
      }, n)
    },
    splitButtonContainer: {
      selectors: (l = {}, l[h] = {
        border: "none"
      }, l)
    },
    splitButtonDivider: b(b({}, ke()), { backgroundColor: p.white, selectors: (a = {}, a[h] = {
      backgroundColor: "Window"
    }, a) }),
    splitButtonMenuButton: {
      backgroundColor: d.primaryButtonBackground,
      color: d.primaryButtonText,
      selectors: (s = {}, s[h] = {
        backgroundColor: "WindowText"
      }, s[":hover"] = {
        backgroundColor: d.primaryButtonBackgroundHovered,
        selectors: (c = {}, c[h] = {
          color: "Highlight"
        }, c)
      }, s)
    },
    splitButtonMenuButtonDisabled: {
      backgroundColor: d.primaryButtonBackgroundDisabled,
      selectors: {
        ":hover": {
          backgroundColor: d.primaryButtonBackgroundDisabled
        }
      }
    },
    splitButtonMenuButtonChecked: {
      backgroundColor: d.primaryButtonBackgroundPressed,
      selectors: {
        ":hover": {
          backgroundColor: d.primaryButtonBackgroundPressed
        }
      }
    },
    splitButtonMenuButtonExpanded: {
      backgroundColor: d.primaryButtonBackgroundPressed,
      selectors: {
        ":hover": {
          backgroundColor: d.primaryButtonBackgroundPressed
        }
      }
    },
    splitButtonMenuIcon: {
      color: d.primaryButtonText
    },
    splitButtonMenuIconDisabled: {
      color: p.neutralTertiary,
      selectors: (i = {}, i[h] = {
        color: "GrayText"
      }, i)
    }
  };
}
var xt = "32px", Ct = "80px", Bt = We(function(r, o, t) {
  var e = ze(r), n = Ge(r), l = {
    root: {
      minWidth: Ct,
      height: xt
    },
    label: {
      fontWeight: Te.semibold
    }
  };
  return je(e, l, t ? Tt(r) : yt(r), n, o);
}), kt = function(r) {
  A(o, r);
  function o() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return o.prototype.render = function() {
    var t = this.props, e = t.primary, n = e === void 0 ? !1 : e, l = t.styles, a = t.theme;
    return u.createElement(qe, b({}, this.props, { variantClassName: n ? "ms-Button--primary" : "ms-Button--default", styles: Bt(a, l, n), onRenderDescription: xe }));
  }, o = Ce([
    Be("DefaultButton", ["theme", "styles"], !0)
  ], o), o;
}(u.Component), Ut = function(r) {
  A(o, r);
  function o() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return o.prototype.render = function() {
    return u.createElement(kt, b({}, this.props, { primary: !0, onRenderDescription: xe }));
  }, o = Ce([
    Be("PrimaryButton", ["theme", "styles"], !0)
  ], o), o;
}(u.Component), Et = Y({
  cacheSize: 100
}), Nt = function(r) {
  A(o, r);
  function o() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return o.prototype.render = function() {
    var t = this.props, e = t.as, n = e === void 0 ? "label" : e, l = t.children, a = t.className, s = t.disabled, c = t.styles, i = t.required, p = t.theme, d = Et(c, {
      className: a,
      disabled: s,
      required: i,
      theme: p
    });
    return u.createElement(n, b({}, j(this.props, Q), { className: d.root }), l);
  }, o;
}(u.Component), Ft = function(r) {
  var o, t = r.theme, e = r.className, n = r.disabled, l = r.required, a = t.semanticColors, s = Te.semibold, c = a.bodyText, i = a.disabledBodyText, p = a.errorText;
  return {
    root: [
      "ms-Label",
      t.fonts.medium,
      {
        fontWeight: s,
        color: c,
        boxSizing: "border-box",
        boxShadow: "none",
        margin: 0,
        display: "block",
        padding: "5px 0",
        wordWrap: "break-word",
        overflowWrap: "break-word"
      },
      n && {
        color: i,
        selectors: (o = {}, o[h] = b({ color: "GrayText" }, G()), o)
      },
      l && {
        selectors: {
          "::after": {
            content: "' *'",
            color: p,
            paddingRight: 12
          }
        }
      },
      e
    ]
  };
}, St = J(Nt, Ft, void 0, {
  scope: "Label"
}), Rt = Y(), wt = "", M = "TextField", Ht = "RedEye", Pt = "Hide", It = function(r) {
  A(o, r);
  function o(t) {
    var e = r.call(this, t) || this;
    e._textElement = u.createRef(), e._onFocus = function(a) {
      e.props.onFocus && e.props.onFocus(a), e.setState({ isFocused: !0 }, function() {
        e.props.validateOnFocusIn && e._validate(e.value);
      });
    }, e._onBlur = function(a) {
      e.props.onBlur && e.props.onBlur(a), e.setState({ isFocused: !1 }, function() {
        e.props.validateOnFocusOut && e._validate(e.value);
      });
    }, e._onRenderLabel = function(a) {
      var s = a.label, c = a.required, i = e._classNames.subComponentStyles ? e._classNames.subComponentStyles.label : void 0;
      return s ? u.createElement(St, { required: c, htmlFor: e._id, styles: i, disabled: a.disabled, id: e._labelId }, a.label) : null;
    }, e._onRenderDescription = function(a) {
      return a.description ? u.createElement("span", { className: e._classNames.description }, a.description) : null;
    }, e._onRevealButtonClick = function(a) {
      e.setState(function(s) {
        return { isRevealingPassword: !s.isRevealingPassword };
      });
    }, e._onInputChange = function(a) {
      var s, c, i = a.target, p = i.value, d = ne(e.props, e.state) || "";
      if (p === void 0 || p === e._lastChangeValue || p === d) {
        e._lastChangeValue = void 0;
        return;
      }
      e._lastChangeValue = p, (c = (s = e.props).onChange) === null || c === void 0 || c.call(s, a, p), e._isControlled || e.setState({ uncontrolledValue: p });
    }, se(e), e._async = new ye(e), process.env.NODE_ENV !== "production" && Ze(M, t, {
      errorMessage: "onGetErrorMessage"
    }), e._fallbackId = $(M), e._descriptionId = $(M + "Description"), e._labelId = $(M + "Label"), e._prefixId = $(M + "Prefix"), e._suffixId = $(M + "Suffix"), e._warnControlledUsage();
    var n = t.defaultValue, l = n === void 0 ? wt : n;
    return typeof l == "number" && (l = String(l)), e.state = {
      uncontrolledValue: e._isControlled ? void 0 : l,
      isFocused: !1,
      errorMessage: ""
    }, e._delayedValidate = e._async.debounce(e._validate, e.props.deferredValidationTime), e._lastValidation = 0, e;
  }
  return Object.defineProperty(o.prototype, "value", {
    get: function() {
      return ne(this.props, this.state);
    },
    enumerable: !1,
    configurable: !0
  }), o.prototype.componentDidMount = function() {
    this._adjustInputHeight(), this.props.validateOnLoad && this._validate(this.value);
  }, o.prototype.componentWillUnmount = function() {
    this._async.dispose();
  }, o.prototype.getSnapshotBeforeUpdate = function(t, e) {
    return {
      selection: [this.selectionStart, this.selectionEnd]
    };
  }, o.prototype.componentDidUpdate = function(t, e, n) {
    var l = this.props, a = (n || {}).selection, s = a === void 0 ? [null, null] : a, c = s[0], i = s[1];
    !!t.multiline != !!l.multiline && e.isFocused && (this.focus(), c !== null && i !== null && c >= 0 && i >= 0 && this.setSelectionRange(c, i)), t.value !== l.value && (this._lastChangeValue = void 0);
    var p = ne(t, e), d = this.value;
    p !== d && (this._warnControlledUsage(t), this.state.errorMessage && !l.errorMessage && this.setState({ errorMessage: "" }), this._adjustInputHeight(), ge(l) && this._delayedValidate(d));
  }, o.prototype.render = function() {
    var t = this.props, e = t.borderless, n = t.className, l = t.disabled, a = t.invalid, s = t.iconProps, c = t.inputClassName, i = t.label, p = t.multiline, d = t.required, C = t.underlined, y = t.prefix, T = t.resizable, v = t.suffix, B = t.theme, F = t.styles, k = t.autoAdjustHeight, N = t.canRevealPassword, S = t.revealPasswordAriaLabel, x = t.type, I = t.onRenderPrefix, D = I === void 0 ? this._onRenderPrefix : I, E = t.onRenderSuffix, q = E === void 0 ? this._onRenderSuffix : E, O = t.onRenderLabel, V = O === void 0 ? this._onRenderLabel : O, f = t.onRenderDescription, Z = f === void 0 ? this._onRenderDescription : f, R = this.state, g = R.isFocused, L = R.isRevealingPassword, W = this._errorMessage, w = typeof a == "boolean" ? a : !!W, U = !!N && x === "password" && Dt(), H = this._classNames = Rt(F, {
      theme: B,
      className: n,
      disabled: l,
      focused: g,
      required: d,
      multiline: p,
      hasLabel: !!i,
      hasErrorMessage: w,
      borderless: e,
      resizable: T,
      hasIcon: !!s,
      underlined: C,
      inputClassName: c,
      autoAdjustHeight: k,
      hasRevealButton: U
    });
    return u.createElement(
      "div",
      { ref: this.props.elementRef, className: H.root },
      u.createElement(
        "div",
        { className: H.wrapper },
        V(this.props, this._onRenderLabel),
        u.createElement(
          "div",
          { className: H.fieldGroup },
          (y !== void 0 || this.props.onRenderPrefix) && u.createElement("div", { className: H.prefix, id: this._prefixId }, D(this.props, this._onRenderPrefix)),
          p ? this._renderTextArea() : this._renderInput(),
          s && u.createElement(me, b({ className: H.icon }, s)),
          U && u.createElement(
            "button",
            { "aria-label": S, className: H.revealButton, onClick: this._onRevealButtonClick, "aria-pressed": !!L, type: "button" },
            u.createElement(
              "span",
              { className: H.revealSpan },
              u.createElement(me, { className: H.revealIcon, iconName: L ? Pt : Ht })
            )
          ),
          (v !== void 0 || this.props.onRenderSuffix) && u.createElement("div", { className: H.suffix, id: this._suffixId }, q(this.props, this._onRenderSuffix))
        )
      ),
      this._isDescriptionAvailable && u.createElement(
        "span",
        { id: this._descriptionId },
        Z(this.props, this._onRenderDescription),
        W && u.createElement(
          "div",
          { role: "alert" },
          u.createElement(tt, null, this._renderErrorMessage())
        )
      )
    );
  }, o.prototype.focus = function() {
    this._textElement.current && this._textElement.current.focus();
  }, o.prototype.blur = function() {
    this._textElement.current && this._textElement.current.blur();
  }, o.prototype.select = function() {
    this._textElement.current && this._textElement.current.select();
  }, o.prototype.setSelectionStart = function(t) {
    this._textElement.current && (this._textElement.current.selectionStart = t);
  }, o.prototype.setSelectionEnd = function(t) {
    this._textElement.current && (this._textElement.current.selectionEnd = t);
  }, Object.defineProperty(o.prototype, "selectionStart", {
    get: function() {
      return this._textElement.current ? this._textElement.current.selectionStart : -1;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(o.prototype, "selectionEnd", {
    get: function() {
      return this._textElement.current ? this._textElement.current.selectionEnd : -1;
    },
    enumerable: !1,
    configurable: !0
  }), o.prototype.setSelectionRange = function(t, e) {
    this._textElement.current && this._textElement.current.setSelectionRange(t, e);
  }, o.prototype._warnControlledUsage = function(t) {
    Ue({
      componentId: this._id,
      componentName: M,
      props: this.props,
      oldProps: t,
      valueProp: "value",
      defaultValueProp: "defaultValue",
      onChangeProp: "onChange",
      readOnlyProp: "readOnly"
    }), this.props.value === null && !this._hasWarnedNullValue && (this._hasWarnedNullValue = !0, $e("Warning: 'value' prop on '" + M + "' should not be null. Consider using an empty string to clear the component or undefined to indicate an uncontrolled component."));
  }, Object.defineProperty(o.prototype, "_id", {
    get: function() {
      return this.props.id || this._fallbackId;
    },
    enumerable: !1,
    configurable: !0
  }), Object.defineProperty(o.prototype, "_isControlled", {
    get: function() {
      return Ke(this.props, "value");
    },
    enumerable: !1,
    configurable: !0
  }), o.prototype._onRenderPrefix = function(t) {
    var e = t.prefix;
    return u.createElement("span", { style: { paddingBottom: "1px" } }, e);
  }, o.prototype._onRenderSuffix = function(t) {
    var e = t.suffix;
    return u.createElement("span", { style: { paddingBottom: "1px" } }, e);
  }, Object.defineProperty(o.prototype, "_errorMessage", {
    get: function() {
      var t = this.props.errorMessage, e = t === void 0 ? this.state.errorMessage : t;
      return e || "";
    },
    enumerable: !1,
    configurable: !0
  }), o.prototype._renderErrorMessage = function() {
    var t = this._errorMessage;
    return t ? typeof t == "string" ? u.createElement(
      "p",
      { className: this._classNames.errorMessage },
      u.createElement("span", { "data-automation-id": "error-message" }, t)
    ) : u.createElement("div", { className: this._classNames.errorMessage, "data-automation-id": "error-message" }, t) : null;
  }, Object.defineProperty(o.prototype, "_isDescriptionAvailable", {
    get: function() {
      var t = this.props;
      return !!(t.onRenderDescription || t.description || this._errorMessage);
    },
    enumerable: !1,
    configurable: !0
  }), o.prototype._renderTextArea = function() {
    var t = this.props.invalid, e = t === void 0 ? !!this._errorMessage : t, n = j(this.props, Qe, ["defaultValue"]), l = this.props["aria-labelledby"] || (this.props.label ? this._labelId : void 0);
    return u.createElement("textarea", b({ id: this._id }, n, { ref: this._textElement, value: this.value || "", onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, "aria-labelledby": l, "aria-describedby": this._isDescriptionAvailable ? this._descriptionId : this.props["aria-describedby"], "aria-invalid": e, "aria-label": this.props.ariaLabel, readOnly: this.props.readOnly, onFocus: this._onFocus, onBlur: this._onBlur }));
  }, o.prototype._renderInput = function() {
    var t = this.props, e = t.ariaLabel, n = t.invalid, l = n === void 0 ? !!this._errorMessage : n, a = t.onRenderPrefix, s = t.onRenderSuffix, c = t.prefix, i = t.suffix, p = t.type, d = p === void 0 ? "text" : p, C = t.label, y = [];
    C && y.push(this._labelId), (c !== void 0 || a) && y.push(this._prefixId), (i !== void 0 || s) && y.push(this._suffixId);
    var T = b(b({ type: this.state.isRevealingPassword ? "text" : d, id: this._id }, j(this.props, Ye, ["defaultValue", "type"])), { "aria-labelledby": this.props["aria-labelledby"] || (y.length > 0 ? y.join(" ") : void 0), ref: this._textElement, value: this.value || "", onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, "aria-label": e, "aria-describedby": this._isDescriptionAvailable ? this._descriptionId : this.props["aria-describedby"], "aria-invalid": l, onFocus: this._onFocus, onBlur: this._onBlur }), v = function(F) {
      return u.createElement("input", b({}, F));
    }, B = this.props.onRenderInput || v;
    return B(T, v);
  }, o.prototype._validate = function(t) {
    var e = this;
    if (!(this._latestValidateValue === t && ge(this.props))) {
      this._latestValidateValue = t;
      var n = this.props.onGetErrorMessage, l = n && n(t || "");
      if (l !== void 0)
        if (typeof l == "string" || !("then" in l))
          this.setState({ errorMessage: l }), this._notifyAfterValidate(t, l);
        else {
          var a = ++this._lastValidation;
          l.then(function(s) {
            a === e._lastValidation && e.setState({ errorMessage: s }), e._notifyAfterValidate(t, s);
          });
        }
      else
        this._notifyAfterValidate(t, "");
    }
  }, o.prototype._notifyAfterValidate = function(t, e) {
    t === this.value && this.props.onNotifyValidationResult && this.props.onNotifyValidationResult(e, t);
  }, o.prototype._adjustInputHeight = function() {
    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {
      var t = this._textElement.current;
      t.style.height = "", t.style.height = t.scrollHeight + "px";
    }
  }, o.defaultProps = {
    resizable: !0,
    deferredValidationTime: 200,
    validateOnLoad: !0
  }, o;
}(u.Component);
function ne(r, o) {
  var t = r.value, e = t === void 0 ? o.uncontrolledValue : t;
  return typeof e == "number" ? String(e) : e;
}
function ge(r) {
  return !(r.validateOnFocusIn || r.validateOnFocusOut);
}
var ee;
function Dt() {
  if (typeof ee != "boolean") {
    var r = ae();
    if (r != null && r.navigator) {
      var o = /^Edg/.test(r.navigator.userAgent || "");
      ee = !(lt() || o);
    } else
      ee = !0;
  }
  return ee;
}
var Mt = {
  root: "ms-TextField",
  description: "ms-TextField-description",
  errorMessage: "ms-TextField-errorMessage",
  field: "ms-TextField-field",
  fieldGroup: "ms-TextField-fieldGroup",
  prefix: "ms-TextField-prefix",
  suffix: "ms-TextField-suffix",
  wrapper: "ms-TextField-wrapper",
  revealButton: "ms-TextField-reveal",
  multiline: "ms-TextField--multiline",
  borderless: "ms-TextField--borderless",
  underlined: "ms-TextField--underlined",
  unresizable: "ms-TextField--unresizable",
  required: "is-required",
  disabled: "is-disabled",
  active: "is-active"
};
function At(r) {
  var o = r.underlined, t = r.disabled, e = r.focused, n = r.theme, l = n.palette, a = n.fonts;
  return function() {
    var s;
    return {
      root: [
        o && t && {
          color: l.neutralTertiary
        },
        o && {
          fontSize: a.medium.fontSize,
          marginRight: 8,
          paddingLeft: 12,
          paddingRight: 0,
          lineHeight: "22px",
          height: 32
        },
        o && e && {
          selectors: (s = {}, s[h] = {
            height: 31
          }, s)
        }
      ]
    };
  };
}
function Ot(r) {
  var o, t, e, n, l, a, s, c, i, p, d, C, y = r.theme, T = r.className, v = r.disabled, B = r.focused, F = r.required, k = r.multiline, N = r.hasLabel, S = r.borderless, x = r.underlined, I = r.hasIcon, D = r.resizable, E = r.hasErrorMessage, q = r.inputClassName, O = r.autoAdjustHeight, V = r.hasRevealButton, f = y.semanticColors, Z = y.effects, R = y.fonts, g = le(Mt, y), L = {
    background: f.disabledBackground,
    color: v ? f.disabledText : f.inputPlaceholderText,
    display: "flex",
    alignItems: "center",
    padding: "0 10px",
    lineHeight: 1,
    whiteSpace: "nowrap",
    flexShrink: 0,
    selectors: (o = {}, o[h] = {
      background: "Window",
      color: v ? "GrayText" : "WindowText"
    }, o)
  }, W = [
    {
      color: f.inputPlaceholderText,
      opacity: 1,
      selectors: (t = {}, t[h] = {
        color: "GrayText"
      }, t)
    }
  ], w = {
    color: f.disabledText,
    selectors: (e = {}, e[h] = {
      color: "GrayText"
    }, e)
  };
  return {
    root: [
      g.root,
      R.medium,
      F && g.required,
      v && g.disabled,
      B && g.active,
      k && g.multiline,
      S && g.borderless,
      x && g.underlined,
      oe,
      {
        position: "relative"
      },
      T
    ],
    wrapper: [
      g.wrapper,
      x && [
        {
          display: "flex",
          borderBottom: "1px solid " + (E ? f.errorText : f.inputBorder),
          width: "100%"
        },
        v && {
          borderBottomColor: f.disabledBackground,
          selectors: (n = {}, n[h] = b({ borderColor: "GrayText" }, G()), n)
        },
        !v && {
          selectors: {
            ":hover": {
              borderBottomColor: E ? f.errorText : f.inputBorderHovered,
              selectors: (l = {}, l[h] = b({ borderBottomColor: "Highlight" }, G()), l)
            }
          }
        },
        B && [
          {
            position: "relative"
          },
          he(E ? f.errorText : f.inputFocusBorderAlt, 0, "borderBottom")
        ]
      ]
    ],
    fieldGroup: [
      g.fieldGroup,
      oe,
      {
        border: "1px solid " + f.inputBorder,
        borderRadius: Z.roundedCorner2,
        background: f.inputBackground,
        cursor: "text",
        height: 32,
        display: "flex",
        flexDirection: "row",
        alignItems: "stretch",
        position: "relative"
      },
      k && {
        minHeight: "60px",
        height: "auto",
        display: "flex"
      },
      !B && !v && {
        selectors: {
          ":hover": {
            borderColor: f.inputBorderHovered,
            selectors: (a = {}, a[h] = b({ borderColor: "Highlight" }, G()), a)
          }
        }
      },
      B && !x && he(E ? f.errorText : f.inputFocusBorderAlt, Z.roundedCorner2),
      v && {
        borderColor: f.disabledBackground,
        selectors: (s = {}, s[h] = b({ borderColor: "GrayText" }, G()), s),
        cursor: "default"
      },
      S && {
        border: "none"
      },
      S && B && {
        border: "none",
        selectors: {
          ":after": {
            border: "none"
          }
        }
      },
      x && {
        flex: "1 1 0px",
        border: "none",
        textAlign: "left"
      },
      x && v && {
        backgroundColor: "transparent"
      },
      E && !x && {
        borderColor: f.errorText,
        selectors: {
          "&:hover": {
            borderColor: f.errorText
          }
        }
      },
      !N && F && {
        selectors: (c = {
          ":before": {
            content: "'*'",
            color: f.errorText,
            position: "absolute",
            top: -5,
            right: -10
          }
        }, c[h] = {
          selectors: {
            ":before": {
              color: "WindowText",
              right: -14
            }
          }
        }, c)
      }
    ],
    field: [
      R.medium,
      g.field,
      oe,
      {
        borderRadius: 0,
        border: "none",
        background: "none",
        backgroundColor: "transparent",
        color: f.inputText,
        padding: "0 8px",
        width: "100%",
        minWidth: 0,
        textOverflow: "ellipsis",
        outline: 0,
        selectors: (i = {
          "&:active, &:focus, &:hover": { outline: 0 },
          "::-ms-clear": {
            display: "none"
          }
        }, i[h] = {
          background: "Window",
          color: v ? "GrayText" : "WindowText"
        }, i)
      },
      be(W),
      k && !D && [
        g.unresizable,
        {
          resize: "none"
        }
      ],
      k && {
        minHeight: "inherit",
        lineHeight: 17,
        flexGrow: 1,
        paddingTop: 6,
        paddingBottom: 6,
        overflow: "auto",
        width: "100%"
      },
      k && O && {
        overflow: "hidden"
      },
      I && !V && {
        paddingRight: 24
      },
      k && I && {
        paddingRight: 40
      },
      v && [
        {
          backgroundColor: f.disabledBackground,
          color: f.disabledText,
          borderColor: f.disabledBackground
        },
        be(w)
      ],
      x && {
        textAlign: "left"
      },
      B && !S && {
        selectors: (p = {}, p[h] = {
          paddingLeft: 11,
          paddingRight: 11
        }, p)
      },
      B && k && !S && {
        selectors: (d = {}, d[h] = {
          paddingTop: 4
        }, d)
      },
      q
    ],
    icon: [
      k && {
        paddingRight: 24,
        alignItems: "flex-end"
      },
      {
        pointerEvents: "none",
        position: "absolute",
        bottom: 6,
        right: 8,
        top: "auto",
        fontSize: ve.medium,
        lineHeight: 18
      },
      v && {
        color: f.disabledText
      }
    ],
    description: [
      g.description,
      {
        color: f.bodySubtext,
        fontSize: R.xSmall.fontSize
      }
    ],
    errorMessage: [
      g.errorMessage,
      _e.slideDownIn20,
      R.small,
      {
        color: f.errorText,
        margin: 0,
        paddingTop: 5,
        display: "flex",
        alignItems: "center"
      }
    ],
    prefix: [g.prefix, L],
    suffix: [g.suffix, L],
    revealButton: [
      g.revealButton,
      "ms-Button",
      "ms-Button--icon",
      Je(y, { inset: 1 }),
      {
        height: 30,
        width: 32,
        border: "none",
        padding: "0px 4px",
        backgroundColor: "transparent",
        color: f.link,
        selectors: {
          ":hover": {
            outline: 0,
            color: f.primaryButtonBackgroundHovered,
            backgroundColor: f.buttonBackgroundHovered,
            selectors: (C = {}, C[h] = {
              borderColor: "Highlight",
              color: "Highlight"
            }, C)
          },
          ":focus": { outline: 0 }
        }
      },
      I && {
        marginRight: 28
      }
    ],
    revealSpan: {
      display: "flex",
      height: "100%",
      alignItems: "center"
    },
    revealIcon: {
      margin: "0px 4px",
      pointerEvents: "none",
      bottom: 6,
      right: 8,
      top: "auto",
      fontSize: ve.medium,
      lineHeight: 18
    },
    subComponentStyles: {
      label: At(r)
    }
  };
}
var $t = J(It, Ot, void 0, {
  scope: "TextField"
}), Vt = Y(), Lt = function(r) {
  A(o, r);
  function o(t) {
    var e = r.call(this, t) || this;
    se(e);
    var n = e.props.allowTouchBodyScroll, l = n === void 0 ? !1 : n;
    return e._allowTouchBodyScroll = l, e;
  }
  return o.prototype.componentDidMount = function() {
    !this._allowTouchBodyScroll && Xe();
  }, o.prototype.componentWillUnmount = function() {
    !this._allowTouchBodyScroll && et();
  }, o.prototype.render = function() {
    var t = this.props, e = t.isDarkThemed, n = t.className, l = t.theme, a = t.styles, s = j(this.props, Q), c = Vt(a, {
      theme: l,
      className: n,
      isDark: e
    });
    return u.createElement("div", b({}, s, { className: c.root }));
  }, o;
}(u.Component), Wt = {
  root: "ms-Overlay",
  rootDark: "ms-Overlay--dark"
}, zt = function(r) {
  var o, t = r.className, e = r.theme, n = r.isNone, l = r.isDark, a = e.palette, s = le(Wt, e);
  return {
    root: [
      s.root,
      e.fonts.medium,
      {
        backgroundColor: a.whiteTranslucent40,
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        position: "absolute",
        selectors: (o = {}, o[h] = {
          border: "1px solid WindowText",
          opacity: 0
        }, o)
      },
      n && {
        visibility: "hidden"
      },
      l && [
        s.rootDark,
        {
          backgroundColor: a.blackTranslucent40
        }
      ],
      t
    ]
  };
}, Kt = J(Lt, zt, void 0, {
  scope: "Overlay"
});
export {
  tt as D,
  P as F,
  St as L,
  Kt as O,
  Ut as P,
  Zt as T,
  te as a,
  jt as b,
  $t as c,
  kt as d,
  be as g,
  lt as i,
  oe as n,
  qt as u
};
