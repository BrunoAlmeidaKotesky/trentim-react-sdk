{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/Card/Card.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/DateSlider.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GroupPanel.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PeoplePicker.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewFilter.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewGrouping.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewMapper.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridCardRendering.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/usePanelFilterController.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/enums.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/hooks/useRefWithCallback.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/ChoiceGroup\"","webpack:///external \"@fluentui/react/lib/DatePicker\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Label\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Slider\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","InfoCard","React","memo","props","styles","card","backgroundColor","border","margin","borderRadius","position","display","flexDirection","width","height","userSelect","enableUserSelect","color","overflow","top","borderBottom","gridTemplateColumns","columnGap","padding","fontFamily","col","rightCol","alignItems","leftCol","cardTitle","WebkitLineClamp","WebkitBoxOrient","fontSize","lineHeight","projectCode","opacity","bottom","justifyContent","circleWrap","circle","background","status","marginLeft","linkButton","minWidth","onClick","e","onCardClick","style","cardSubtitle","cardRightColInformation","_a","containerStyle","_b","_c","values","_d","length","_e","map","idx","title","plantName","circleIndicator","_f","__assign","_g","_h","_j","Button_1","onClickDownButton","iconProps","iconName","createContext","enableFilter","enableSearch","enableCardView","customButtons","setIsFilterPanelOpen","undefined","searchBoxPlaceholder","setRenderAs","defaultButtonsOrder","group","search","filter","setIsGroupPanelOpen","onClickSearchIcon","isOpen","onApply","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","fromDate","toDate","Date","setFromDate","setToDate","filterOptionsMatrix","availableFilters","options","selectedGroupKeys","setSelectedGroupKeys","DateSliderComponent","useState","displayDatePicker","setDisplayDatePicker","useContext","Contexts_1","formatSliderValue","num","onSliderChange","_","val","onRecordDateRange","enums_1","NONE","lastWeek","setDate","getDate","WEEK","lastMonth","setMonth","getMonth","MONTH","lastYear","setFullYear","getFullYear","YEAR","useEffect","CUSTOM","defaultSliderValue","dateStrings","useMemo","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","showWeekNumbers","weekNumberFormatString","firstWeekOfYear","dateFormat","showGoToToday","Slider_1","min","max","step","defaultValue","container","valueFormat","onChanged","label","DatePicker_1","maxDate","strings","formatDate","date","toLocaleDateString","onSelectDate","minDate","GridView","useGridController","state","handlers","JSX","CardsList","actualRows","visibleCols","isFilterPanelOpen","filterPanelConfig","groupPanelConfig","listConfig","shouldRenderCard","isGroupPanelOpen","groups","onItemClick","Provider","ListOptions_1","zIndex","contentContainer","id","onRenderCustomComponent","DetailsList_1","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","item","cursor","items","columns","groupProps","isAllGroupsCollapsed","gr","isCollapsed","collapseAllVisibility","visible","onRenderHeader","showEmptyGroups","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","hidden","react_1","fallback","cardProps","_k","_l","gap","PanelFilter_1","GroupPanel_1","GroupPanel","Panel","lazy","then","default","PrimaryButton","DefaultButton","RadioButton","ChoiceGroup","FluentPanel","isFooterAtBottom","onDismiss","onRenderFooter","marginRight","onChange","opt","keyWithName","concat","text","defaultSelectedKey","split","__read","ListOptions","searchKeys","onSearchItemChange","enableGrouping","onFilterIconClick","onGroupIconClick","onSearchBoxClick","defaultStyles","order","b","renderAs","className","onRenderCustomButton","placeholder","onKeyDown","ENTER","currentTarget","onFocus","onBlur","target","pointerEvents","inputValue","parentElement","childNodes","CLICK","icon","PanelFilter","usePanelFilterController","Dropdown","TagPicker","Label","getDefaultDropdownSelectedKeys","onAddOrRemoveToMap","getDefaultSelectedTag","getDefaultSelectedSlider","Suspense","defaultSelectedKeys","multiSelect","enableMultiple","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","overflowY","onChangeTags","onItemSelected","onTagSelected","onResolveSuggestions","onResolveTagSuggestion","DateSlider_1","onRecordDateChange","PeoplePicker_1","people","getDefaultSelectedPeople","onChangePeople","suggestionProps","mostRecentlyUsedHeaderText","showRemoveButtons","suggestionsAvailableAlertText","suggestionsContainerAriaLabel","PeoplePicker","peopleList","setPeopleList","picker","useRef","onFilterChanged","filterText","currentPersonas","limitResults","filteredPersonas","filterPersonasByText","removeDuplicates","slice","doesTextStartWith","onRemoveSuggestion","indexPeopleList","indexOf","newPeople","Pickers_1","onValidateInput","validateInput","componentRef","resolveDelay","toLowerCase","personas","possibleDupes","persona","listContainsPersona","input","valid","warning","invalid","GridViewFilter","allRows","hiddenFields","filters","columnsToFilter","filterFromColumns","index","renderFilterAs","keys","fieldName","data","stringObject","Utils","getNestedObject","toString","dateConversionOptions","shouldConvertToLocaleString","Utils_1","convertIsoToLocaleString","locales","formatOptions","uniqueOptions","obj","pos","arr","mapObj","push","setActualRows","setIsFilterPanel","applyCustomFilter","onItemsFiltered","selectedItems","groupedMaps_1","GridViewMapper_1","groupMaps","groupedMaps","size","filteredRows","mapKey","filterFrom","forEach","isDate","from","to","ORrowsFromThisKey","rDate","Id","includes","apply","__spreadArray","entries","allMapValues","newFilteredItems","rowValue","some","v","hiddenKeys","searchCb","onSearchBoxItemsFiltered","searchText","allFilteredRows","filteredValues","foundValues","startsWith","keys_1_1","GridViewGrouping","cols","setGroups","setIsGroupPanel","emptyGroupLabel","onItemsGrouped","keyAndName","defaultEmptyLabel","sort","reduce","acc","cur","valueFromKey","isKeyADate","find","startIndex","count","g","lastAcc","GridViewMapper","mapsByKeyKind","keyName","doesNotHaveKey","has","sameMapsList","set","thisKindMap_1","useGridCardRendering","setEnableGrouping","setShouldRenderCard","console","error","Card","row","cardTitleKey","cardSubtitleKey","titleDateConversionOptions","subtitleDateConversionOptions","rightColumn","cIndicator","titleValue","_m","newCardProps","_o","marginBottom","fontWeight","setCols","headerOptions","rows","setAllRows","useRefWithCallback","currentSearchBoxItems","memoizedAvailableFilter","setAvailableFilters","hideColumn","onColumnClick","currentRows","column","isSortedDescending","isSorted","sortedItems","copyAndSort","convertedColumns","onRender","_2","fieldValue","GridViewFilter_1","buildFilters","hiddenFilterKeys","hiddenGroupKeys","f","mapFilterOptions","onApplyFilter","filterPanelTitle","groupPanelTitle","GridViewGrouping_1","onApplyGrouping","_p","_q","callerType","current","filteredItems","DropDown","lastAddedTag","rootItemKey","option","copyMap","selected","itemKey","isDateComponent","listContainsTagList","tag","tagList","compareTag","selectedKeys","k","keyToFilter","selectedTags","keyKind","mapWithSameKey","mapWithSameKeyValue","type","tags","selectedItem","currentFilter","result","toISOString","isNaN","getTime","isIsoDate","test","Intl","DateTimeFormat","format","columnKey","aValue","bValue","nestedObj","pathArr","subKeys","getDeepKeys","subkey","RangeType","IconClickCaller","initialValue","ref","toggleState","setToggle","refCallback","useCallback","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { IInfoCardProps } from '../models/interfaces/IInfoCardProps';\r\nimport { CSSProperties } from 'react';\r\n\r\n/**\r\n * A card component that can be used in `GridView` automatically if `renderAs` is set to `card`.\r\n * \r\n * @param props - IInfoCardProps\r\n * @returns JSX.Element\r\n */\r\nconst InfoCard = React.memo((props: IInfoCardProps) => {\r\n    const styles: Record<string, CSSProperties> = {\r\n        card: {\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            border: \"1px solid #ababab\",\r\n            margin: \"0 0 16px\",\r\n            borderRadius: \"4px\",\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: props?.width || \"100%\",\r\n            height: props?.height || \"150px\",\r\n            userSelect: props?.enableUserSelect ? \"unset\" : \"none\",\r\n            color: \"#333\",\r\n            overflow: \"hidden\"\r\n        },\r\n        top: {\r\n            borderBottom: \"1px solid rgb(237, 235, 233)\",\r\n            overflow: \"hidden\",\r\n            height: \"100%\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 120px\",\r\n            columnGap: \"8px\",\r\n            padding: \"16px\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n        },\r\n        col: { display: \"flex\", flexDirection: \"column\" },\r\n        rightCol: { display: 'flex', flexDirection: 'column', alignItems: \"flex-end\" },\r\n        leftCol: { display: 'flex', flexDirection: 'column' },\r\n        cardTitle: {\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            WebkitBoxOrient: \"vertical\",\r\n            overflow: \"hidden\",\r\n            fontSize: \"18px\",\r\n            lineHeight: 1.4\r\n        },\r\n        projectCode: {\r\n            fontSize: \"16px\",\r\n            opacity: 0.8\r\n        },\r\n        bottom: {\r\n            display: \"flex\",\r\n            padding: \"6px 16px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"rgb(250, 249, 248)\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n\r\n        },\r\n        circleWrap: { display: \"inline-flex\", alignItems: \"center\" },\r\n        circle: {\r\n            width: \"16px\",\r\n            height: \"16px\",\r\n            background: \"#06ad51\",\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #06ad51\",\r\n            display: \"inline-block\"\r\n        },\r\n        status: { display: \"inline-block\", marginLeft: \"8px\" },\r\n        linkButton: { width: \"32px\", height: \"32px\", minWidth: \"32px\" }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={(e) => {\r\n            if (props.onCardClick)\r\n                props?.onCardClick(e);\r\n        }} style={styles.card}>\r\n            <div data-class-name=\"card-top\" style={styles.top}>\r\n                <div data-class-name=\"card-top-left\" style={styles.leftCol}>\r\n                    <div style={styles.cardTitle}>\r\n                        <span>{props?.cardTitle}</span>\r\n                    </div>\r\n                    <div style={styles.projectCode}>\r\n                        <span>{props?.cardSubtitle}</span>\r\n                    </div>\r\n                </div>\r\n                <div data-class-name=\"card-top-right\" style={props?.cardRightColInformation?.containerStyle ?? styles.rightCol}>\r\n                    {props?.cardRightColInformation?.values?.length > 0 && props?.cardRightColInformation?.values.map((value, idx) => (\r\n                        <div key={value?.title ?? idx} style={value?.style ?? styles.plantName}>\r\n                            <span>{value?.title}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div data-class-name=\"card-bottom\" style={styles.bottom}>\r\n                <div data-class-name=\"card-circle-wrapper\" style={styles.circleWrap}>\r\n                    <div style={props?.circleIndicator?.color ? { ...styles.circle, background: props?.circleIndicator?.color, border: `1px solid ${props?.circleIndicator?.color}` } : {}}></div>\r\n                    <span style={styles.status}>{props?.circleIndicator?.title}</span>\r\n                </div>\r\n                <div data-class-name=\"card-button-container\">\r\n                    <PrimaryButton onClick={props?.onClickDownButton} style={styles.linkButton} iconProps={{ iconName: props?.iconName || 'Page' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default InfoCard;","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IListOptions\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../models/interfaces/IGroupPanel';\r\nimport type { IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps<IRow>>({ \r\n    enableFilter: true, \r\n    enableSearch: true,\r\n    enableCardView: true,\r\n    customButtons: [], \r\n    setIsFilterPanelOpen: undefined, \r\n    searchBoxPlaceholder: '',\r\n    setRenderAs: undefined, \r\n    defaultButtonsOrder: { group: 0, search: 1, filter: 2, card: 3 },\r\n    setIsGroupPanelOpen: undefined,\r\n    onClickSearchIcon: undefined\r\n});\r\n\r\nexport const FilterPanelContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined,\r\n    fromDate: null,\r\n    toDate: new Date(),\r\n    setFromDate: undefined,\r\n    setToDate: undefined,\r\n    filterOptionsMatrix: [],\r\n    availableFilters: []\r\n});\r\n\r\nexport const GroupPanelContext = createContext<IGroupPanel>({\r\n    isOpen: false, \r\n    onApply: undefined,\r\n    onCancel: undefined,\r\n    onClose: undefined,\r\n    onOpen: undefined,\r\n    panelTitle: '',\r\n    options: [],\r\n    selectedGroupKeys: null,\r\n    setSelectedGroupKeys: undefined\r\n});","import * as React from 'react';\r\nimport { RangeType } from '../helpers/enums';\r\nimport { Slider, ISliderProps } from '@fluentui/react/lib/Slider';\r\nimport { DatePicker } from '@fluentui/react/lib/DatePicker';\r\nimport type { IDateSliderProps } from '../models/interfaces/IDateSlider';\r\nimport { useContext, useEffect, useState, memo, useMemo } from 'react';\r\nimport { FilterPanelContext } from './Contexts';\r\n\r\nfunction DateSliderComponent(props: IDateSliderProps) {\r\n    const [displayDatePicker, setDisplayDatePicker] = useState(false);\r\n    const {fromDate, toDate, setFromDate, setToDate} = useContext(FilterPanelContext);\r\n    const formatSliderValue = (num: number): string => num === 0 ? 'Nenhum' : num === 1 ? 'Última Semana' : num === 2 ? 'Último Mês' : num === 3 ? 'Últimos Ano' : '';\r\n    const onSliderChange: ISliderProps['onChanged'] = (_, val) => {\r\n        if(val === 4)\r\n            setDisplayDatePicker(true);\r\n        else {\r\n            setDisplayDatePicker(false);\r\n            setFromDate(null);\r\n            setToDate(new Date());\r\n        }\r\n        if(val === 0) {\r\n            props.onRecordDateRange(null, null, RangeType.NONE);\r\n        }\r\n        else if(val === 1) {\r\n            const lastWeek = new Date();\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            props.onRecordDateRange(lastWeek, new Date(), RangeType.WEEK);\r\n        }\r\n        else if(val === 2) {\r\n            const lastMonth = new Date();\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            props.onRecordDateRange(lastMonth, new Date(), RangeType.MONTH);\r\n        }\r\n        else if(val === 3) {\r\n            const lastYear = new Date();\r\n            lastYear.setFullYear(lastYear.getFullYear() - 1);\r\n            props.onRecordDateRange(lastYear, new Date(), RangeType.YEAR);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(fromDate && toDate)\r\n            props.onRecordDateRange(fromDate, toDate, RangeType.CUSTOM);\r\n    }, [fromDate, toDate]);\r\n\r\n    useEffect(() => {\r\n        if(props?.defaultSliderValue === 4 && !displayDatePicker)\r\n            setDisplayDatePicker(true);\r\n    }, [props?.defaultSliderValue]);\r\n\r\n    const dateStrings = useMemo(() => ({\r\n        months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n        shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n        days: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\r\n        shortDays: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n        goToToday: 'Hoje',\r\n        prevMonthAriaLabel: 'Mês anterior',\r\n        nextMonthAriaLabel: 'Próximo mês',\r\n        prevYearAriaLabel: 'Ano anterior',\r\n        nextYearAriaLabel: 'Próximo ano',\r\n        closeButtonAriaLabel: 'Fechar',\r\n        isRequiredErrorMessage: 'Este campo é obrigatório.',\r\n        invalidInputErrorMessage: 'Valor de entrada inválido.',\r\n        isOutOfBoundsErrorMessage: 'Valor de entrada fora dos limites.',\r\n        showWeekNumbers: false,\r\n        weekNumberFormatString: '',\r\n        firstWeekOfYear: 0,\r\n        dateFormat: 'd',\r\n        showGoToToday: true,\r\n    }), []);\r\n\r\n    return (<>\r\n    <Slider\r\n        min={0} max={4} step={1}\r\n        defaultValue={props?.defaultSliderValue ?? 0} styles={{container: { display: 'grid' }}}\r\n        valueFormat={formatSliderValue}\r\n        onChanged={onSliderChange}\r\n        label={props?.label}/>\r\n    {displayDatePicker && \r\n        <div>\r\n            <DatePicker\r\n                maxDate={toDate}\r\n                strings={dateStrings}\r\n                value={fromDate}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    setFromDate(d);\r\n                }}\r\n                label=\"De\"/>\r\n            <DatePicker\r\n                minDate={fromDate}\r\n                strings={dateStrings}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    setToDate(d);\r\n                }}\r\n                value={toDate}\r\n                label=\"Até\"/>\r\n        </div>\r\n    }\r\n    </>);\r\n}\r\n\r\nexport const DateSlider = memo(DateSliderComponent);","import * as React from 'react';\r\nimport { useGridController } from './hooks/useGridController';\r\nimport { FilterPanelContext, GroupPanelContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps, BaseType } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport GroupPanel from './GroupPanel';\r\nimport { ListOptions } from './ListOptions';\r\nimport { Suspense } from 'react';\r\n\r\n/** An enhanced version of the `DetailsList` component, with automatic filtering, sorting, grouping, properties searching with many other features to customize.\r\n * \r\n * The component can also be rendered as a collection of `Card` components, with the same functionalities.\r\n */\r\nexport function GridView<T extends BaseType>(props: IGridListProps<T>) {\r\n    const {state, handlers, JSX} = useGridController(props);\r\n    const {CardsList} = JSX;\r\n    const {actualRows, visibleCols, isFilterPanelOpen, filterPanelConfig, groupPanelConfig, listConfig, shouldRenderCard, isGroupPanelOpen, groups} = state;\r\n    const {onItemClick} = handlers;\r\n\r\n    return (\r\n        <GroupPanelContext.Provider value={groupPanelConfig}>\r\n        <FilterPanelContext.Provider value={filterPanelConfig}>\r\n        <ListOptionsContext.Provider value={listConfig}>\r\n            <div style={props?.styles?.root ?? {}}>\r\n                <ListOptions />\r\n                <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0, ...props?.styles?.contentContainer }} id=\"gridView-root\">\r\n                    {\r\n                    !!props?.onRenderCustomComponent ? actualRows?.map(i => props?.onRenderCustomComponent(i)) :\r\n                    !shouldRenderCard ? \r\n                    <DetailsList\r\n                        {...props?.detailsListProps}\r\n                        onRenderItemColumn={props?.onRenderItemColumn}\r\n                        onRenderRow={(p, defaultRender) => <div onClick={() => onItemClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onItemClick ? 'pointer' : 'default' } } })}</div>}\r\n                        items={actualRows} columns={visibleCols}\r\n                        groups={groups}\r\n                        groupProps={{\r\n                            isAllGroupsCollapsed: props?.detailsListProps?.groups ? props?.detailsListProps?.groups?.filter(gr => !gr?.isCollapsed)?.length === 0 : true,\r\n                            collapseAllVisibility: CollapseAllVisibility.visible,\r\n                            onRenderHeader: (props, defaultRender) => {\r\n                                if (!props.group!.name)\r\n                                    return <></>;\r\n                                return defaultRender(props);\r\n                            },\r\n                            showEmptyGroups: false\r\n                        }}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                        onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                            <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                            </Sticky>)\r\n                        }\r\n                        checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                    /> :\r\n                    <Suspense fallback={'...'}>\r\n                        <div id=\"gridView-cardContainer\" style={props?.cardProps?.containerStyle ?? {display: 'grid', gap: 12, gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))'}}>\r\n                        {CardsList}\r\n                        </div>\r\n                    </Suspense>\r\n                    }\r\n                </div>\r\n                {isFilterPanelOpen && <PanelFilter />}\r\n                {isGroupPanelOpen && <GroupPanel />}\r\n            </div>\r\n        </ListOptionsContext.Provider>\r\n        </FilterPanelContext.Provider>\r\n        </GroupPanelContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense } from 'react';\r\nimport { GroupPanelContext } from './Contexts';\r\n\r\nfunction GroupPanel() {\r\n    const {isOpen, panelTitle, onApply, onCancel, onClose, options, selectedGroupKeys, setSelectedGroupKeys} = useContext(GroupPanelContext);\r\n    const [FluentPanel, PrimaryButton, DefaultButton, RadioButton] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const RadioButton = lazy(() => import('@fluentui/react/lib/ChoiceGroup').then(({ ChoiceGroup }) => ({ default: ChoiceGroup })));\r\n        return [Panel, PrimaryButton, DefaultButton, RadioButton];\r\n    }, []);\r\n\r\n    if(!isOpen) return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}\r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(selectedGroupKeys)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div>)}>\r\n                <h2>{panelTitle}</h2>\r\n                <Suspense fallback={'...'}>\r\n                    <RadioButton\r\n                        onChange={(_, opt) => {\r\n                            const keyWithName = `${opt?.key};${opt?.text}` as const;\r\n                            setSelectedGroupKeys(keyWithName);\r\n                        }}\r\n                        defaultSelectedKey={selectedGroupKeys?.split(';')?.[0] ?? undefined}\r\n                        options={[{key: '@NONE', text: 'Nenhum'} ,...options]}/>\r\n                </Suspense>\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(GroupPanel);","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {GroupPanelContext, ListOptionsContext} from './Contexts';\r\nimport { IconClickCaller } from '../helpers/enums';\r\n\r\nexport const ListOptions = () => {\r\n    const { customButtons, enableFilter, enableSearch, searchKeys, onSearchItemChange, \r\n            setIsFilterPanelOpen, defaultButtonsOrder, searchBoxPlaceholder, enableCardView, \r\n            setRenderAs, enableGrouping, onClickSearchIcon, onFilterIconClick, onGroupIconClick, onSearchBoxClick} = React.useContext(ListOptionsContext);\r\n    const {onOpen} = React.useContext(GroupPanelContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        {enableGrouping &&\r\n        <DefaultButton \r\n            onClick={_ => {\r\n                if(!!onGroupIconClick)\r\n                onGroupIconClick();\r\n                onOpen();\r\n            }} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />}\r\n        {enableCardView && \r\n        <DefaultButton \r\n            onClick={_ => setRenderAs()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.card}}} iconProps={{iconName: 'GridViewMedium'}} />}\r\n        {customButtons?.length > 0 && customButtons?.map((b, idx) => {\r\n            switch (b?.renderAs) {\r\n                case 'PrimaryButton':\r\n                    return (<PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>);\r\n                case 'DefaultButton': \r\n                    return (<DefaultButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</DefaultButton>);\r\n                case 'CustomButton': \r\n                    return b?.onRenderCustomButton(b?.props) ?? null;\r\n                default: return (<PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>);\r\n            }\r\n        })}\r\n        {(enableSearch && searchKeys) && \r\n        <TextField\r\n            placeholder={searchBoxPlaceholder}\r\n            onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                    onClickSearchIcon(IconClickCaller.ENTER, e?.currentTarget?.value, searchKeys);\r\n                }\r\n            }}\r\n            onFocus={onSearchBoxClick}\r\n            onBlur={e => onSearchItemChange(e.target.value, searchKeys)} \r\n            iconProps={{\r\n                iconName: 'Search',\r\n                style: { pointerEvents: \"auto\", cursor: \"pointer\", position: 'static', padding: 8, backgroundColor: '#e2d7cab5'},\r\n                onClick: (e) => {\r\n                    const inputValue = (e?.currentTarget?.parentElement?.childNodes[0] as HTMLInputElement)?.value;\r\n                    if(inputValue)\r\n                        onClickSearchIcon(IconClickCaller.CLICK);\r\n                }\r\n            }} \r\n            styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => {\r\n                if(!!onFilterIconClick) \r\n                    onFilterIconClick();\r\n                setIsFilterPanelOpen(true);\r\n            }} \r\n            styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport {DateSlider} from './DateSlider';\r\nimport {PeoplePicker} from './PeoplePicker';\r\nimport {usePanelFilterController} from './hooks/usePanelFilterController';\r\n\r\nfunction PanelFilter() {\r\n    const {JSX, state, handlers} = usePanelFilterController();\r\n    const {actualFilteredValues, panelTitle, isOpen, filterOptionsMatrix, availableFilters} = state;\r\n    const {FluentPanel, PrimaryButton, Dropdown, TagPicker, DefaultButton, Label} = JSX;\r\n    const { onClose, onCancel, getDefaultDropdownSelectedKeys, onAddOrRemoveToMap, \r\n            getDefaultSelectedTag, getDefaultSelectedSlider } = handlers;\r\n\r\n    if (!isOpen) return null;\r\n    return (\r\n        <React.Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => handlers.onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </React.Suspense>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </React.Suspense>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    return (<React.Suspense key={filter?.key + \"-\" + idx} fallback={'...'}>\r\n                        {(filter.renderAs === 'Dropdown') ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={filterOptionsMatrix[idx]}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        (filter.renderAs === 'SearchBox') ?\r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <Label>{filter?.name}</Label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{\r\n                                doNotLayer: true,\r\n                                style: {overflowY: 'auto'},\r\n                                styles: {root: {position: 'relative'}}\r\n                            }}\r\n                            onChange={handlers.onChangeTags(filterOptionsMatrix[idx])}\r\n                            onItemSelected={handlers.onTagSelected(filter?.key)}\r\n                            onResolveSuggestions={handlers.onResolveTagSuggestion(filterOptionsMatrix[idx])} /></div> :\r\n                        (filter.renderAs === 'DateSlider') ?\r\n                        <DateSlider\r\n                            defaultSliderValue={getDefaultSelectedSlider(filter?.key)}\r\n                            onRecordDateRange={handlers.onRecordDateChange(filter?.key)}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            label={filter?.name}/> :\r\n                        (filter?.renderAs === 'PeoplePicker') ?\r\n                        <div>\r\n                        <Label key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>{filter?.name}</Label>\r\n                        <PeoplePicker\r\n                            label={''}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            people={filterOptionsMatrix[idx]}\r\n                            defaultSelectedItems={handlers.getDefaultSelectedPeople(filter?.key)}\r\n                            onChangePeople={handlers.onChangePeople(filter?.key)} /> \r\n                        </div> : null\r\n                        }\r\n                    </React.Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </React.Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","import * as React from 'react';\r\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\r\nimport { CompactPeoplePicker, IBasePickerSuggestionsProps, ValidationState } from '@fluentui/react/lib/Pickers';\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n    suggestionsHeaderText: 'Pessoas sugeridas',\r\n    mostRecentlyUsedHeaderText: 'Pessoas mais recentes',\r\n    noResultsFoundText: 'Nenhum resultado encontrado',\r\n    loadingText: 'Carregando',\r\n    showRemoveButtons: true,\r\n    suggestionsAvailableAlertText: 'Sugestões disponíveis',\r\n    suggestionsContainerAriaLabel: 'Pessoas sugeridas',\r\n};\r\n\r\ninterface IPeoplePickerProps {\r\n    label: string;\r\n    people: IPersonaProps[];\r\n    onChangePeople: (items: IPersonaProps[]) => void;\r\n    defaultSelectedItems?: IPersonaProps[];\r\n}\r\n\r\nexport const PeoplePicker = (props: IPeoplePickerProps) => {\r\n    const [peopleList, setPeopleList] = React.useState<IPersonaProps[]>(props.people);\r\n    const picker = React.useRef(null);\r\n\r\n    const onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] | Promise<IPersonaProps[]> => {\r\n        if (!filterText)\r\n            return [];\r\n        let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\r\n        filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\r\n        filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\r\n        return filteredPersonas;\r\n    };\r\n\r\n    const filterPersonasByText = (filterText: string)=> peopleList.filter(item => doesTextStartWith(item.text as string, filterText));\r\n    \r\n    const onRemoveSuggestion = (item: IPersonaProps): void => {\r\n        const indexPeopleList: number = peopleList.indexOf(item);\r\n        if (indexPeopleList >= 0) {\r\n            const newPeople: IPersonaProps[] = peopleList\r\n                .slice(0, indexPeopleList)\r\n                .concat(peopleList.slice(indexPeopleList + 1));\r\n            setPeopleList(newPeople);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <CompactPeoplePicker\r\n                onResolveSuggestions={onFilterChanged}\r\n                getTextFromItem={getTextFromItem}\r\n                pickerSuggestionsProps={suggestionProps}\r\n                defaultSelectedItems={props?.defaultSelectedItems}\r\n                onChange={props?.onChangePeople}\r\n                className={'ms-PeoplePicker'}\r\n                onRemoveSuggestion={onRemoveSuggestion}\r\n                onValidateInput={validateInput}\r\n                componentRef={picker}\r\n                resolveDelay={300}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst doesTextStartWith = (text: string, filter: string) => text?.toLowerCase()?.indexOf(filter?.toLowerCase()) === 0;\r\n\r\nconst removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]) => personas.filter(persona => !listContainsPersona(persona, possibleDupes));\r\n\r\nfunction listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) \r\n        return false;\r\n    return personas.filter(item => item?.text === persona?.text)?.length > 0;\r\n}\r\n\r\nconst getTextFromItem = (persona: IPersonaProps) => persona?.text;\r\n\r\nfunction validateInput(input: string): ValidationState {\r\n    if (input.indexOf('@') !== -1) \r\n        return ValidationState.valid;\r\n    else if (input.length > 1) \r\n        return ValidationState.warning;\r\n    return ValidationState.invalid;\r\n}","import { Utils } from '../../helpers/Utils';\r\nimport { GridViewMapper } from './GridViewMapper';\r\nimport type { IRow, TColumn } from '../../models/interfaces/IGridView';\r\nimport type { ApplyFilter, SearchItem } from '../../models/types/Common';\r\nimport type { FilterOption, IAvailableFilters } from '../../models/interfaces/IPanelFilter';\r\n\r\nexport class GridViewFilter {\r\n\r\n    static onApplyFilter: ApplyFilter<IRow<any>> = ({allRows, setActualRows, setIsFilterPanel, applyCustomFilter, onItemsFiltered}) => (selectedItems) => {\r\n        if(!!applyCustomFilter) {\r\n            const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n            return applyCustomFilter({allRows, setActualRows, setIsFilterPanel, selectedItems, groupedMaps});\r\n        }\r\n\r\n        if(selectedItems.size === 0) {\r\n            setActualRows(allRows);\r\n            return setIsFilterPanel(false);\r\n        }\r\n        const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n        let filteredRows: IRow[] = [];\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            const filterFrom = filteredRows?.length > 0 ? filteredRows : allRows;\r\n            map?.forEach(value => {\r\n                const isDate = !!value?.data?.from && !!value?.data?.to;\r\n                const ORrowsFromThisKey = filterFrom.filter(r => {\r\n                    if(isDate) {\r\n                        const from: Date = value?.data?.from;\r\n                        const to: Date = value?.data?.to;\r\n                        const rDate: Date = new Date(Utils.getNestedObject(r, mapKey.split('.')));\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return Utils.getNestedObject(r, mapKey.split('.')) === value?.text;\r\n                });\r\n                if(ORrowsFromThisKey.length > 0 && !filteredRows?.map(r => r?.Id)?.includes(value?.data?.Id))\r\n                    filteredRows.push(...ORrowsFromThisKey);\r\n            });\r\n        }\r\n\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            const allMapValues = [...map.values()];\r\n            const newFilteredItems = filteredRows.filter(r => {\r\n                const rowValue = Utils.getNestedObject(r, mapKey.split('.'));\r\n                return allMapValues.some(v => {\r\n                    if(v?.data?.from && v?.data?.to) {\r\n                        const from: Date = v?.data?.from;\r\n                        const to: Date = v?.data?.to;\r\n                        const rDate: Date = new Date(rowValue as string);\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return v?.text === rowValue\r\n                });\r\n            });\r\n            if(newFilteredItems?.length > 0)\r\n                filteredRows = newFilteredItems;\r\n        }\r\n\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        setActualRows(filteredRows)\r\n        setIsFilterPanel(false);\r\n        if(!!onItemsFiltered) \r\n            onItemsFiltered(filteredRows);\r\n    }\r\n\r\n    /**Generate the components of each available column and it's unique values */\r\n    static buildFilters(allRows: IRow[], columns: TColumn<any>[], hiddenFields: string[]): IAvailableFilters[] {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = GridViewFilter.filterFromColumns(hiddenFields, columns);\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConversionOptions?.locales, col?.dateConversionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    static filterFromColumns = (hiddenKeys: string[], columns: TColumn<any>[]) => columns.filter(c => (!hiddenKeys?.includes(c?.key)));\r\n\r\n    static onSearchItemChange: SearchItem = ({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered}) => (searchText, keys) => {\r\n        const allFilteredRows: IRow[] = []; \r\n        if(!searchText) {\r\n            setActualRows(allRows);\r\n            return [];\r\n        } \r\n        for (const key of keys) {\r\n            const filterFrom = allFilteredRows?.length > 0 ? allFilteredRows : allRows;\r\n            const filteredValues = filterFrom.filter(item => {\r\n                const foundValues: string = Utils.getNestedObject(item, (key as string)?.split('.'))?.toString();\r\n                return foundValues?.toLowerCase()?.startsWith(searchText?.toLowerCase());\r\n            });\r\n            allFilteredRows.push(...filteredValues);\r\n        }\r\n        searchCb(allFilteredRows);\r\n        if(!!onSearchBoxItemsFiltered)\r\n            onSearchBoxItemsFiltered(allFilteredRows);\r\n        return allFilteredRows;\r\n    }\r\n}","import { Utils } from '../../helpers/Utils';\r\nimport type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { ApplyGrouping } from \"../../models/types/Common\";\r\n\r\nexport class GridViewGrouping {\r\n    \r\n    static onApplyGrouping: ApplyGrouping = ({actualRows, cols, setGroups, setIsGroupPanel, emptyGroupLabel, onItemsGrouped}) => (keyAndName) => {\r\n        const defaultEmptyLabel = emptyGroupLabel ?? 'Sem itens definidos';\r\n        if (!keyAndName || keyAndName?.split(';')?.[0] === '@NONE') {\r\n            setIsGroupPanel(false);\r\n            return setGroups(undefined);\r\n        }\r\n        const groups: IGroup[] = [...actualRows]\r\n            .sort((a, b) => (a?.Id as number) - (b?.Id as number))\r\n            .reduce<IGroup[]>((acc, cur) => {\r\n                const [key, name] = keyAndName?.split(';');\r\n                let valueFromKey = Utils.getNestedObject(cur, key.split('.')) as string ?? defaultEmptyLabel;\r\n                const isKeyADate = cols.find(i => i?.key === key)?.dateConversionOptions?.shouldConvertToLocaleString;\r\n                if (isKeyADate)\r\n                    valueFromKey = Utils.convertIsoToLocaleString(\r\n                        valueFromKey, \r\n                        cols.find(i => i?.key === key)?.dateConversionOptions?.locales, \r\n                        cols.find(i => i?.key === key)?.dateConversionOptions?.formatOptions);\r\n                \r\n                const group: IGroup = {\r\n                    key: valueFromKey,\r\n                    name: `${name}: ${valueFromKey}`,\r\n                    startIndex: 0,\r\n                    count: 1,\r\n                }\r\n                if (acc.length === 0) {\r\n                    acc.push(group)\r\n                    return acc\r\n                } else if (!acc?.map(i => i?.key).includes(valueFromKey)) {\r\n                    const count = acc?.filter(g => g?.key === valueFromKey).length;\r\n                    const startIndex = acc[acc.length - 1]?.startIndex + acc[acc.length - 1]?.count;\r\n                    acc.push({\r\n                        key: valueFromKey,\r\n                        name: `${name}: ${valueFromKey}`,\r\n                        startIndex,\r\n                        count\r\n                    });\r\n                }\r\n                const lastAcc = acc[acc.length - 1];\r\n                if (lastAcc?.key === valueFromKey)\r\n                    acc[acc.length - 1].count++;\r\n                return acc\r\n            }, []);\r\n        setGroups(groups);\r\n        setIsGroupPanel(false);\r\n        if(!!onItemsGrouped) \r\n            onItemsGrouped();\r\n    }\r\n}","import { FilterOption, SelectedItemsMap } from \"../../models/interfaces/IPanelFilter\";\r\n\r\n/**Internal class to be used when using map data operations on the GridView component context as a whole. */\r\nexport class GridViewMapper {\r\n\r\n    /**\r\n     * Creates a new map collection with the first level keys being the real keys, and the values being the maps with selected maps (with key and values) \r\n     * @example \r\n     * ```ts\r\n     * const selectedItemsMap = new Map([['0_User.Title', data], ['1_User.Title', data]]);\r\n     * const groupedMap = GridViewMapper.groupMaps(selectedItemsMap);\r\n     * //It'll be: key: 'User.Title', value: [Map([['0_User.Title', data], ['1_User.Title', data]])]\r\n     * ```\r\n     **/\r\n    static groupMaps(selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            let keyName = key.split('_')[1];\r\n            if(!keyName && !key.includes('_'))\r\n                keyName = key;\r\n            const doesNotHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesNotHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    static mapFilterOptions = (options: FilterOption[]) => {\r\n        return options\r\n        .filter(i => (i?.text !== null && i?.text !== undefined))\r\n        .map<FilterOption>(({ key, text, data }) => ({\r\n            key,\r\n            text,\r\n            data\r\n        }));\r\n    }\r\n}","import * as React from 'react';\r\nimport { useEffect, Dispatch, SetStateAction, useMemo, lazy } from 'react';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport { IRow } from '../../models/interfaces/IGridView';\r\nimport { IInfoCardProps, ICardProps } from '../../models/interfaces/IInfoCardProps';\r\n\r\ninterface IGridCardHandler {\r\n    renderAs: 'card' | 'list';\r\n    enableGrouping: boolean;\r\n    shouldRenderCard: boolean;\r\n    actualRows: IRow[];\r\n    cardProps: ICardProps;\r\n    setShouldRenderCard: Dispatch<SetStateAction<boolean>>;\r\n    setEnableGrouping: Dispatch<SetStateAction<boolean>>;\r\n    onRenderCustomComponent: (item: IRow) => React.ReactNode;\r\n    onItemClick: (item: IRow) => void;\r\n}\r\nexport function useGridCardRendering({\r\n    renderAs, \r\n    setEnableGrouping, \r\n    setShouldRenderCard, \r\n    enableGrouping, \r\n    actualRows, \r\n    shouldRenderCard, \r\n    cardProps, \r\n    onRenderCustomComponent,\r\n    onItemClick\r\n}: IGridCardHandler) {\r\n    useEffect(() => {\r\n        if (renderAs === 'card') {\r\n            setShouldRenderCard(true);\r\n            if (!cardProps || Object?.keys(cardProps)?.length === 0)\r\n                console.error(\"[GridView] - You are using `renderAs: card`, but you are not passing cardProps. This will not work.\");\r\n            return setEnableGrouping(false);\r\n        }\r\n        setShouldRenderCard(false);\r\n        if (enableGrouping)\r\n            setEnableGrouping(true);\r\n    }, [renderAs]);\r\n\r\n    const Card = useMemo(() => {\r\n        if (!shouldRenderCard) return null;\r\n        return lazy(() => import('../../Card/Card').then((module) => ({ default: module?.default })));\r\n    }, [shouldRenderCard]);\r\n\r\n    const CardsList = useMemo(() => {\r\n        if (!Card || renderAs === 'list') return null;\r\n        \r\n        return actualRows?.map(row => {\r\n            if (!!onRenderCustomComponent)\r\n                return onRenderCustomComponent(row);\r\n            let cardTitle: string = Utils.getNestedObject(row, cardProps?.cardTitleKey?.split('.')) || '';\r\n            let cardSubtitle: string = Utils.getNestedObject(row, cardProps?.cardSubtitleKey?.split('.')) || '';\r\n            if (cardProps?.titleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardTitle = Utils.convertIsoToLocaleString(cardTitle, cardProps?.titleDateConversionOptions?.locales, cardProps?.titleDateConversionOptions?.formatOptions);\r\n            if (cardProps?.subtitleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardSubtitle = Utils.convertIsoToLocaleString(cardSubtitle, cardProps?.subtitleDateConversionOptions?.locales, cardProps?.subtitleDateConversionOptions?.formatOptions);\r\n            const rightCol = cardProps?.rightColumn;\r\n            const cIndicator = cardProps?.circleIndicator;\r\n            let titleValue = Utils.getNestedObject(row, cIndicator?.title?.split('.') as any) as string;\r\n            if (cIndicator?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                titleValue = Utils.convertIsoToLocaleString(titleValue, cIndicator?.dateConversionOptions?.locales, cIndicator?.dateConversionOptions?.formatOptions);\r\n            const circleIndicator = {\r\n                ...cIndicator,\r\n                title: titleValue\r\n            };\r\n            const newCardProps: IInfoCardProps = {\r\n                ...cardProps,\r\n                cardTitle,\r\n                cardSubtitle,\r\n                cardRightColInformation: rightCol?.keys && {\r\n                    ...rightCol,\r\n                    values: rightCol?.keys?.map(opt => {\r\n                        let title: string = Utils.getNestedObject(row, opt?.title?.split('.') as any);\r\n                        if (opt?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                            title = Utils.convertIsoToLocaleString(title, opt?.dateConversionOptions?.locales, opt?.dateConversionOptions?.formatOptions);\r\n                        return ({ title, style: opt?.style ?? { fontSize: 16, marginBottom: 4, fontWeight: 600 } });\r\n                    })\r\n                },\r\n                circleIndicator,\r\n                onClickDownButton: e => {\r\n                    onItemClick(row);\r\n                    if (cardProps?.onCardClick)\r\n                        cardProps?.onCardClick(e);\r\n                }\r\n            }\r\n            return (<Card key={row?.Id} {...newCardProps} />);\r\n        })\r\n    }, [Card, cardProps, actualRows, renderAs, onRenderCustomComponent]);\r\n\r\n    return CardsList;\r\n}","import * as React from 'react';\r\nimport {useRefWithCallback} from '../../hooks/useRefWithCallback';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { useGridCardRendering } from './useGridCardRendering';\r\nimport {GridViewFilter} from '../handlers/GridViewFilter';\r\nimport {GridViewGrouping} from '../handlers/GridViewGrouping';\r\nimport {GridViewMapper} from '../handlers/GridViewMapper';\r\nimport { IconClickCaller } from '../../helpers/enums';\r\nimport type { IGridListProps, IRow, TColumn, BaseType } from '../../models/interfaces/IGridView';\r\nimport type { IListOptionsProps } from '../../models/interfaces/IListOptions';\r\nimport type { IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../../models/interfaces/IGroupPanel';\r\nimport type { IGroup } from '@fluentui/react/lib/DetailsList';\r\nimport type { KeyAndName } from '../../models/types/Common';\r\n\r\n/** TO-DO: Use `useReducer` with context for better code splitting. */\r\nexport function useGridController<T extends BaseType>(props: IGridListProps<T>) {\r\n    const [renderAs, setRenderAs] = useState<typeof props.renderAs>(props?.renderAs || 'list');\r\n    const [shouldRenderCard, setShouldRenderCard] = useState(props?.renderAs === 'card');\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [groups, setGroups] = useState<IGroup[]>(undefined);\r\n    const [enableGrouping, setEnableGrouping] = useState(props?.headerOptions?.enableGrouping ?? false);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [selectedGroupKeys, setSelectedGroupKeys] = useState<KeyAndName>(null);\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState<IRow<T>[]>(props?.rows ?? []);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n    const [isGroupPanelOpen, setIsGroupPanel] = useState(false);\r\n    const [fromDate, setFromDate] = useState<Date>(null);\r\n    const [toDate, setToDate] = useState(new Date());\r\n    const [searchCb, currentSearchBoxItems] = useRefWithCallback<IRow[]>([]);\r\n    const [memoizedAvailableFilter, setAvailableFilters] = useState<IAvailableFilters[]>([]);\r\n\r\n    const visibleCols = useMemo(() => cols?.filter(c => !c?.hideColumn), [cols]);\r\n    useEffect(() => { setRenderAs(props?.renderAs); }, [props?.renderAs]);\r\n\r\n    const onItemClick = (item: IRow<T>) => !!props?.onItemClick && props?.onItemClick(item);\r\n    const onColumnClick = (currentRows: IRow<T>[]) => (_: any, column: TColumn<T>): void => {\r\n        if(!column) return;\r\n        let isSortedDescending = column?.isSortedDescending;\r\n        if (column?.isSorted) \r\n          isSortedDescending = !isSortedDescending;\r\n    \r\n        const sortedItems = Utils.copyAndSort(currentRows, column?.key, isSortedDescending);\r\n        setActualRows(sortedItems);\r\n        setCols(c => c.map(col => {\r\n            col.isSorted = col.key === column?.key;\r\n            if (col?.isSorted) \r\n              col.isSortedDescending = isSortedDescending;\r\n            return col;\r\n        }));\r\n    }\r\n\r\n    const CardsList = useGridCardRendering({\r\n        renderAs,\r\n        actualRows,\r\n        onItemClick,\r\n        cardProps: props?.cardProps,\r\n        enableGrouping,\r\n        onRenderCustomComponent: props?.onRenderCustomComponent,\r\n        setEnableGrouping,\r\n        setShouldRenderCard,\r\n        shouldRenderCard\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(!props?.columns?.length) return;\r\n        const columns = props?.columns;\r\n        const convertedColumns = columns.map(c => {\r\n            if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                c.onRender = (item, _2) => {\r\n                    const fieldValue: string = Utils.getNestedObject(item, c?.fieldName?.split('.'));\r\n                    return <span>{fieldValue}</span>;\r\n                }\r\n                return c;\r\n            } else if (c?.dateConversionOptions?.shouldConvertToLocaleString) {\r\n                c.onRender = (item, _2) => {\r\n                    const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConversionOptions?.locales, c?.dateConversionOptions?.formatOptions);\r\n                    return <span>{fieldValue}</span>;\r\n                }\r\n            }\r\n            return c;\r\n        });\r\n        setCols(convertedColumns);\r\n    }, [props?.columns]);\r\n\r\n    \r\n\r\n    useEffect(() => { setActualRows(props?.rows); setAllRows(props?.rows) }, [props?.rows?.length]);\r\n\r\n    useEffect(() => {\r\n        setCols(columns => [...columns.map(c => ({...c, onColumnClick: onColumnClick(actualRows)}))]);\r\n    }, [actualRows?.length]);\r\n\r\n    useEffect(() => {\r\n        setAvailableFilters([...GridViewFilter.buildFilters(allRows, cols, props?.hiddenFilterKeys as string[])]);   \r\n    }, [allRows?.length, cols?.length, props?.hiddenGroupKeys?.length]);\r\n\r\n    const filterOptionsMatrix = useMemo(() => memoizedAvailableFilter.map(f => GridViewMapper.mapFilterOptions(f?.options)), [memoizedAvailableFilter]);\r\n\r\n    const filterPanelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: GridViewFilter.onApplyFilter({\r\n            allRows, \r\n            setActualRows, \r\n            setIsFilterPanel, \r\n            applyCustomFilter: props?.applyCustomFilter, \r\n            onItemsFiltered: props?.onItemsFiltered\r\n        }),\r\n        onCancel: () => { setIsFilterPanel(false); },\r\n        onClose: () =>  { setIsFilterPanel(false); },\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues,\r\n        fromDate, toDate, setFromDate, setToDate,\r\n        filterOptionsMatrix,\r\n        availableFilters: memoizedAvailableFilter,\r\n    }\r\n\r\n    const groupPanelConfig: IGroupPanel = {\r\n        isOpen: isGroupPanelOpen,\r\n        onCancel: () => { setIsGroupPanel(false); },\r\n        onClose: () =>  { setIsGroupPanel(false); },\r\n        onOpen: () => { setIsGroupPanel(true); },\r\n        panelTitle: props?.groupPanelTitle ?? 'Agrupar',\r\n        setSelectedGroupKeys,\r\n        selectedGroupKeys,\r\n        options: GridViewFilter.filterFromColumns(props?.hiddenGroupKeys as string[], cols)?.map(c => ({key: c?.key, text: c?.name})) ?? [],\r\n        onApply: GridViewGrouping.onApplyGrouping({\r\n            actualRows,\r\n            cols,\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n            onItemsGrouped: props?.onItemsGrouped\r\n        })\r\n    }\r\n\r\n    const listConfig: IListOptionsProps<any> = {\r\n        ...props?.headerOptions,\r\n        onSearchItemChange: GridViewFilter.onSearchItemChange({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered: props?.onSearchBoxItemsFiltered}),\r\n        setRenderAs: () => renderAs === 'card' ? setRenderAs('list') : setRenderAs('card'),\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        setIsGroupPanelOpen: (value) => { setIsGroupPanel(value); },\r\n        enableSearch: props?.headerOptions?.enableSearch ?? true,\r\n        enableFilter: props?.headerOptions?.enableFilter ?? true,\r\n        enableCardView: props?.headerOptions?.enableCardView ?? false,\r\n        enableGrouping,\r\n        onClickSearchIcon: (callerType, text, key) => {\r\n            if(callerType === IconClickCaller.CLICK)\r\n                return setActualRows(currentSearchBoxItems?.current as IRow<T>[]);\r\n            if(callerType === IconClickCaller.ENTER) {\r\n                if(!text)\r\n                    return setActualRows(allRows);\r\n                const filteredItems = GridViewFilter.onSearchItemChange({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered: props?.onSearchBoxItemsFiltered})(text, key);\r\n                searchCb(filteredItems);\r\n                setActualRows(filteredItems as IRow<T>[]);\r\n            }\r\n        },\r\n        onFilterIconClick: props?.onFilterIconClick,\r\n        onGroupIconClick: props?.onGroupIconClick,\r\n        onSearchBoxClick: props?.onSearchBoxClick\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            visibleCols,\r\n            filterPanelConfig,\r\n            groupPanelConfig,\r\n            isFilterPanelOpen,\r\n            isGroupPanelOpen,\r\n            listConfig,\r\n            shouldRenderCard,\r\n            groups\r\n        },\r\n        handlers: { onItemClick },\r\n        JSX: { CardsList }\r\n    }\r\n}","import { lazy, useContext, useMemo, useRef, useEffect } from 'react';\r\nimport { FilterPanelContext } from '../Contexts';\r\nimport { RangeType } from '../../helpers/enums';\r\nimport type { FilterOption } from '../../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\nimport type { IPersonaProps } from '@fluentui/react/lib/Persona';\r\n\r\nexport function usePanelFilterController() {\r\n    const { isOpen, onClose, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen, filterOptionsMatrix, availableFilters } = useContext(FilterPanelContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker, Label] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        const Label = lazy(() => import('@fluentui/react/lib/Label').then(({ Label }) => ({ default: Label })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker, Label];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if (!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string);\r\n        }\r\n        else if(option.selected && copyMap.has(option?.key as string) && option?.isDateComponent) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if (onOpen) onOpen(); }, []);\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0)\r\n            return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if (keyKind === keyToFilter)\r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    const getDefaultSelectedSlider = (keyToFilter: string): RangeType => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.find(([key]) => key === keyToFilter);\r\n        const mapWithSameKeyValue = mapWithSameKey?.[1]?.data;\r\n        if(mapWithSameKeyValue) \r\n            return mapWithSameKeyValue?.type;\r\n        return RangeType.NONE;\r\n    }\r\n\r\n    const getDefaultSelectedPeople = (keyToFilter: string): IPersonaProps[] => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.filter(([key]) => {\r\n            const keyKind = key?.split('_')[1];\r\n            return keyKind === keyToFilter\r\n        });\r\n        if(mapWithSameKey?.length > 0) {\r\n            const people = mapWithSameKey?.map(([_, value]) => value as IPersonaProps);\r\n            return people;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const onChangeTags = (options: FilterOption[]) => (tags: ITag[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(tags.length === 0) {\r\n            options.forEach(opt => {\r\n                if(copyMap.has(opt?.key as string))\r\n                    copyMap.delete(opt?.key as string);\r\n            });\r\n        } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n            copyMap.delete(lastAddedTag?.current?.key as string);\r\n            lastAddedTag.current = null; \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    const onTagSelected = (key: string) =>(selectedItem: ITag) => {\r\n        onAddOrRemoveToMap(key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n        lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n        return selectedItem;\r\n    }\r\n\r\n    const onResolveTagSuggestion = (options: FilterOption[]) => (currentFilter: string, tagList: ITag[], ) => {\r\n        const result = currentFilter\r\n        ? options.filter(opt => \r\n            opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n            && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n        return result;\r\n    }\r\n\r\n    const onRecordDateChange = (key: string) => (from: Date, to: Date, type: RangeType) => {\r\n        if(from && to && type !== RangeType.NONE)\r\n            onAddOrRemoveToMap(key, {\r\n                key: key,\r\n                text: `${from?.toISOString()} - ${to?.toISOString()}`,\r\n                data: { from, to, type },\r\n                selected: true,\r\n                isDateComponent: true,\r\n                name: `${from?.toISOString()} - ${to?.toISOString()}`\r\n            } as unknown as FilterOption);\r\n        else {\r\n            const copyMap = new Map(actualFilteredValues);\r\n            copyMap.delete(key);\r\n            setActualFilteredValues(copyMap);\r\n        }\r\n    }\r\n\r\n    const onChangePeople = (key: string) => (items: IPersonaProps[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(items.length === 0) {\r\n            actualFilteredValues?.forEach((_, k) => {\r\n                if(k?.split('_')?.[1] === key)\r\n                    copyMap.delete(k);\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        } \r\n        else {\r\n            items.forEach(i => {\r\n                onAddOrRemoveToMap(key, {\r\n                    key: i?.key,\r\n                    text: i?.text,\r\n                    data: i?.['data'],\r\n                    selected: true,\r\n                    isDateComponent: false,\r\n                    name: i?.text\r\n                } as unknown as FilterOption);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            isOpen,\r\n            actualFilteredValues,\r\n            panelTitle,\r\n            filterOptionsMatrix,\r\n            availableFilters\r\n        },\r\n        handlers: {\r\n            getDefaultDropdownSelectedKeys,\r\n            getDefaultSelectedTag,\r\n            getDefaultSelectedSlider,\r\n            getDefaultSelectedPeople,\r\n            onAddOrRemoveToMap,\r\n            onClose,\r\n            onCancel,\r\n            onApply,\r\n            onOpen,\r\n            setActualFilteredValues,\r\n            onChangeTags,\r\n            onTagSelected,\r\n            onResolveTagSuggestion,\r\n            onRecordDateChange,\r\n            onChangePeople\r\n        },\r\n        JSX: {\r\n            FluentPanel,\r\n            Dropdown,\r\n            PrimaryButton,\r\n            DefaultButton,\r\n            TagPicker,\r\n            Label\r\n        }\r\n    }\r\n}","export {GridView} from './GridView';","\r\nexport class Utils {\r\n\r\n    /**Tries to convert an ISO `string` to the locale format. */\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    /**\r\n     * @TO-DO: Add documentation\r\n     */\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        return items.slice(0).sort((a: T, b: T) => {\r\n            const aValue = Utils.getNestedObject(a, columnKey?.split('.'));\r\n            const bValue = Utils.getNestedObject(b, columnKey?.split('.'));\r\n            return ((isSortedDescending ? aValue < bValue : aValue > bValue) ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**Get a value from a deep nested object.\r\n     * \r\n     * @param obj The object to search in.\r\n     * @param path The path to the value, as an array of keys, separated by dots.\r\n     * @returns The value, if found.\r\n     * \r\n     * Theoretically, this function can be used to get the value from an `number[]` as the type of the `pathArr`, but I've not tested it.\r\n     */\r\n    public static getNestedObject<Path, ReturnV extends any, Obj extends Record<any, any>>(nestedObj: Obj, pathArr: Path[]): ReturnV {\r\n        return pathArr?.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj) as ReturnV;\r\n    }\r\n\r\n    /**@TO-DO: Add documentation */\r\n    public static getDeepKeys(obj: Record<any, any>): string[] {\r\n        let keys: string[] = [];\r\n        for(let key in obj) {\r\n            keys.push(key);\r\n            if(typeof obj[key] === \"object\") {\r\n                let subKeys = Utils.getDeepKeys(obj[key]);\r\n                keys = keys.concat(subKeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n}","\r\nexport enum RangeType {\r\n    NONE,\r\n    WEEK,\r\n    MONTH,\r\n    YEAR,\r\n    CUSTOM\r\n}\r\n\r\nexport enum IconClickCaller {\r\n    CLICK,\r\n    ENTER\r\n}","import { RefObject, useCallback, useRef, useState } from \"react\";\r\n\r\n/**\r\n * This hook can be used when using ref inside useCallbacks\r\n * \r\n * Usage\r\n * ```tsx\r\n * const [refCallback, ref, toggle] = useRefWithCallback<HTMLSpanElement>();\r\n * const onClick = useCallback(() => {\r\n    if (ref.current) \r\n      ref.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [toggle]);\r\n\r\n  //Change the value of the ref with refCallback(value);\r\n\r\n  return (<span ref={refCallback} />);\r\n  ```\r\n * @returns \r\n */\r\nexport function useRefWithCallback<T>(initialValue: T): [\r\n    (value: T) => void,\r\n    RefObject<T>,\r\n    boolean\r\n] {\r\n    const ref = useRef<T | null>(initialValue);\r\n    const [toggleState, setToggle] = useState(false);\r\n    const refCallback = useCallback((value: T) => {\r\n        ref.current = value;\r\n        setToggle(val => !val);\r\n    }, []);\r\n\r\n    return [refCallback, ref, toggleState];\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/ChoiceGroup\");","module.exports = require(\"@fluentui/react/lib/DatePicker\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Label\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Slider\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"react\");"],"sourceRoot":""}