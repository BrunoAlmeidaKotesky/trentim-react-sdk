{
  "version": 3,
  "sources": ["../../../@storybook/channel-websocket/dist/esm/index.js"],
  "sourcesContent": ["import global from 'global';\nimport { Channel } from '@storybook/channels';\nimport { logger } from '@storybook/client-logger';\nimport { isJSON, parse, stringify } from 'telejson';\nconst {\n  WebSocket\n} = global;\nexport class WebsocketTransport {\n  constructor({\n    url,\n    onError\n  }) {\n    this.socket = void 0;\n    this.handler = void 0;\n    this.buffer = [];\n    this.isReady = false;\n    this.connect(url, onError);\n  }\n\n  setHandler(handler) {\n    this.handler = handler;\n  }\n\n  send(event) {\n    if (!this.isReady) {\n      this.sendLater(event);\n    } else {\n      this.sendNow(event);\n    }\n  }\n\n  sendLater(event) {\n    this.buffer.push(event);\n  }\n\n  sendNow(event) {\n    const data = stringify(event, {\n      maxDepth: 15,\n      allowFunction: true\n    });\n    this.socket.send(data);\n  }\n\n  flush() {\n    const {\n      buffer\n    } = this;\n    this.buffer = [];\n    buffer.forEach(event => this.send(event));\n  }\n\n  connect(url, onError) {\n    this.socket = new WebSocket(url);\n\n    this.socket.onopen = () => {\n      this.isReady = true;\n      this.flush();\n    };\n\n    this.socket.onmessage = ({\n      data\n    }) => {\n      const event = typeof data === 'string' && isJSON(data) ? parse(data) : data;\n      this.handler(event);\n    };\n\n    this.socket.onerror = e => {\n      if (onError) {\n        onError(e);\n      }\n    };\n  }\n\n}\nexport function createChannel({\n  url,\n  async = false,\n  onError = err => logger.warn(err)\n}) {\n  const transport = new WebsocketTransport({\n    url,\n    onError\n  });\n  return new Channel({\n    transport,\n    async\n  });\n} // backwards compat with builder-vite\n\nexport default createChannel;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,oBAAmB;AAInB,IAAM;AAAA,EACJ;AACF,IAAI,cAAAA;AACG,IAAM,qBAAN,MAAyB;AAAA,EAC9B,YAAY;AAAA,IACV;AAAA,IACA;AAAA,EACF,GAAG;AACD,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,SAAS,CAAC;AACf,SAAK,UAAU;AACf,SAAK,QAAQ,KAAK,OAAO;AAAA,EAC3B;AAAA,EAEA,WAAW,SAAS;AAClB,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,KAAK,OAAO;AACV,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UAAU,KAAK;AAAA,IACtB,OAAO;AACL,WAAK,QAAQ,KAAK;AAAA,IACpB;AAAA,EACF;AAAA,EAEA,UAAU,OAAO;AACf,SAAK,OAAO,KAAK,KAAK;AAAA,EACxB;AAAA,EAEA,QAAQ,OAAO;AACb,UAAM,OAAO,UAAU,OAAO;AAAA,MAC5B,UAAU;AAAA,MACV,eAAe;AAAA,IACjB,CAAC;AACD,SAAK,OAAO,KAAK,IAAI;AAAA,EACvB;AAAA,EAEA,QAAQ;AACN,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,SAAK,SAAS,CAAC;AACf,WAAO,QAAQ,WAAS,KAAK,KAAK,KAAK,CAAC;AAAA,EAC1C;AAAA,EAEA,QAAQ,KAAK,SAAS;AACpB,SAAK,SAAS,IAAI,UAAU,GAAG;AAE/B,SAAK,OAAO,SAAS,MAAM;AACzB,WAAK,UAAU;AACf,WAAK,MAAM;AAAA,IACb;AAEA,SAAK,OAAO,YAAY,CAAC;AAAA,MACvB;AAAA,IACF,MAAM;AACJ,YAAM,QAAQ,OAAO,SAAS,YAAY,OAAO,IAAI,IAAI,MAAM,IAAI,IAAI;AACvE,WAAK,QAAQ,KAAK;AAAA,IACpB;AAEA,SAAK,OAAO,UAAU,OAAK;AACzB,UAAI,SAAS;AACX,gBAAQ,CAAC;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAEF;AACO,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA,QAAQ;AAAA,EACR,UAAU,SAAO,EAAO,KAAK,GAAG;AAClC,GAAG;AACD,QAAM,YAAY,IAAI,mBAAmB;AAAA,IACvC;AAAA,IACA;AAAA,EACF,CAAC;AACD,SAAO,IAAI,EAAQ;AAAA,IACjB;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAEA,IAAO,cAAQ;",
  "names": ["global"]
}
