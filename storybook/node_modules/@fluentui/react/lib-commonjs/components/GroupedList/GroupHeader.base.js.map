{"version":3,"file":"GroupHeader.base.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupHeader.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeRenderFunction, classNamesFunction, getId, getRTL, getRTLSafeKeyCode, KeyCodes } from '../../Utilities';\nimport { SelectionMode } from '../../Selection';\nimport { Check } from '../../Check';\nimport { Icon } from '../../Icon';\nimport { GroupSpacer } from './GroupSpacer';\nimport { Spinner } from '../../Spinner';\nimport { CHECK_CELL_WIDTH } from '../DetailsList/DetailsRowCheck.styles';\nimport type { IProcessedStyleSet, ITheme } from '../../Styling';\nimport type {\n  IGroupHeaderStyleProps,\n  IGroupHeaderStyles,\n  IGroupHeaderProps,\n  IGroupHeaderCheckboxProps,\n} from './GroupHeader.types';\n\nconst getClassNames = classNamesFunction<IGroupHeaderStyleProps, IGroupHeaderStyles>();\n\nexport interface IGroupHeaderState {\n  isCollapsed: boolean;\n  isLoadingVisible: boolean;\n}\n\nexport class GroupHeaderBase extends React.Component<IGroupHeaderProps, IGroupHeaderState> {\n  public static defaultProps: IGroupHeaderProps = {\n    expandButtonProps: { 'aria-label': 'expand collapse group' },\n  };\n\n  private _classNames: IProcessedStyleSet<IGroupHeaderStyles>;\n  private _id: string;\n\n  public static getDerivedStateFromProps(\n    nextProps: IGroupHeaderProps,\n    previousState: IGroupHeaderState,\n  ): IGroupHeaderState {\n    if (nextProps.group) {\n      const newCollapsed = nextProps.group.isCollapsed;\n      const isGroupLoading = nextProps.isGroupLoading;\n      const newLoadingVisible = !newCollapsed && isGroupLoading && isGroupLoading(nextProps.group);\n\n      return {\n        ...previousState,\n        isCollapsed: newCollapsed || false,\n        isLoadingVisible: newLoadingVisible || false,\n      };\n    }\n\n    return previousState;\n  }\n\n  constructor(props: IGroupHeaderProps) {\n    super(props);\n\n    this._id = getId('GroupHeader');\n\n    this.state = {\n      isCollapsed: (this.props.group && this.props.group.isCollapsed) as boolean,\n      isLoadingVisible: false,\n    };\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      group,\n      groupLevel = 0,\n      viewport,\n      selectionMode,\n      loadingText,\n      // eslint-disable-next-line deprecation/deprecation\n      isSelected = false,\n      selected = false,\n      indentWidth,\n      onRenderTitle = this._onRenderTitle,\n      onRenderGroupHeaderCheckbox,\n      isCollapsedGroupSelectVisible = true,\n      expandButtonProps,\n      expandButtonIcon,\n      selectAllButtonProps,\n      theme,\n      styles,\n      className,\n      compact,\n      ariaPosInSet,\n      ariaSetSize,\n      ariaRowIndex,\n      useFastIcons,\n    } = this.props;\n\n    const defaultCheckboxRender = useFastIcons ? this._fastDefaultCheckboxRender : this._defaultCheckboxRender;\n\n    const onRenderCheckbox = onRenderGroupHeaderCheckbox\n      ? composeRenderFunction(onRenderGroupHeaderCheckbox, defaultCheckboxRender)\n      : defaultCheckboxRender;\n\n    const { isCollapsed, isLoadingVisible } = this.state;\n\n    const canSelectGroup = selectionMode === SelectionMode.multiple;\n    const isSelectionCheckVisible = canSelectGroup && (isCollapsedGroupSelectVisible || !(group && group.isCollapsed));\n    const currentlySelected = selected || isSelected;\n\n    const isRTL = getRTL(theme);\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      selected: currentlySelected,\n      isCollapsed,\n      compact,\n    });\n\n    if (!group) {\n      return null;\n    }\n\n    return (\n      <div\n        className={this._classNames.root}\n        style={viewport ? { minWidth: viewport.width } : {}}\n        onClick={this._onHeaderClick}\n        role=\"row\"\n        aria-setsize={ariaSetSize}\n        aria-posinset={ariaPosInSet}\n        aria-rowindex={ariaRowIndex}\n        data-is-focusable={true}\n        onKeyUp={this._onKeyUp}\n        aria-label={group.ariaLabel}\n        aria-labelledby={group.ariaLabel ? undefined : this._id}\n        aria-expanded={!this.state.isCollapsed}\n        aria-selected={canSelectGroup ? currentlySelected : undefined}\n        aria-level={groupLevel + 1}\n      >\n        <div className={this._classNames.groupHeaderContainer} role=\"presentation\">\n          {isSelectionCheckVisible ? (\n            <div role=\"gridcell\">\n              <button\n                data-is-focusable={false}\n                type=\"button\"\n                className={this._classNames.check}\n                role=\"checkbox\"\n                id={`${this._id}-check`}\n                aria-checked={currentlySelected}\n                aria-labelledby={`${this._id}-check ${this._id}`}\n                data-selection-toggle={true}\n                onClick={this._onToggleSelectGroupClick}\n                {...selectAllButtonProps}\n              >\n                {onRenderCheckbox({ checked: currentlySelected, theme }, onRenderCheckbox)}\n              </button>\n            </div>\n          ) : (\n            // To make the group header align properly with the column headers, this spacer\n            // needs to be the same width as the check cell in the column header.\n            selectionMode !== SelectionMode.none && <GroupSpacer indentWidth={CHECK_CELL_WIDTH} count={1} />\n          )}\n\n          <GroupSpacer indentWidth={indentWidth} count={groupLevel!} />\n\n          <div className={this._classNames.dropIcon} role=\"presentation\">\n            <Icon iconName=\"Tag\" />\n          </div>\n          <div role=\"gridcell\">\n            <button\n              data-is-focusable={false}\n              type=\"button\"\n              className={this._classNames.expand}\n              onClick={this._onToggleClick}\n              aria-expanded={!this.state.isCollapsed}\n              {...expandButtonProps}\n            >\n              <Icon\n                className={this._classNames.expandIsCollapsed}\n                iconName={expandButtonIcon || (isRTL ? 'ChevronLeftMed' : 'ChevronRightMed')}\n              />\n            </button>\n          </div>\n\n          {onRenderTitle(this.props, this._onRenderTitle)}\n          {isLoadingVisible && <Spinner label={loadingText} />}\n        </div>\n      </div>\n    );\n  }\n\n  private _toggleCollapse = () => {\n    const { group, onToggleCollapse, isGroupLoading } = this.props;\n    const { isCollapsed } = this.state;\n\n    const newCollapsed = !isCollapsed;\n    const newLoadingVisible = !newCollapsed && isGroupLoading && isGroupLoading(group!);\n\n    this.setState({\n      isCollapsed: newCollapsed,\n      isLoadingVisible: newLoadingVisible as boolean,\n    });\n    if (onToggleCollapse) {\n      onToggleCollapse(group!);\n    }\n  };\n\n  private _onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { group, onGroupHeaderKeyUp } = this.props;\n\n    if (onGroupHeaderKeyUp) {\n      onGroupHeaderKeyUp(ev, group);\n    }\n\n    if (!ev.defaultPrevented) {\n      // eslint-disable-next-line deprecation/deprecation\n      const shouldOpen = this.state.isCollapsed && ev.which === getRTLSafeKeyCode(KeyCodes.right, this.props.theme);\n      // eslint-disable-next-line deprecation/deprecation\n      const shouldClose = !this.state.isCollapsed && ev.which === getRTLSafeKeyCode(KeyCodes.left, this.props.theme);\n      if (shouldClose || shouldOpen) {\n        this._toggleCollapse();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    }\n  };\n\n  private _onToggleClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._toggleCollapse();\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onToggleSelectGroupClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onToggleSelectGroup, group } = this.props;\n\n    if (onToggleSelectGroup) {\n      onToggleSelectGroup(group!);\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  private _onHeaderClick = (): void => {\n    const { group, onGroupHeaderClick, onToggleSelectGroup } = this.props;\n\n    if (onGroupHeaderClick) {\n      onGroupHeaderClick(group!);\n    } else if (onToggleSelectGroup) {\n      onToggleSelectGroup(group!);\n    }\n  };\n\n  private _defaultCheckboxRender(checkboxProps: IGroupHeaderCheckboxProps) {\n    return <Check checked={checkboxProps.checked} />;\n  }\n\n  private _fastDefaultCheckboxRender(checkboxProps: IGroupHeaderCheckboxProps) {\n    return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n  }\n\n  private _onRenderTitle = (props: IGroupHeaderProps): JSX.Element | null => {\n    const { group, ariaColSpan } = props;\n\n    if (!group) {\n      return null;\n    }\n\n    return (\n      <div className={this._classNames.title} id={this._id} role=\"gridcell\" aria-colspan={ariaColSpan}>\n        <span>{group.name}</span>\n        {\n          // hasMoreData flag is set when grouping is throttled by SPO server which in turn resorts to regular\n          // sorting to simulate grouping behaviors, in which case group count is the number of items returned\n          // so far. That's the reason we need to use \"+\" to show we might have more items than count\n          // indicates.\n        }\n        <span className={this._classNames.headerCount}>\n          ({group.count}\n          {group.hasMoreData && '+'})\n        </span>\n      </div>\n    );\n  };\n}\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n"]}