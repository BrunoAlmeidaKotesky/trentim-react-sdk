{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/Card/Card.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/styles.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"@fluentui/react/lib/Styling\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","InfoCard","React","memo","props","styles","card","backgroundColor","border","margin","borderRadius","position","display","flexDirection","width","height","userSelect","enableUserSelect","color","overflow","top","borderBottom","gridTemplateColumns","columnGap","padding","fontFamily","col","rightCol","alignItems","leftCol","cardTitle","WebkitLineClamp","WebkitBoxOrient","fontSize","lineHeight","projectCode","opacity","bottom","justifyContent","circleWrap","circle","background","status","marginLeft","linkButton","minWidth","onClick","e","onCardClick","style","cardSubtitle","cardRightColInformation","_a","containerStyle","_b","_c","values","_d","length","_e","map","plantName","title","circleIndicator","_f","_g","_h","Button_1","onClickDownButton","iconProps","iconName","createContext","enableFilter","enableSearch","enableCardView","customButtons","setIsFilterPanelOpen","undefined","searchBoxPlaceholder","setRenderAs","defaultButtonsOrder","group","search","filter","isOpen","onApply","availableFilters","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","GridView","useGridController","state","handlers","JSX","CardsList","actualRows","cols","groups","isFilterPanelOpen","panelConfig","listConfig","shouldRenderCard","onRowClick","Contexts_1","Provider","ListOptions_1","zIndex","onRenderCustomComponent","DetailsList_1","__assign","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","item","cursor","items","columns","groupProps","isAllGroupsCollapsed","gr","isCollapsed","collapseAllVisibility","visible","onRenderHeader","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","hidden","react_1","fallback","id","cardProps","gap","PanelFilter_1","ListOptions","useContext","searchKey","onSearchItem","defaultStyles","container","_","label","order","b","className","text","onChange","newValue","placeholder","icon","PanelFilter","useMemo","Panel","lazy","then","default","DropDown","Dropdown","PrimaryButton","DefaultButton","TagPicker","FluentPanel","lastAddedTag","useRef","onAddOrRemoveToMap","rootItemKey","option","copyMap","selected","has","set","itemKey","data","useEffect","listContainsTagList","tag","tagList","some","compareTag","getDefaultDropdownSelectedKeys","selectedKeys","forEach","k","push","getDefaultSelectedTag","keyToFilter","selectedTags","keyKind","split","onRenderFooter","marginRight","isFooterAtBottom","onDismiss","idx","options","renderAs","defaultSelectedKeys","multiSelect","enableMultiple","opt","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","tags","includes","current","onItemSelected","selectedItem","onResolveSuggestions","currentFilter","result","toLowerCase","indexOf","f","mergeStyleSets","fileIconHeaderIcon","fileIconCell","textAlign","selectors","content","verticalAlign","visibility","fileIconImg","maxHeight","maxWidth","controlWrapper","flexWrap","exampleToggle","marginBottom","selectionDetails","useState","setShouldRenderCard","setCols","rows","allRows","setAllRows","setActualRows","currentFilteredRows","setCurFilteredRows","setGroups","setIsFilterPanel","autoFileDisplay","rowsAsNode","console","warn","error","Card","row","hasCustomCard","cProps","Utils_1","getNestedObject","cardTitleKey","cardSubtitleKey","rightColumn","Id","keys","fontWeight","convertedColumns","fieldName","onRender","_2","fieldValue","dateConvertionOptions","shouldConvertToLocaleString","convertIsoToLocaleString","locales","formatOptions","styles_1","iconClassName","ariaLabel","isIconOnly","src","file","iconUrl","alt","fileType","isRowHeader","isResizable","isSorted","isSortedDescending","sortAscendingAriaLabel","sortDescendingAriaLabel","isPadded","__read","generateTreeRows","nodes","groups_1","processNodes","buildFilters","filters","columnsToFilter","hiddenFilterKeys","index","renderAs_1","renderFilterAs","stringObject","Utils","toString","uniqueOptions","obj","pos","arr","mapObj","groupMaps","selectedItems","mapsByKeyKind","keyName","doesntHaveKey","sameMapsList","__spreadArray","thisKindMap_1","onApplyFilter","size","groupedMaps","onlyNecessaryKeysToVerify","orFilterAggregation","deepKey","getDeepKeys","filteredKeys","realKey","valueFromKey","thisKeyMap","v","currentFilteredIds","mapKeyWithDots","valueFromMap","filteredKeys_1_1","filterPanelTitle","filteredRows","apply","itemValues","keys_1_1","containsText","headerOptions","_j","date","Date","isNaN","getTime","isIsoDate","test","Intl","DateTimeFormat","format","nodeItems","level","nodeItem","newGroup","startIndex","count","columnKey","slice","sort","nestedObj","pathArr","reduce","subkeys","concat","subkey","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { IInfoCardProps } from '../models/interfaces/IInfoCardProps';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst InfoCard = React.memo((props: IInfoCardProps) => {\r\n    const styles: Record<string, CSSProperties> = {\r\n        card: {\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            border: \"1px solid #ababab\",\r\n            margin: \"0 0 16px\",\r\n            borderRadius: \"4px\",\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: props?.width || \"100%\",\r\n            height: props?.height || \"150px\",\r\n            userSelect: props?.enableUserSelect ? \"unset\" : \"none\",\r\n            color: \"#333\",\r\n            overflow: \"hidden\"\r\n        },\r\n        top: {\r\n            borderBottom: \"1px solid rgb(237, 235, 233)\",\r\n            overflow: \"hidden\",\r\n            height: \"100%\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 120px\",\r\n            columnGap: \"8px\",\r\n            padding: \"16px\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n        },\r\n        col: { display: \"flex\", flexDirection: \"column\" },\r\n        rightCol: { display: 'flex', flexDirection: 'column', alignItems: \"flex-end\" },\r\n        leftCol: { display: 'flex', flexDirection: 'column' },\r\n        cardTitle: {\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            WebkitBoxOrient: \"vertical\",\r\n            overflow: \"hidden\",\r\n            fontSize: \"18px\",\r\n            lineHeight: 1.4\r\n        },\r\n        projectCode: {\r\n            fontSize: \"16px\",\r\n            opacity: 0.8\r\n        },\r\n        bottom: {\r\n            display: \"flex\",\r\n            padding: \"6px 16px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"rgb(250, 249, 248)\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n\r\n        },\r\n        circleWrap: { display: \"inline-flex\", alignItems: \"center\" },\r\n        circle: {\r\n            width: \"16px\",\r\n            height: \"16px\",\r\n            background: \"#06ad51\",\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #06ad51\",\r\n            display: \"inline-block\"\r\n        },\r\n        status: { display: \"inline-block\", marginLeft: \"8px\" },\r\n        linkButton: { width: \"32px\", height: \"32px\", minWidth: \"32px\" }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={(e) => {\r\n            if (props.onCardClick)\r\n                props?.onCardClick(e);\r\n        }} style={styles.card}>\r\n            <div data-class-name=\"card-top\" style={styles.top}>\r\n                <div data-class-name=\"card-top-left\" style={styles.leftCol}>\r\n                    <div style={styles.cardTitle}>\r\n                        <span>{props?.cardTitle}</span>\r\n                    </div>\r\n                    <div style={styles.projectCode}>\r\n                        <span>{props?.cardSubtitle}</span>\r\n                    </div>\r\n                </div>\r\n                <div data-class-name=\"card-top-right\" style={props?.cardRightColInformation?.containerStyle ?? styles.rightCol}>\r\n                    {props?.cardRightColInformation?.values?.length > 0 && props?.cardRightColInformation?.values.map(value => (\r\n                        <div style={value?.style ?? styles.plantName}>\r\n                            <span>{value?.title}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div data-class-name=\"card-bottom\" style={styles.bottom}>\r\n                <div data-class-name=\"card-circle-wrapper\" style={styles.circleWrap}>\r\n                    <div style={{ ...styles.circle, background: props?.circleIndicator?.color, border: `1px solid ${props?.circleIndicator?.color}` }}></div>\r\n                    <span style={styles.status}>{props?.circleIndicator?.title}</span>\r\n                </div>\r\n                <div data-class-name=\"card-button-container\">\r\n                    <PrimaryButton onClick={props?.onClickDownButton} style={styles.linkButton} iconProps={{ iconName: props?.iconName || 'Page' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default InfoCard;","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IGridView\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps>({ \r\n    enableFilter: true, \r\n    enableSearch: true,\r\n    enableCardView: true,\r\n    customButtons: [], \r\n    setIsFilterPanelOpen: undefined, \r\n    searchBoxPlaceholder: '',\r\n    setRenderAs: undefined, \r\n    defaultButtonsOrder: { group: 0, search: 1, filter: 2, card: 3 } \r\n});\r\n\r\nexport const FilterPaneContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    availableFilters: [], \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined\r\n});","import * as React from 'react';\r\nimport { useGridController } from './useGridController';\r\nimport { FilterPaneContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport { ListOptions } from './ListOptions';\r\nimport { Suspense } from 'react';\r\n\r\nexport function GridView<T = any>(props: IGridListProps<T>) {\r\n    const {state, handlers, JSX} = useGridController(props);\r\n    const {CardsList} = JSX;\r\n    const {actualRows, cols, groups, isFilterPanelOpen, panelConfig, listConfig, shouldRenderCard} = state;\r\n    const {onRowClick} = handlers;\r\n\r\n    return (\r\n        <FilterPaneContext.Provider value={panelConfig}>\r\n            <ListOptionsContext.Provider value={listConfig}>\r\n                <div>\r\n                    <ListOptions />\r\n                    <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0 }}>\r\n                        {\r\n                        !!props?.onRenderCustomComponent ? actualRows?.map(i => props?.onRenderCustomComponent(i)) :\r\n                        !shouldRenderCard ? \r\n                        <DetailsList\r\n                            {...props?.detailsListProps}\r\n                            onRenderItemColumn={props?.onRenderItemColumn}\r\n                            onRenderRow={(p, defaultRender) => <div onClick={() => onRowClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onRowClick ? 'pointer' : 'default' } } })}</div>}\r\n                            items={actualRows} columns={cols} groups={groups}\r\n                            groupProps={{\r\n                                isAllGroupsCollapsed: props?.groups ? props?.groups.filter(gr => !gr?.isCollapsed)?.length === 0 : true,\r\n                                collapseAllVisibility: CollapseAllVisibility.visible,\r\n                                onRenderHeader: (props, defaultRender) => {\r\n                                    if (!props.group!.name)\r\n                                        return <></>;\r\n                                    return defaultRender(props);\r\n                                }\r\n                            }}\r\n                            layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                            onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                                <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                    <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                                </Sticky>)}\r\n                            checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                        /> :\r\n                        <Suspense fallback={'...'}>\r\n                            <div id=\"gridView-cardContainer\" style={props?.cardProps?.containerStyle ?? {display: 'grid', gap: 12, gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))'}}>\r\n                            {CardsList}\r\n                            </div>\r\n                        </Suspense>\r\n                        }\r\n                    </div>\r\n                    {isFilterPanelOpen && <PanelFilter />}\r\n                </div>\r\n            </ListOptionsContext.Provider>\r\n        </FilterPaneContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {ListOptionsContext} from './Contexts';\r\n\r\nexport const ListOptions = () => {\r\n    const {customButtons, enableFilter, enableSearch, searchKey, onSearchItem, setIsFilterPanelOpen, defaultButtonsOrder, searchBoxPlaceholder, enableCardView, setRenderAs} = React.useContext(ListOptionsContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        <DefaultButton \r\n            onClick={ _ => ''} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />\r\n        {enableCardView && \r\n        <DefaultButton \r\n            onClick={_ => setRenderAs()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.card}}} iconProps={{iconName: 'GridViewMedium'}} />}\r\n        {customButtons?.length > 0 && customButtons?.map(b => \r\n            <PrimaryButton className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>)}\r\n        {(enableSearch && searchKey) && \r\n        <TextField \r\n            onChange={(_, newValue) => onSearchItem(newValue, searchKey)} placeholder={searchBoxPlaceholder}\r\n            iconProps={{iconName: 'Search'}} styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => setIsFilterPanelOpen(true)} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense, useRef, useEffect } from 'react';\r\nimport { FilterPaneContext } from './Contexts';\r\nimport type { FilterOption } from '../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\n\r\nfunction PanelFilter() {\r\n    const { isOpen, onClose, availableFilters, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen } = useContext(FilterPaneContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string); \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if(onOpen) onOpen();}, []);\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0) \r\n          return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if(keyKind === keyToFilter) \r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    if (!isOpen)\r\n        return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    const options = filter?.options\r\n                    .filter(i => (i?.text !== null && i?.text !== undefined))\r\n                    .map<FilterOption>(({ key, text, data }) => ({\r\n                        key,\r\n                        text,\r\n                        data\r\n                    }));\r\n                    return (<Suspense fallback={'...'}>\r\n                        {filter.renderAs === 'Dropdown' ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={options}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        filter.renderAs === 'SearchBox' ? \r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <label>{filter?.name}</label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{doNotLayer: true}}\r\n                            onChange={(tags) => {\r\n                                const copyMap = new Map(actualFilteredValues);\r\n                                if(tags.length === 0) {\r\n                                    options.forEach(opt => {\r\n                                        if(copyMap.has(opt?.key as string))\r\n                                            copyMap.delete(opt?.key as string);\r\n                                    });\r\n                                } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n                                    copyMap.delete(lastAddedTag?.current?.key as string);\r\n                                    lastAddedTag.current = null; \r\n                                }\r\n                                setActualFilteredValues(copyMap);\r\n                            }}\r\n                            onItemSelected={(selectedItem) => {\r\n                                onAddOrRemoveToMap(filter?.key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n                                lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n                                return selectedItem;\r\n                            }}\r\n                            onResolveSuggestions={(currentFilter, tagList) => {\r\n                                const result = currentFilter\r\n                                ? options.filter(opt => \r\n                                    opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n                                    && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n                                return result;\r\n                            }} /></div> :\r\n                        null}\r\n                    </Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","export {GridView} from './GridView';","import { mergeStyleSets } from \"@fluentui/react/lib/Styling\";\r\n\r\nexport const classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px',\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden',\r\n            },\r\n        },\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px',\r\n    },\r\n    controlWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    exampleToggle: {\r\n        display: 'inline-block',\r\n        marginBottom: '10px',\r\n        marginRight: '30px',\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px',\r\n    },\r\n});","import * as React from 'react';\r\nimport { useState, useEffect, useMemo, lazy } from 'react';\r\nimport {classNames} from './styles';\r\nimport type { IGridListProps, IListOptionsProps, IRow } from '../models/interfaces/IGridView';\r\nimport { Utils } from '../helpers/Utils';\r\nimport type { FilterOption, IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroup } from '@fluentui/react/lib/DetailsList';\r\n\r\nexport function useGridController(props: IGridListProps<any>) {\r\n    const [renderAs, setRenderAs] = useState<typeof props.renderAs>(props?.renderAs || 'list');\r\n    const [shouldRenderCard, setShouldRenderCard] = useState(props?.renderAs === 'card');\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState(props?.rows ?? []);\r\n    const [currentFilteredRows, setCurFilteredRows] = useState<IRow[]>([]);\r\n    const [groups, setGroups] = useState(props?.groups);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setRenderAs(props?.renderAs);\r\n    }, [props?.renderAs]);\r\n\r\n    useEffect(() => {\r\n        if(props?.autoFileDisplay) {\r\n            if((!props?.rowsAsNode) && renderAs !== 'tree') {\r\n                console.warn(\"[GridView] - You are using `autoFileDisplay`, but you are not using rowsAsNode. This will not work.\");\r\n            }\r\n        }\r\n    }, [props?.autoFileDisplay, props?.rowsAsNode, renderAs]);\r\n\r\n    useEffect(() => {\r\n        if(renderAs === 'card') {\r\n            setShouldRenderCard(true);\r\n            if(!props?.cardProps)\r\n                console.error(\"[GridView] - You are using `renderAs: card`, but you are not passing cardProps. This will not work.\");\r\n        }\r\n        else setShouldRenderCard(false);\r\n    }, [renderAs]);\r\n\r\n    const Card = useMemo(() => {\r\n        if(!shouldRenderCard) return null;\r\n        return lazy(() => import('../Card/Card').then((module) => ({ default: module?.default })));\r\n    }, [shouldRenderCard]);\r\n\r\n    const CardsList = useMemo(() => {\r\n        if(!Card)\r\n            return [];\r\n        \r\n        return actualRows?.map(row => {\r\n            const hasCustomCard = !!props?.onRenderCustomComponent;\r\n            if(hasCustomCard)\r\n                return props?.onRenderCustomComponent(row);\r\n            const cProps = props?.cardProps;\r\n            const cardTitle: string = Utils.getNestedObject(row, cProps?.cardTitleKey?.split('.')) || '';\r\n            const cardSubtitle: string = Utils.getNestedObject(row, cProps?.cardSubtitleKey?.split('.')) || '';\r\n            const rightCol = cProps?.rightColumn;\r\n            return (\r\n            <Card\r\n                key={row?.Id}\r\n                cardRightColInformation={rightCol?.keys && {\r\n                    ...rightCol,\r\n                    values: rightCol?.keys?.map(opt => ({\r\n                        title: Utils.getNestedObject(row, opt?.title?.split('.') as any),\r\n                        style: opt?.style ??  { fontSize: 16, marginBottom: 4, fontWeight: 600 }\r\n                    }))\r\n                }}\r\n                onCardClick={e => {\r\n                    onRowClick(row);\r\n                    if(cProps?.onCardClick)\r\n                        cProps?.onCardClick(e);\r\n                }}\r\n                cardTitle={cardTitle}\r\n                cardSubtitle={cardSubtitle}\r\n                {...props?.cardProps} />\r\n            );\r\n        })\r\n    }, [Card, props?.cardProps, actualRows, renderAs, props?.onRenderCustomComponent]);\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        if (props?.columns?.length) {\r\n            const columns = props?.columns;\r\n            const convertedColumns = columns.map(c => {\r\n                if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue: string = Utils.getNestedObject(item, c?.fieldName?.split('.'));\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n\r\n                    return c;\r\n                } else if (c?.dateConvertionOptions?.shouldConvertToLocaleString) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConvertionOptions?.locales, c?.dateConvertionOptions?.formatOptions);\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                }\r\n                return c;\r\n            })\r\n            setCols(convertedColumns);\r\n        }\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        if (renderAs === 'tree' && props?.autoFileDisplay)\r\n            setCols([{\r\n                key: 'file.iconUrl',\r\n                name: 'ícone',\r\n                className: classNames.fileIconCell,\r\n                iconClassName: classNames.fileIconHeaderIcon,\r\n                ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n                iconName: 'Page',\r\n                isIconOnly: true,\r\n                fieldName: 'file.iconUrl',\r\n                minWidth: 16,\r\n                maxWidth: 16,\r\n                onRender: (item: IRow) => (<img src={item?.file?.iconUrl} className={classNames.fileIconImg} alt={`${item?.file?.fileType} file icon`} />),\r\n            },\r\n            {\r\n                key: 'file.name',\r\n                name: 'Nome',\r\n                fieldName: 'file.name',\r\n                minWidth: 210,\r\n                maxWidth: 350,\r\n                isRowHeader: true,\r\n                isResizable: true,\r\n                isSorted: true,\r\n                isSortedDescending: false,\r\n                sortAscendingAriaLabel: 'Sorted A to Z',\r\n                sortDescendingAriaLabel: 'Sorted Z to A',\r\n                onRender: (item: IRow) => (<span>{item?.file?.name}</span>),\r\n                data: 'string',\r\n                isPadded: true,\r\n            }, ...cols]);\r\n        else setCols(props?.columns);\r\n    }, [renderAs, props?.autoFileDisplay]);\r\n\r\n    useEffect(() => {\r\n        setActualRows(props?.rows);\r\n        setAllRows(props?.rows)\r\n    }, [props?.rows?.length]);\r\n\r\n    useEffect(() => { generateTreeRows(); }, [props?.rowsAsNode, renderAs]);\r\n\r\n    const generateTreeRows = () => {\r\n        if (renderAs === 'tree' && props?.rowsAsNode) {\r\n            const nodes = props.rowsAsNode;\r\n            const items: IRow[] = [];\r\n            const groups: IGroup[] = [];\r\n            Utils.processNodes(nodes, groups, items, 0);\r\n            setActualRows(items);\r\n            setAllRows(items);\r\n            setGroups(groups);\r\n        }\r\n    }\r\n\r\n    const onRowClick = (item: IRow) => {\r\n        if (props?.onRowClick)\r\n            props?.onRowClick(item);\r\n    }\r\n    /**Generate the dropdowns of each availabe column and it's unique values */\r\n    const buildFilters = (): IAvailableFilters[] => {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = cols.filter(c => (!props?.hiddenFilterKeys?.includes(c?.key)));\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConvertionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConvertionOptions?.locales, col?.dateConvertionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    const groupMaps = (selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> => {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            const keyName = key.split('_')[1];\r\n            const doesntHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesntHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    /**Isso deve estar O log n */\r\n    const onApplyFilter: IPanelFilterProps['onApply'] = (selectedItems) => {\r\n        if(selectedItems.size === 0) {\r\n            generateTreeRows();\r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n            return;\r\n        }\r\n        const groupedMaps = groupMaps(selectedItems);\r\n        //const allGroupMapKeys = [...groupedMaps.keys()]?.flatMap(i => i?.split('.')) ?? [];\r\n        const onlyNecessaryKeysToVerify = cols.filter(c => groupedMaps.has(c?.key)).map(c => c?.key);\r\n        let orFilterAggregation: IRow[] = currentFilteredRows;\r\n        for (let idx = 0; idx < allRows?.length; idx++) {\r\n            const row = allRows[idx];\r\n            const deepKey = Utils.getDeepKeys(row);\r\n            const filteredKeys = onlyNecessaryKeysToVerify.filter(k => deepKey.includes(k));\r\n            for (const key of filteredKeys) {\r\n                let realKey: string = key;\r\n                const valueFromKey = Utils.getNestedObject(row, key?.split('.'));\r\n                if(valueFromKey === undefined || valueFromKey === null) continue;\r\n                if(groupedMaps.has(realKey)) {\r\n                    const thisKeyMap = groupedMaps.get(realKey);\r\n                    thisKeyMap.forEach((v) => {\r\n                        const currentFilteredIds = orFilterAggregation.map(r => r?.Id);\r\n                        const mapKeyWithDots = (v?.rootItemKey as string)?.split('.');\r\n                        const valueFromMap = Utils.getNestedObject(v?.data, mapKeyWithDots);\r\n                        if(!(currentFilteredIds.includes(row?.Id)) && valueFromKey === valueFromMap)\r\n                            orFilterAggregation.push(row);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (orFilterAggregation.length > 0) {\r\n            setActualRows(orFilterAggregation)\r\n            setCurFilteredRows(orFilterAggregation);\r\n        } else { \r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n        }\r\n        setIsFilterPanel(false);\r\n    }\r\n\r\n    const panelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: onApplyFilter,\r\n        onCancel: () => { setIsFilterPanel(false); },\r\n        onClose: () =>  { setIsFilterPanel(false); },\r\n        onOpen: () => { setCurFilteredRows([]); },\r\n        //The available filters are the ones that are defined in the `columns` prop, and the options are the rows that are defined in the `rows` prop according to the key\r\n        availableFilters: buildFilters(),\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues\r\n    }\r\n\r\n    const listConfig: IListOptionsProps = {\r\n        onSearchItem: (text, keys) => {\r\n            const filteredRows: IRow[] = []; \r\n            if(!text)\r\n                filteredRows.push(...allRows);\r\n            else {\r\n                filteredRows.push(...allRows?.filter(item => {\r\n                    const itemValues: string[] = [];\r\n                    for (const key of keys) {\r\n                        const value = Utils.getNestedObject(item, (key as string)?.split('.'));\r\n                        if(value !== undefined && value !== null)\r\n                            itemValues.push(value.toString());\r\n                    }\r\n                    const containsText = itemValues.some(v => v?.toLowerCase().includes(text?.toLowerCase()));\r\n                    return containsText;\r\n                }));\r\n            } \r\n            setActualRows(filteredRows);\r\n            setCurFilteredRows(filteredRows);\r\n        },\r\n        setRenderAs: () => {\r\n            if(renderAs === 'card')\r\n                return setRenderAs('list');\r\n            setRenderAs('card');\r\n        },\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        enableSearch: props?.headerOptions?.enableSearch ?? true,\r\n        enableFilter: props?.headerOptions?.enableFilter ?? true,\r\n        enableCardView: props?.headerOptions?.enableCardView ?? true,\r\n        ...props?.headerOptions\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            cols,\r\n            groups,\r\n            panelConfig,\r\n            isFilterPanelOpen,\r\n            listConfig,\r\n            shouldRenderCard\r\n        },\r\n        handlers: {\r\n            onRowClick,\r\n        },\r\n        JSX: {\r\n            CardsList\r\n        }\r\n    }\r\n}","import type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { INode, IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport class Utils {\r\n\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    public static processNodes(nodeItems: INode[] | undefined, groups: IGroup[], items: IRow[], level: number): void {\r\n        // end of recursion\r\n        if (!nodeItems || !nodeItems?.length)\r\n            return;\r\n        // processing current level of the tree\r\n        nodeItems.forEach(nodeItem => {\r\n            const newGroup: IGroup = {\r\n                key: nodeItem.key,\r\n                name: nodeItem.title,\r\n                startIndex: items?.length,\r\n                count: 0,\r\n                children: [],\r\n                level: level, // level is incremented on each call of the recursion\r\n                data: nodeItem // storing initial INode instance in the group's data\r\n            };\r\n\r\n            groups.push(newGroup);\r\n            if (nodeItem?.items && nodeItem?.items?.length) {\r\n\r\n                // adding items to the flat array\r\n                items.push(...nodeItem?.items);\r\n            }\r\n\r\n            // processing child nodes\r\n            Utils.processNodes(nodeItem.children, newGroup.children!, items, level + 1);\r\n            // current group count is a sum of group's leaf items and leaf items in all child nodes\r\n            newGroup.count = items?.length - newGroup.startIndex;\r\n        });\r\n    }\r\n\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n\r\n    public static getNestedObject<T, V extends any>(nestedObj: any, pathArr: T[]): V  {\r\n        return pathArr.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj);\r\n    }\r\n\r\n    public static getDeepKeys(obj: Record<any, any>): string[] {\r\n        let keys: string[] = [];\r\n        for(let key in obj) {\r\n            keys.push(key);\r\n            if(typeof obj[key] === \"object\") {\r\n                let subkeys = Utils.getDeepKeys(obj[key]);\r\n                keys = keys.concat(subkeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    \r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"@fluentui/react/lib/Styling\");","module.exports = require(\"react\");"],"sourceRoot":""}