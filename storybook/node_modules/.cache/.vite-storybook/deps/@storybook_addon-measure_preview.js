import {
  Y
} from "./chunk-UACHQL3Y.js";
import "./chunk-VN7B5P5J.js";
import "./chunk-M3XCZAQ7.js";
import "./chunk-EF2YLWYO.js";
import "./chunk-3QDDUDC7.js";
import {
  require_window
} from "./chunk-Z3ID2O7F.js";
import {
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/@storybook/addon-measure/dist/chunk-YPOITP6H.mjs
var o = "storybook/measure-addon";
var t = `${o}/tool`;
var r = "measureEnabled";
var s = { RESULT: `${o}/result`, REQUEST: `${o}/request`, CLEAR: `${o}/clear` };

// node_modules/@storybook/addon-measure/dist/preview.mjs
var import_global = __toESM(require_window(), 1);
var import_global2 = __toESM(require_window(), 1);
var import_global3 = __toESM(require_window(), 1);
function T() {
  let e = import_global2.default.document.documentElement, t2 = Math.max(e.scrollHeight, e.offsetHeight);
  return { width: Math.max(e.scrollWidth, e.offsetWidth), height: t2 };
}
function et() {
  let e = import_global2.default.document.createElement("canvas");
  e.id = "storybook-addon-measure";
  let t2 = e.getContext("2d"), { width: o2, height: i } = T();
  return v(e, t2, { width: o2, height: i }), e.style.position = "absolute", e.style.left = "0", e.style.top = "0", e.style.zIndex = "2147483647", e.style.pointerEvents = "none", import_global2.default.document.body.appendChild(e), { canvas: e, context: t2, width: o2, height: i };
}
function v(e, t2, { width: o2, height: i }) {
  e.style.width = `${o2}px`, e.style.height = `${i}px`;
  let n = import_global2.default.window.devicePixelRatio;
  e.width = Math.floor(o2 * n), e.height = Math.floor(i * n), t2.scale(n, n);
}
var m = {};
function A() {
  m.canvas || (m = et());
}
function P() {
  m.context && m.context.clearRect(0, 0, m.width, m.height);
}
function F(e) {
  P(), e(m.context);
}
function H() {
  v(m.canvas, m.context, { width: 0, height: 0 });
  let { width: e, height: t2 } = T();
  v(m.canvas, m.context, { width: e, height: t2 }), m.width = e, m.height = t2;
}
function W() {
  m.canvas && (P(), m.canvas.parentNode.removeChild(m.canvas), m = {});
}
var b = { margin: "#f6b26b", border: "#ffe599", padding: "#93c47d", content: "#6fa8dc", text: "#232020" };
var g = 6;
function B(e, { x: t2, y: o2, w: i, h: n, r: l }) {
  t2 = t2 - i / 2, o2 = o2 - n / 2, i < 2 * l && (l = i / 2), n < 2 * l && (l = n / 2), e.beginPath(), e.moveTo(t2 + l, o2), e.arcTo(t2 + i, o2, t2 + i, o2 + n, l), e.arcTo(t2 + i, o2 + n, t2, o2 + n, l), e.arcTo(t2, o2 + n, t2, o2, l), e.arcTo(t2, o2, t2 + i, o2, l), e.closePath();
}
function ot(e, { padding: t2, border: o2, width: i, height: n, top: l, left: s2 }) {
  let a = i - o2.left - o2.right - t2.left - t2.right, r2 = n - t2.top - t2.bottom - o2.top - o2.bottom, f = s2 + o2.left + t2.left, c = l + o2.top + t2.top;
  return e === "top" ? f += a / 2 : e === "right" ? (f += a, c += r2 / 2) : e === "bottom" ? (f += a / 2, c += r2) : e === "left" ? c += r2 / 2 : e === "center" && (f += a / 2, c += r2 / 2), { x: f, y: c };
}
function nt(e, t2, { margin: o2, border: i, padding: n }, l, s2) {
  let a = (h) => 0, r2 = 0, f = 0, c = s2 ? 1 : 0.5, u = s2 ? l * 2 : 0;
  return e === "padding" ? a = (h) => n[h] * c + u : e === "border" ? a = (h) => n[h] + i[h] * c + u : e === "margin" && (a = (h) => n[h] + i[h] + o2[h] * c + u), t2 === "top" ? f = -a("top") : t2 === "right" ? r2 = a("right") : t2 === "bottom" ? f = a("bottom") : t2 === "left" && (r2 = -a("left")), { offsetX: r2, offsetY: f };
}
function it(e, t2) {
  return Math.abs(e.x - t2.x) < Math.abs(e.w + t2.w) / 2 && Math.abs(e.y - t2.y) < Math.abs(e.h + t2.h) / 2;
}
function lt(e, t2, o2) {
  return e === "top" ? t2.y = o2.y - o2.h - g : e === "right" ? t2.x = o2.x + o2.w / 2 + g + t2.w / 2 : e === "bottom" ? t2.y = o2.y + o2.h + g : e === "left" && (t2.x = o2.x - o2.w / 2 - g - t2.w / 2), { x: t2.x, y: t2.y };
}
function Y2(e, t2, { x: o2, y: i, w: n, h: l }, s2) {
  return B(e, { x: o2, y: i, w: n, h: l, r: 3 }), e.fillStyle = `${b[t2]}dd`, e.fill(), e.strokeStyle = b[t2], e.stroke(), e.fillStyle = b.text, e.fillText(s2, o2, i), B(e, { x: o2, y: i, w: n, h: l, r: 3 }), e.fillStyle = `${b[t2]}dd`, e.fill(), e.strokeStyle = b[t2], e.stroke(), e.fillStyle = b.text, e.fillText(s2, o2, i), { x: o2, y: i, w: n, h: l };
}
function z(e, t2) {
  e.font = "600 12px monospace", e.textBaseline = "middle", e.textAlign = "center";
  let o2 = e.measureText(t2), i = o2.actualBoundingBoxAscent + o2.actualBoundingBoxDescent, n = o2.width + g * 2, l = i + g * 2;
  return { w: n, h: l };
}
function st(e, t2, { type: o2, position: i = "center", text: n }, l, s2 = false) {
  let { x: a, y: r2 } = ot(i, t2), { offsetX: f, offsetY: c } = nt(o2, i, t2, g + 1, s2);
  a += f, r2 += c;
  let { w: u, h } = z(e, n);
  if (l && it({ x: a, y: r2, w: u, h }, l)) {
    let C = lt(i, { x: a, y: r2, w: u, h }, l);
    a = C.x, r2 = C.y;
  }
  return Y2(e, o2, { x: a, y: r2, w: u, h }, n);
}
function at(e, { w: t2, h: o2 }) {
  let i = t2 * 0.5 + g, n = o2 * 0.5 + g;
  return { offsetX: (e.x === "left" ? -1 : 1) * i, offsetY: (e.y === "top" ? -1 : 1) * n };
}
function rt(e, t2, { type: o2, text: i }) {
  let { floatingAlignment: n, extremities: l } = t2, s2 = l[n.x], a = l[n.y], { w: r2, h: f } = z(e, i), { offsetX: c, offsetY: u } = at(n, { w: r2, h: f });
  return s2 += c, a += u, Y2(e, o2, { x: s2, y: a, w: r2, h: f }, i);
}
function S(e, t2, o2, i) {
  let n = [];
  o2.forEach((l, s2) => {
    let a = i && l.position === "center" ? rt(e, t2, l) : st(e, t2, l, n[s2 - 1], i);
    n[s2] = a;
  });
}
function X(e, t2, o2, i) {
  let n = o2.reduce((l, s2) => (Object.prototype.hasOwnProperty.call(l, s2.position) || (l[s2.position] = []), l[s2.position].push(s2), l), {});
  n.top && S(e, t2, n.top, i), n.right && S(e, t2, n.right, i), n.bottom && S(e, t2, n.bottom, i), n.left && S(e, t2, n.left, i), n.center && S(e, t2, n.center, i);
}
var E = { margin: "#f6b26ba8", border: "#ffe599a8", padding: "#93c47d8c", content: "#6fa8dca8" };
var $ = 30;
function d(e) {
  return parseInt(e.replace("px", ""), 10);
}
function w(e) {
  return Number.isInteger(e) ? e : e.toFixed(2);
}
function k(e) {
  return e.filter((t2) => t2.text !== 0 && t2.text !== "0");
}
function ft(e) {
  let t2 = { top: import_global.default.window.scrollY, bottom: import_global.default.window.scrollY + import_global.default.window.innerHeight, left: import_global.default.window.scrollX, right: import_global.default.window.scrollX + import_global.default.window.innerWidth }, o2 = { top: Math.abs(t2.top - e.top), bottom: Math.abs(t2.bottom - e.bottom), left: Math.abs(t2.left - e.left), right: Math.abs(t2.right - e.right) };
  return { x: o2.left > o2.right ? "left" : "right", y: o2.top > o2.bottom ? "top" : "bottom" };
}
function ct(e) {
  let t2 = import_global.default.getComputedStyle(e), { top: o2, left: i, right: n, bottom: l, width: s2, height: a } = e.getBoundingClientRect(), { marginTop: r2, marginBottom: f, marginLeft: c, marginRight: u, paddingTop: h, paddingBottom: C, paddingLeft: G, paddingRight: Z, borderBottomWidth: K, borderTopWidth: V, borderLeftWidth: J, borderRightWidth: Q } = t2;
  o2 = o2 + import_global.default.window.scrollY, i = i + import_global.default.window.scrollX, l = l + import_global.default.window.scrollY, n = n + import_global.default.window.scrollX;
  let y = { top: d(r2), bottom: d(f), left: d(c), right: d(u) }, U = { top: d(h), bottom: d(C), left: d(G), right: d(Z) }, tt = { top: d(V), bottom: d(K), left: d(J), right: d(Q) }, x = { top: o2 - y.top, bottom: l + y.bottom, left: i - y.left, right: n + y.right };
  return { margin: y, padding: U, border: tt, top: o2, left: i, bottom: l, right: n, width: s2, height: a, extremities: x, floatingAlignment: ft(x) };
}
function mt(e, { margin: t2, width: o2, height: i, top: n, left: l, bottom: s2, right: a }) {
  let r2 = i + t2.bottom + t2.top;
  e.fillStyle = E.margin, e.fillRect(l, n - t2.top, o2, t2.top), e.fillRect(a, n - t2.top, t2.right, r2), e.fillRect(l, s2, o2, t2.bottom), e.fillRect(l - t2.left, n - t2.top, t2.left, r2);
  let f = [{ type: "margin", text: w(t2.top), position: "top" }, { type: "margin", text: w(t2.right), position: "right" }, { type: "margin", text: w(t2.bottom), position: "bottom" }, { type: "margin", text: w(t2.left), position: "left" }];
  return k(f);
}
function ht(e, { padding: t2, border: o2, width: i, height: n, top: l, left: s2, bottom: a, right: r2 }) {
  let f = i - o2.left - o2.right, c = n - t2.top - t2.bottom - o2.top - o2.bottom;
  e.fillStyle = E.padding, e.fillRect(s2 + o2.left, l + o2.top, f, t2.top), e.fillRect(r2 - t2.right - o2.right, l + t2.top + o2.top, t2.right, c), e.fillRect(s2 + o2.left, a - t2.bottom - o2.bottom, f, t2.bottom), e.fillRect(s2 + o2.left, l + t2.top + o2.top, t2.left, c);
  let u = [{ type: "padding", text: t2.top, position: "top" }, { type: "padding", text: t2.right, position: "right" }, { type: "padding", text: t2.bottom, position: "bottom" }, { type: "padding", text: t2.left, position: "left" }];
  return k(u);
}
function ut(e, { border: t2, width: o2, height: i, top: n, left: l, bottom: s2, right: a }) {
  let r2 = i - t2.top - t2.bottom;
  e.fillStyle = E.border, e.fillRect(l, n, o2, t2.top), e.fillRect(l, s2 - t2.bottom, o2, t2.bottom), e.fillRect(l, n + t2.top, t2.left, r2), e.fillRect(a - t2.right, n + t2.top, t2.right, r2);
  let f = [{ type: "border", text: t2.top, position: "top" }, { type: "border", text: t2.right, position: "right" }, { type: "border", text: t2.bottom, position: "bottom" }, { type: "border", text: t2.left, position: "left" }];
  return k(f);
}
function dt(e, { padding: t2, border: o2, width: i, height: n, top: l, left: s2 }) {
  let a = i - o2.left - o2.right - t2.left - t2.right, r2 = n - t2.top - t2.bottom - o2.top - o2.bottom;
  return e.fillStyle = E.content, e.fillRect(s2 + o2.left + t2.left, l + o2.top + t2.top, a, r2), [{ type: "content", position: "center", text: `${w(a)} x ${w(r2)}` }];
}
function pt(e) {
  return (t2) => {
    if (e && t2) {
      let o2 = ct(e), i = mt(t2, o2), n = ht(t2, o2), l = ut(t2, o2), s2 = dt(t2, o2), a = o2.width <= $ * 3 || o2.height <= $;
      X(t2, o2, [...s2, ...n, ...l, ...i], a);
    }
  };
}
function N(e) {
  F(pt(e));
}
var O = (e, t2) => {
  let o2 = import_global3.default.document.elementFromPoint(e, t2), i = (l) => {
    if (l && l.shadowRoot) {
      let s2 = l.shadowRoot.elementFromPoint(e, t2);
      return l.isEqualNode(s2) ? l : s2.shadowRoot ? i(s2) : s2;
    }
    return l;
  };
  return i(o2) || o2;
};
var I;
var M = { x: 0, y: 0 };
function j(e, t2) {
  I = O(e, t2), N(I);
}
var _ = (e, t2) => {
  let { measureEnabled: o2 } = t2.globals;
  return Y(() => {
    let i = (n) => {
      window.requestAnimationFrame(() => {
        n.stopPropagation(), M.x = n.clientX, M.y = n.clientY;
      });
    };
    return document.addEventListener("mousemove", i), () => {
      document.removeEventListener("mousemove", i);
    };
  }, []), Y(() => {
    let i = (l) => {
      window.requestAnimationFrame(() => {
        l.stopPropagation(), j(l.clientX, l.clientY);
      });
    }, n = () => {
      window.requestAnimationFrame(() => {
        H();
      });
    };
    return o2 && (document.addEventListener("mouseover", i), A(), window.addEventListener("resize", n), j(M.x, M.y)), () => {
      window.removeEventListener("resize", n), W();
    };
  }, [o2]), e();
};
var Ft = [_];
var Ht = { [r]: false };
export {
  Ft as decorators,
  Ht as globals
};
//# sourceMappingURL=@storybook_addon-measure_preview.js.map
