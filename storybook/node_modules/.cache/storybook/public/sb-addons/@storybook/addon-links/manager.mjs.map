{
  "version": 3,
  "sources": ["global-externals:@storybook/addons", "../../../../../../@storybook/addon-links/manager.js", "../../../../../../@storybook/addon-links/dist/manager.js"],
  "sourcesContent": ["export default __STORYBOOKADDONS__;\nconst { AddonStore, HooksContext, addons, applyHooks, isSupportedType, makeDecorator, mockChannel, types, useArgs, useCallback, useChannel, useEffect, useGlobals, useMemo, useParameter, useReducer, useRef, useState, useStoryContext } = __STORYBOOKADDONS__;\nexport { AddonStore, HooksContext, addons, applyHooks, isSupportedType, makeDecorator, mockChannel, types, useArgs, useCallback, useChannel, useEffect, useGlobals, useMemo, useParameter, useReducer, useRef, useState, useStoryContext };", "import './dist/manager';\n", "\"use strict\";var t=require(\"@storybook/addons\");var e=\"storybook/links\";var o={NAVIGATE:`${e}/navigate`,REQUEST:`${e}/request`,RECEIVE:`${e}/receive`};t.addons.register(e,n=>{t.addons.getChannel().on(o.REQUEST,({kind:E,name:r})=>{let s=n.storyId(E,r);n.emit(o.RECEIVE,s)})});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAO,gBACC,YAAY,cAAc,QAAQ,YAAY,iBAAiB,eAAe,aAAa,OAAO,SAAS,aAAa,YAAY,WAAW,YAAY,SAAS,cAAc,YAAY,QAAQ,UAAU;AADxN;AAAA;AAAA;AAAA;AAAA,IAAO,iBAAQ;AACf,KAAM,EAAE,YAAY,cAAc,QAAQ,YAAY,iBAAiB,eAAe,aAAa,OAAO,SAAS,aAAa,YAAY,WAAW,YAAY,SAAS,cAAc,YAAY,QAAQ,UAAU,oBAAoB;AAAA;AAAA;;;ACD5O;AAAA;;;ACAA;AAAA;AAAa,IAAI,IAAE;AAA6B,IAAI,IAAE;AAAkB,IAAI,IAAE,EAAC,UAAS,GAAG,cAAa,SAAQ,GAAG,aAAY,SAAQ,GAAG,YAAW;AAAE,EAAE,OAAO,SAAS,GAAE,OAAG;AAAC,IAAE,OAAO,WAAW,EAAE,GAAG,EAAE,SAAQ,CAAC,EAAC,MAAK,GAAE,MAAK,EAAC,MAAI;AAAC,QAAI,IAAE,EAAE,QAAQ,GAAE,CAAC;AAAE,MAAE,KAAK,EAAE,SAAQ,CAAC;AAAA,EAAC,CAAC;AAAC,CAAC;",
  "names": []
}
