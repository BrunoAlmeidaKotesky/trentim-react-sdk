{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/styles.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"@fluentui/react/lib/Styling\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","createContext","enableFilter","enableSearch","customButtons","setIsFilterPanelOpen","undefined","isOpen","onApply","availableFilters","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","GridView","props","useGridController","state","handlers","actualRows","cols","groups","isFilterPanelOpen","panelConfig","listConfig","onRowClick","React","Contexts_1","Provider","ListOptions_1","style","position","zIndex","DetailsList_1","__assign","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","onClick","item","styles","cursor","items","columns","groupProps","isAllGroupsCollapsed","filter","gr","isCollapsed","_a","length","collapseAllVisibility","visible","onRenderHeader","group","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","_b","_c","hidden","PanelFilter_1","ListOptions","useContext","searchKey","onSearchItem","defaultButtonsOrder","defaultStyles","container","display","flexDirection","gap","justifyContent","margin","react_1","_","label","fontSize","order","iconProps","iconName","map","b","className","text","onChange","newValue","width","search","icon","color","PanelFilter","useMemo","Panel","lazy","then","default","DropDown","Dropdown","PrimaryButton","DefaultButton","TagPicker","FluentPanel","lastAddedTag","useRef","onAddOrRemoveToMap","rootItemKey","option","copyMap","selected","has","set","itemKey","data","useEffect","listContainsTagList","tag","tagList","some","compareTag","getDefaultDropdownSelectedKeys","selectedKeys","forEach","k","push","getDefaultSelectedTag","keyToFilter","selectedTags","keyKind","split","fallback","onRenderFooter","padding","marginRight","isFooterAtBottom","onDismiss","idx","options","renderAs","defaultSelectedKeys","multiSelect","enableMultiple","opt","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","tags","includes","current","onItemSelected","selectedItem","onResolveSuggestions","currentFilter","result","toLowerCase","indexOf","f","memo","mergeStyleSets","fileIconHeaderIcon","fileIconCell","textAlign","selectors","content","verticalAlign","height","visibility","fileIconImg","maxHeight","maxWidth","controlWrapper","flexWrap","exampleToggle","marginBottom","selectionDetails","useState","setCols","rows","allRows","setAllRows","setActualRows","currentFilteredRows","setCurFilteredRows","setGroups","setIsFilterPanel","autoFileDisplay","rowsAsNode","console","warn","convertedColumns","fieldName","onRender","_2","fieldValue","Utils_1","getNestedObject","dateConvertionOptions","shouldConvertToLocaleString","convertIsoToLocaleString","locales","formatOptions","styles_1","iconClassName","ariaLabel","isIconOnly","minWidth","src","file","iconUrl","alt","fileType","isRowHeader","isResizable","isSorted","isSortedDescending","sortAscendingAriaLabel","sortDescendingAriaLabel","isPadded","__read","generateTreeRows","nodes","groups_1","processNodes","buildFilters","filters","columnsToFilter","hiddenFilterKeys","index","col","renderFilterAs","keys","_d","_e","stringObject","Utils","toString","uniqueOptions","obj","pos","arr","mapObj","groupMaps","selectedItems","mapsByKeyKind","keyName","doesntHaveKey","sameMapsList","__spreadArray","thisKindMap_1","onApplyFilter","size","groupedMaps","onlyNecessaryKeysToVerify","orFilterAggregation","row","deepKey","getDeepKeys","filteredKeys","realKey","valueFromKey","thisKeyMap","v","currentFilteredIds","Id","mapKeyWithDots","valueFromMap","filteredKeys_1_1","filterPanelTitle","filteredRows","itemValue","headerOptions","date","Date","isNaN","getTime","isIsoDate","test","Intl","DateTimeFormat","format","nodeItems","level","nodeItem","newGroup","title","startIndex","count","apply","columnKey","slice","sort","nestedObj","pathArr","reduce","subkeys","concat","subkey","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IGridView\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps>({ enableFilter: true, enableSearch: true, customButtons: [], setIsFilterPanelOpen: undefined });\r\nexport const FilterPaneContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    availableFilters: [], \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined\r\n});","import * as React from 'react';\r\nimport { useGridController } from './useGridController';\r\nimport { FilterPaneContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport { ListOptions } from './ListOptions';\r\n\r\nexport const GridView = (props: IGridListProps<any>) => {   \r\n    const {state, handlers} = useGridController(props);\r\n    const {actualRows, cols, groups, isFilterPanelOpen, panelConfig, listConfig} = state;\r\n    const {onRowClick} = handlers;\r\n\r\n    return (\r\n        <FilterPaneContext.Provider value={panelConfig}>\r\n            <ListOptionsContext.Provider value={listConfig}>\r\n                <div>\r\n                    <ListOptions />\r\n                    <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0 }}>\r\n                        <DetailsList\r\n                            {...props?.detailsListProps}\r\n                            onRenderItemColumn={props?.onRenderItemColumn}\r\n                            onRenderRow={(p, defaultRender) => <div onClick={() => onRowClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onRowClick ? 'pointer' : 'default' } } })}</div>}\r\n                            items={actualRows} columns={cols} groups={groups}\r\n                            groupProps={{\r\n                                isAllGroupsCollapsed: props?.groups ? props?.groups.filter(gr => !gr?.isCollapsed)?.length === 0 : true,\r\n                                collapseAllVisibility: CollapseAllVisibility.visible,\r\n                                onRenderHeader: (props, defaultRender) => {\r\n                                    if (!props.group!.name)\r\n                                        return <></>;\r\n                                    return defaultRender(props);\r\n                                }\r\n                            }}\r\n                            layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                            onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                                <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                    <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                                </Sticky>)}\r\n                            checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                        />\r\n                    </div>\r\n                    {isFilterPanelOpen && <PanelFilter />}\r\n                </div>\r\n            </ListOptionsContext.Provider>\r\n        </FilterPaneContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {ListOptionsContext} from './Contexts';\r\n\r\nexport const ListOptions = () => {\r\n    const {customButtons, enableFilter, enableSearch, searchKey, onSearchItem, setIsFilterPanelOpen, defaultButtonsOrder} = React.useContext(ListOptionsContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        <DefaultButton \r\n            onClick={ _ => ''} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />\r\n        {customButtons?.length > 0 && customButtons?.map(b => \r\n            <PrimaryButton className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>)}\r\n        {(enableSearch && searchKey) && \r\n        <TextField \r\n            onChange={(_, newValue) => onSearchItem(newValue, searchKey)}\r\n            iconProps={{iconName: 'Search'}} styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => setIsFilterPanelOpen(true)} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense, useRef, useEffect } from 'react';\r\nimport { FilterPaneContext } from './Contexts';\r\nimport type { FilterOption } from '../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\n\r\nfunction PanelFilter() {\r\n    const { isOpen, onClose, availableFilters, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen } = useContext(FilterPaneContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string); \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if(onOpen) onOpen();}, []);\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0) \r\n          return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if(keyKind === keyToFilter) \r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    if (!isOpen)\r\n        return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    const options = filter?.options\r\n                    .filter(i => (i?.text !== null && i?.text !== undefined))\r\n                    .map<FilterOption>(({ key, text, data }) => ({\r\n                        key,\r\n                        text,\r\n                        data\r\n                    }));\r\n                    return (<Suspense fallback={'...'}>\r\n                        {filter.renderAs === 'Dropdown' ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={options}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        filter.renderAs === 'SearchBox' ? \r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <label>{filter?.name}</label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{doNotLayer: true}}\r\n                            onChange={(tags) => {\r\n                                const copyMap = new Map(actualFilteredValues);\r\n                                if(tags.length === 0) {\r\n                                    options.forEach(opt => {\r\n                                        if(copyMap.has(opt?.key as string))\r\n                                            copyMap.delete(opt?.key as string);\r\n                                    });\r\n                                } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n                                    copyMap.delete(lastAddedTag?.current?.key as string);\r\n                                    lastAddedTag.current = null; \r\n                                }\r\n                                setActualFilteredValues(copyMap);\r\n                            }}\r\n                            onItemSelected={(selectedItem) => {\r\n                                onAddOrRemoveToMap(filter?.key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n                                lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n                                return selectedItem;\r\n                            }}\r\n                            onResolveSuggestions={(currentFilter, tagList) => {\r\n                                const result = currentFilter\r\n                                ? options.filter(opt => \r\n                                    opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n                                    && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n                                return result;\r\n                            }} /></div> :\r\n                        null}\r\n                    </Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","export {GridView} from './GridView';","import { mergeStyleSets } from \"@fluentui/react/lib/Styling\";\r\n\r\nexport const classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px',\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden',\r\n            },\r\n        },\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px',\r\n    },\r\n    controlWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    exampleToggle: {\r\n        display: 'inline-block',\r\n        marginBottom: '10px',\r\n        marginRight: '30px',\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px',\r\n    },\r\n});","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport {classNames} from './styles';\r\nimport type { IGridListProps, IListOptionsProps, IRow } from '../models/interfaces/IGridView';\r\nimport { Utils } from '../helpers/Utils';\r\nimport type { FilterOption, IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroup } from '@fluentui/react/lib/DetailsList';\r\n\r\nexport function useGridController(props: IGridListProps<any>) {\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState(props?.rows ?? []);\r\n    const [currentFilteredRows, setCurFilteredRows] = useState<IRow[]>([]);\r\n    const [groups, setGroups] = useState(props?.groups);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(props?.autoFileDisplay) {\r\n            if((!props?.rowsAsNode) && props.renderAs !== 'tree') {\r\n                console.warn(\"You are using `autoFileDisplay`, but you are not using rowsAsNode. This will not work.\");\r\n            }\r\n        }\r\n    }, [props?.autoFileDisplay, props?.rowsAsNode, props?.renderAs]);\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        if (props?.columns?.length) {\r\n            const columns = props?.columns;\r\n            const convertedColumns = columns.map(c => {\r\n                if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue: string = Utils.getNestedObject(item, c?.fieldName?.split('.'));\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n\r\n                    return c;\r\n                } else if (c?.dateConvertionOptions?.shouldConvertToLocaleString) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConvertionOptions?.locales, c?.dateConvertionOptions?.formatOptions);\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                }\r\n                return c;\r\n            })\r\n            setCols(convertedColumns);\r\n        }\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        if (props.renderAs === 'tree' && props?.autoFileDisplay)\r\n            setCols([{\r\n                key: 'file.iconUrl',\r\n                name: 'ícone',\r\n                className: classNames.fileIconCell,\r\n                iconClassName: classNames.fileIconHeaderIcon,\r\n                ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n                iconName: 'Page',\r\n                isIconOnly: true,\r\n                fieldName: 'file.iconUrl',\r\n                minWidth: 16,\r\n                maxWidth: 16,\r\n                onRender: (item: IRow) => (<img src={item?.file?.iconUrl} className={classNames.fileIconImg} alt={`${item?.file?.fileType} file icon`} />),\r\n            },\r\n            {\r\n                key: 'file.name',\r\n                name: 'Nome',\r\n                fieldName: 'file.name',\r\n                minWidth: 210,\r\n                maxWidth: 350,\r\n                isRowHeader: true,\r\n                isResizable: true,\r\n                isSorted: true,\r\n                isSortedDescending: false,\r\n                sortAscendingAriaLabel: 'Sorted A to Z',\r\n                sortDescendingAriaLabel: 'Sorted Z to A',\r\n                onRender: (item: IRow) => (<span>{item?.file?.name}</span>),\r\n                data: 'string',\r\n                isPadded: true,\r\n            }, ...cols]);\r\n        else setCols(props?.columns);\r\n    }, [props?.renderAs, props?.autoFileDisplay]);\r\n\r\n    useEffect(() => {\r\n        setActualRows(props?.rows);\r\n        setAllRows(props?.rows)\r\n    }, [props?.rows?.length]);\r\n\r\n    useEffect(() => { generateTreeRows(); }, [props?.rowsAsNode, props?.renderAs]);\r\n\r\n    const generateTreeRows = () => {\r\n        if (props?.renderAs === 'tree' && props?.rowsAsNode) {\r\n            const nodes = props.rowsAsNode;\r\n            const items: IRow[] = [];\r\n            const groups: IGroup[] = [];\r\n            Utils.processNodes(nodes, groups, items, 0);\r\n            setActualRows(items);\r\n            setAllRows(items);\r\n            setGroups(groups);\r\n        }\r\n    }\r\n\r\n    const onRowClick = (item: IRow) => {\r\n        if (props?.onRowClick)\r\n            props?.onRowClick(item);\r\n    }\r\n    /**Generate the dropdowns of each availabe column and it's unique values */\r\n    const buildFilters = (): IAvailableFilters[] => {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = cols.filter(c => (!props?.hiddenFilterKeys?.includes(c?.key)));\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConvertionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConvertionOptions?.locales, col?.dateConvertionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    const groupMaps = (selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> => {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            const keyName = key.split('_')[1];\r\n            const doesntHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesntHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    /**Isso deve estar O log n */\r\n    const onApplyFilter: IPanelFilterProps['onApply'] = (selectedItems) => {\r\n        if(selectedItems.size === 0) {\r\n            generateTreeRows();\r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n            return;\r\n        }\r\n        const groupedMaps = groupMaps(selectedItems);\r\n        //const allGroupMapKeys = [...groupedMaps.keys()]?.flatMap(i => i?.split('.')) ?? [];\r\n        const onlyNecessaryKeysToVerify = cols.filter(c => groupedMaps.has(c?.key)).map(c => c?.key);\r\n        let orFilterAggregation: IRow[] = currentFilteredRows;\r\n        for (let idx = 0; idx < allRows?.length; idx++) {\r\n            const row = allRows[idx];\r\n            const deepKey = Utils.getDeepKeys(row);\r\n            const filteredKeys = onlyNecessaryKeysToVerify.filter(k => deepKey.includes(k));\r\n            for (const key of filteredKeys) {\r\n                let realKey: string = key;\r\n                const valueFromKey = Utils.getNestedObject(row, key?.split('.'));\r\n                if(valueFromKey === undefined || valueFromKey === null) continue;\r\n                if(groupedMaps.has(realKey)) {\r\n                    const thisKeyMap = groupedMaps.get(realKey);\r\n                    thisKeyMap.forEach((v) => {\r\n                        const currentFilteredIds = orFilterAggregation.map(r => r?.Id);\r\n                        const mapKeyWithDots = (v?.rootItemKey as string)?.split('.');\r\n                        const valueFromMap = Utils.getNestedObject(v?.data, mapKeyWithDots);\r\n                        if(!(currentFilteredIds.includes(row?.Id)) && valueFromKey === valueFromMap)\r\n                            orFilterAggregation.push(row);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (orFilterAggregation.length > 0) {\r\n            setActualRows(orFilterAggregation)\r\n            setCurFilteredRows(orFilterAggregation);\r\n        } else { \r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n        }\r\n        setIsFilterPanel(false);\r\n    }\r\n\r\n    const panelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: onApplyFilter,\r\n        onCancel: () => { setIsFilterPanel(false); },\r\n        onClose: () =>  { setIsFilterPanel(false); },\r\n        onOpen: () => { setCurFilteredRows([]); },\r\n        //The available filters are the ones that are defined in the `columns` prop, and the options are the rows that are defined in the `rows` prop according to the key\r\n        availableFilters: buildFilters(),\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues\r\n    }\r\n\r\n    const listConfig: IListOptionsProps = {\r\n        onSearchItem: (text, key) => {\r\n            const filteredRows = text ?\r\n                allRows?.filter(item => {\r\n                    const itemValue: string = Utils.getNestedObject(item, (key as string).split('.'));\r\n                    return itemValue?.toLowerCase()?.includes(text.toLowerCase());\r\n                }) : allRows;\r\n            setActualRows(filteredRows);\r\n            setCurFilteredRows(filteredRows);\r\n        },\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        ...props?.headerOptions\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            cols,\r\n            groups,\r\n            panelConfig,\r\n            isFilterPanelOpen,\r\n            listConfig\r\n        },\r\n        handlers: {\r\n            onRowClick,\r\n        }\r\n    }\r\n}","import type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { INode, IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport class Utils {\r\n\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    public static processNodes(nodeItems: INode[] | undefined, groups: IGroup[], items: IRow[], level: number): void {\r\n        // end of recursion\r\n        if (!nodeItems || !nodeItems?.length)\r\n            return;\r\n        // processing current level of the tree\r\n        nodeItems.forEach(nodeItem => {\r\n            const newGroup: IGroup = {\r\n                key: nodeItem.key,\r\n                name: nodeItem.title,\r\n                startIndex: items?.length,\r\n                count: 0,\r\n                children: [],\r\n                level: level, // level is incremented on each call of the recursion\r\n                data: nodeItem // storing initial INode instance in the group's data\r\n            };\r\n\r\n            groups.push(newGroup);\r\n            if (nodeItem?.items && nodeItem?.items?.length) {\r\n\r\n                // adding items to the flat array\r\n                items.push(...nodeItem?.items);\r\n            }\r\n\r\n            // processing child nodes\r\n            Utils.processNodes(nodeItem.children, newGroup.children!, items, level + 1);\r\n            // current group count is a sum of group's leaf items and leaf items in all child nodes\r\n            newGroup.count = items?.length - newGroup.startIndex;\r\n        });\r\n    }\r\n\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n\r\n    public static getNestedObject<T, V extends any>(nestedObj: any, pathArr: T[]): V  {\r\n        return pathArr.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj);\r\n    }\r\n\r\n    public static getDeepKeys(obj: Record<any, any>): string[] {\r\n        let keys: string[] = [];\r\n        for(let key in obj) {\r\n            keys.push(key);\r\n            if(typeof obj[key] === \"object\") {\r\n                let subkeys = Utils.getDeepKeys(obj[key]);\r\n                keys = keys.concat(subkeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    \r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"@fluentui/react/lib/Styling\");","module.exports = require(\"react\");"],"sourceRoot":""}