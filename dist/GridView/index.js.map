{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/Card/Card.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/DateSlider.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GroupPanel.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PeoplePicker.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/usePanelFilterController.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/enums.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/ChoiceGroup\"","webpack:///external \"@fluentui/react/lib/DatePicker\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Slider\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","InfoCard","React","memo","props","styles","card","backgroundColor","border","margin","borderRadius","position","display","flexDirection","width","height","userSelect","enableUserSelect","color","overflow","top","borderBottom","gridTemplateColumns","columnGap","padding","fontFamily","col","rightCol","alignItems","leftCol","cardTitle","WebkitLineClamp","WebkitBoxOrient","fontSize","lineHeight","projectCode","opacity","bottom","justifyContent","circleWrap","circle","background","status","marginLeft","linkButton","minWidth","onClick","e","onCardClick","style","cardSubtitle","cardRightColInformation","_a","containerStyle","_b","_c","values","_d","length","_e","map","plantName","title","circleIndicator","_f","_g","_h","Button_1","onClickDownButton","iconProps","iconName","createContext","enableFilter","enableSearch","enableCardView","customButtons","setIsFilterPanelOpen","undefined","searchBoxPlaceholder","setRenderAs","defaultButtonsOrder","group","search","filter","setIsGroupPanelOpen","isOpen","onApply","availableFilters","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","options","selectedGroupKeys","setSelectedGroupKeys","DateSliderComponent","useState","displayDatePicker","setDisplayDatePicker","fromDate","setFromDate","Date","toDate","setToDate","formatSliderValue","num","onSliderChange","_","val","onRecordDateRange","enums_1","NONE","lastWeek","setDate","getDate","WEEK","lastMonth","setMonth","getMonth","MONTH","lastYear","setFullYear","getFullYear","YEAR","useEffect","CUSTOM","defaultValues","slider","dateStrings","useMemo","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","showWeekNumbers","weekNumberFormatString","firstWeekOfYear","dateFormat","showGoToToday","Slider_1","min","max","step","defaultValue","container","valueFormat","onChanged","label","DatePicker_1","maxDate","strings","from","formatDate","date","toLocaleDateString","onSelectDate","getTime","minDate","to","GridView","useGridController","state","handlers","JSX","CardsList","actualRows","cols","isFilterPanelOpen","filterPanelConfig","groupPanelConfig","listConfig","shouldRenderCard","isGroupPanelOpen","onRowClick","Contexts_1","Provider","ListOptions_1","zIndex","onRenderCustomComponent","DetailsList_1","__assign","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","item","cursor","items","columns","groupProps","isAllGroupsCollapsed","collapseAllVisibility","visible","onRenderHeader","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","hidden","react_1","fallback","id","cardProps","gap","PanelFilter_1","GroupPanel_1","GroupPanel","useContext","Panel","lazy","then","default","PrimaryButton","DefaultButton","RadioButton","ChoiceGroup","FluentPanel","isFooterAtBottom","onDismiss","onRenderFooter","marginRight","onChange","opt","copyMap","has","set","text","ListOptions","searchKey","onSearchItem","defaultStyles","order","b","className","newValue","placeholder","icon","PanelFilter","usePanelFilterController","Dropdown","TagPicker","getDefaultDropdownSelectedKeys","onAddOrRemoveToMap","getDefaultSelectedTag","getDefaultSelectedDate","Suspense","idx","mapOptions","renderAs","defaultSelectedKeys","multiSelect","enableMultiple","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","onChangeTags","onItemSelected","onTagSelected","onResolveSuggestions","onResolveTagSuggestion","DateSlider_1","onRecordDateChange","PeoplePicker_1","people","getDefaultSelectedPeople","onChangePeople","suggestionProps","mostRecentlyUsedHeaderText","showRemoveButtons","suggestionsAvailableAlertText","suggestionsContainerAriaLabel","PeoplePicker","peopleList","setPeopleList","picker","useRef","onFilterChanged","filterText","currentPersonas","limitResults","filteredPersonas","filterPersonasByText","removeDuplicates","slice","doesTextStartWith","onRemoveSuggestion","indexPeopleList","indexOf","newPeople","concat","Pickers_1","onValidateInput","validateInput","componentRef","resolveDelay","toLowerCase","personas","possibleDupes","persona","listContainsPersona","input","valid","warning","invalid","setShouldRenderCard","setCols","rows","allRows","setAllRows","setActualRows","currentFilteredRows","setCurFilteredRows","setIsFilterPanel","setIsGroupPanel","console","error","Card","row","hasCustomCard","cProps","Utils_1","getNestedObject","cardTitleKey","split","cardSubtitleKey","rightColumn","Id","keys","marginBottom","fontWeight","convertedColumns","includes","fieldName","onRender","_2","fieldValue","dateConversionOptions","shouldConvertToLocaleString","convertIsoToLocaleString","locales","formatOptions","filterFromColumns","hiddenKeys","buildFilters","filters","columnsToFilter","hiddenFilterKeys","index","renderAs_1","renderFilterAs","data","stringObject","Utils","toString","uniqueOptions","obj","pos","arr","mapObj","push","groupMaps","selectedItems","mapsByKeyKind","forEach","keyName","doesNotHaveKey","sameMapsList","__spreadArray","thisKindMap_1","onApplyFilter","size","orFilterAggregation","groupedMaps","onlyNecessaryKeysToVerify","currentIdx","entries","mapKey","log","deepKey","getDeepKeys","filteredKeys","k","realKey","valueFromKey","thisKeyMap","v","currentFilteredIds","mapKeyWithDots","rootItemKey","valueFromMap","filteredKeys_1_1","filterPanelTitle","groupPanelTitle","hiddenGroupKeys","groupMap","warn","filteredRows","apply","itemValues","keys_1_1","containsText","some","headerOptions","_j","_k","_l","_m","DropDown","lastAddedTag","option","selected","itemKey","isDateComponent","listContainsTagList","tag","tagList","compareTag","selectedKeys","keyToFilter","selectedTags","keyKind","mapWithSameKey","find","mapWithSameKeyValue","type","tags","current","selectedItem","currentFilter","result","f","toISOString","isNaN","isIsoDate","test","Intl","DateTimeFormat","format","columnKey","isSortedDescending","sort","nestedObj","pathArr","reduce","subKeys","subkey","RangeType","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { IInfoCardProps } from '../models/interfaces/IInfoCardProps';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst InfoCard = React.memo((props: IInfoCardProps) => {\r\n    const styles: Record<string, CSSProperties> = {\r\n        card: {\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            border: \"1px solid #ababab\",\r\n            margin: \"0 0 16px\",\r\n            borderRadius: \"4px\",\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: props?.width || \"100%\",\r\n            height: props?.height || \"150px\",\r\n            userSelect: props?.enableUserSelect ? \"unset\" : \"none\",\r\n            color: \"#333\",\r\n            overflow: \"hidden\"\r\n        },\r\n        top: {\r\n            borderBottom: \"1px solid rgb(237, 235, 233)\",\r\n            overflow: \"hidden\",\r\n            height: \"100%\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 120px\",\r\n            columnGap: \"8px\",\r\n            padding: \"16px\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n        },\r\n        col: { display: \"flex\", flexDirection: \"column\" },\r\n        rightCol: { display: 'flex', flexDirection: 'column', alignItems: \"flex-end\" },\r\n        leftCol: { display: 'flex', flexDirection: 'column' },\r\n        cardTitle: {\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            WebkitBoxOrient: \"vertical\",\r\n            overflow: \"hidden\",\r\n            fontSize: \"18px\",\r\n            lineHeight: 1.4\r\n        },\r\n        projectCode: {\r\n            fontSize: \"16px\",\r\n            opacity: 0.8\r\n        },\r\n        bottom: {\r\n            display: \"flex\",\r\n            padding: \"6px 16px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"rgb(250, 249, 248)\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n\r\n        },\r\n        circleWrap: { display: \"inline-flex\", alignItems: \"center\" },\r\n        circle: {\r\n            width: \"16px\",\r\n            height: \"16px\",\r\n            background: \"#06ad51\",\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #06ad51\",\r\n            display: \"inline-block\"\r\n        },\r\n        status: { display: \"inline-block\", marginLeft: \"8px\" },\r\n        linkButton: { width: \"32px\", height: \"32px\", minWidth: \"32px\" }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={(e) => {\r\n            if (props.onCardClick)\r\n                props?.onCardClick(e);\r\n        }} style={styles.card}>\r\n            <div data-class-name=\"card-top\" style={styles.top}>\r\n                <div data-class-name=\"card-top-left\" style={styles.leftCol}>\r\n                    <div style={styles.cardTitle}>\r\n                        <span>{props?.cardTitle}</span>\r\n                    </div>\r\n                    <div style={styles.projectCode}>\r\n                        <span>{props?.cardSubtitle}</span>\r\n                    </div>\r\n                </div>\r\n                <div data-class-name=\"card-top-right\" style={props?.cardRightColInformation?.containerStyle ?? styles.rightCol}>\r\n                    {props?.cardRightColInformation?.values?.length > 0 && props?.cardRightColInformation?.values.map(value => (\r\n                        <div style={value?.style ?? styles.plantName}>\r\n                            <span>{value?.title}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div data-class-name=\"card-bottom\" style={styles.bottom}>\r\n                <div data-class-name=\"card-circle-wrapper\" style={styles.circleWrap}>\r\n                    <div style={{ ...styles.circle, background: props?.circleIndicator?.color, border: `1px solid ${props?.circleIndicator?.color}` }}></div>\r\n                    <span style={styles.status}>{props?.circleIndicator?.title}</span>\r\n                </div>\r\n                <div data-class-name=\"card-button-container\">\r\n                    <PrimaryButton onClick={props?.onClickDownButton} style={styles.linkButton} iconProps={{ iconName: props?.iconName || 'Page' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default InfoCard;","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IListOptions\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../models/interfaces/IGroupPanel';\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps>({ \r\n    enableFilter: true, \r\n    enableSearch: true,\r\n    enableCardView: true,\r\n    customButtons: [], \r\n    setIsFilterPanelOpen: undefined, \r\n    searchBoxPlaceholder: '',\r\n    setRenderAs: undefined, \r\n    defaultButtonsOrder: { group: 0, search: 1, filter: 2, card: 3 },\r\n    setIsGroupPanelOpen: undefined\r\n});\r\n\r\nexport const FilterPanelContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    availableFilters: [], \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined\r\n});\r\n\r\nexport const GroupPanelContext = createContext<IGroupPanel>({\r\n    isOpen: false, \r\n    onApply: undefined,\r\n    onCancel: undefined,\r\n    onClose: undefined,\r\n    onOpen: undefined,\r\n    panelTitle: '',\r\n    options: [],\r\n    selectedGroupKeys: new Map(),\r\n    setSelectedGroupKeys: undefined\r\n});","import * as React from 'react';\r\nimport { RangeType } from '../helpers/enums';\r\nimport { Slider, ISliderProps } from '@fluentui/react/lib/Slider';\r\nimport { DatePicker } from '@fluentui/react/lib/DatePicker';\r\nimport type { IDateSliderProps } from '../models/interfaces/IDateSlider';\r\n\r\nfunction DateSliderComponent(props: IDateSliderProps) {\r\n    const [displayDatePicker, setDisplayDatePicker] = React.useState(false);\r\n    const [fromDate, setFromDate] = React.useState<Date>(null);\r\n    const [toDate, setToDate] = React.useState(new Date());\r\n    const formatSliderValue = (num: number): string => num === 0 ? 'Nenhum' : num === 1 ? 'Última Semana' : num === 2 ? 'Último Mês' : num === 3 ? 'Últimos Ano' : '';\r\n    const onSliderChange: ISliderProps['onChanged'] = (_, val) => {\r\n        if(val === 4)\r\n            setDisplayDatePicker(true);\r\n        else {\r\n            setDisplayDatePicker(false);\r\n            setFromDate(null);\r\n            setToDate(new Date());\r\n        }\r\n        if(val === 0) {\r\n            props.onRecordDateRange(null, null, RangeType.NONE);\r\n        }\r\n        else if(val === 1) {\r\n            const lastWeek = new Date();\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            props.onRecordDateRange(lastWeek, new Date(), RangeType.WEEK);\r\n        }\r\n        else if(val === 2) {\r\n            const lastMonth = new Date();\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            props.onRecordDateRange(lastMonth, new Date(), RangeType.MONTH);\r\n        }\r\n        else if(val === 3) {\r\n            const lastYear = new Date();\r\n            lastYear.setFullYear(lastYear.getFullYear() - 1);\r\n            props.onRecordDateRange(lastYear, new Date(), RangeType.YEAR);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(fromDate && toDate)\r\n            props.onRecordDateRange(fromDate, toDate, RangeType.CUSTOM);\r\n    }, [fromDate, toDate]);\r\n\r\n    React.useEffect(() => {\r\n        if(props?.defaultValues?.slider === 4 && !displayDatePicker)\r\n            setDisplayDatePicker(true);\r\n    }, [props?.defaultValues?.slider]);\r\n\r\n    const dateStrings = React.useMemo(() => ({\r\n        months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n        shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n        days: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\r\n        shortDays: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n        goToToday: 'Hoje',\r\n        prevMonthAriaLabel: 'Mês anterior',\r\n        nextMonthAriaLabel: 'Próximo mês',\r\n        prevYearAriaLabel: 'Ano anterior',\r\n        nextYearAriaLabel: 'Próximo ano',\r\n        closeButtonAriaLabel: 'Fechar',\r\n        isRequiredErrorMessage: 'Este campo é obrigatório.',\r\n        invalidInputErrorMessage: 'Valor de entrada inválido.',\r\n        isOutOfBoundsErrorMessage: 'Valor de entrada fora dos limites.',\r\n        showWeekNumbers: false,\r\n        weekNumberFormatString: '',\r\n        firstWeekOfYear: 0,\r\n        dateFormat: 'd',\r\n        showGoToToday: true,\r\n    }), []);\r\n\r\n    return (<>\r\n    <Slider\r\n        min={0} max={4} step={1}\r\n        defaultValue={props?.defaultValues?.slider ?? 0} styles={{container: { display: 'grid' }}}\r\n        valueFormat={formatSliderValue}\r\n        onChanged={onSliderChange}\r\n        label={props?.label}/>\r\n    {displayDatePicker && \r\n        <div>\r\n            {/**Translate Datepicker all props to portuguese*/}\r\n            <DatePicker\r\n                maxDate={toDate}\r\n                strings={dateStrings}\r\n                value={props?.defaultValues?.from ?? fromDate}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    if(d && !fromDate || !fromDate && d)\r\n                        setFromDate(d);\r\n                    else if(d && fromDate && fromDate.getTime() > d.getTime())\r\n                        setFromDate(d);\r\n                    else if(d && fromDate && fromDate.getTime() < d.getTime() && !toDate)\r\n                        setToDate(d);\r\n                }}\r\n                label=\"De\"/>\r\n            <DatePicker\r\n                minDate={fromDate}\r\n                strings={dateStrings}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    if(d && !toDate || !toDate && d)\r\n                        setToDate(d);\r\n                    else if(d && toDate && toDate.getTime() < d.getTime())\r\n                        setToDate(d);\r\n                    else if(d && toDate && toDate.getTime() > d.getTime())\r\n                        setFromDate(d);\r\n                }}\r\n                value={props?.defaultValues?.to ?? toDate}\r\n                label=\"Até\"/>\r\n        </div>\r\n    }\r\n    </>);\r\n}\r\n\r\nexport const DateSlider = React.memo(DateSliderComponent);","import * as React from 'react';\r\nimport { useGridController } from './hooks/useGridController';\r\nimport { FilterPanelContext, GroupPanelContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport GroupPanel from './GroupPanel';\r\nimport { ListOptions } from './ListOptions';\r\nimport { Suspense } from 'react';\r\n\r\n/** Mudar nome do componente talvez? Ele é mais do que só um Grid. */\r\nexport function GridView<T = any>(props: IGridListProps<T>) {\r\n    const {state, handlers, JSX} = useGridController(props);\r\n    const {CardsList} = JSX;\r\n    const {actualRows, cols, isFilterPanelOpen, filterPanelConfig, groupPanelConfig, listConfig, shouldRenderCard, isGroupPanelOpen} = state;\r\n    const {onRowClick} = handlers;\r\n\r\n    return (\r\n        <GroupPanelContext.Provider value={groupPanelConfig}>\r\n        <FilterPanelContext.Provider value={filterPanelConfig}>\r\n        <ListOptionsContext.Provider value={listConfig}>\r\n            <div>\r\n                <ListOptions />\r\n                <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0 }}>\r\n                    {\r\n                    !!props?.onRenderCustomComponent ? actualRows?.map(i => props?.onRenderCustomComponent(i)) :\r\n                    !shouldRenderCard ? \r\n                    <DetailsList\r\n                        {...props?.detailsListProps}\r\n                        onRenderItemColumn={props?.onRenderItemColumn}\r\n                        onRenderRow={(p, defaultRender) => <div onClick={() => onRowClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onRowClick ? 'pointer' : 'default' } } })}</div>}\r\n                        items={actualRows} columns={cols}\r\n                        groupProps={{\r\n                            isAllGroupsCollapsed: /*props?.groups ? props?.groups.filter(gr => !gr?.isCollapsed)?.length === 0 :*/ true,\r\n                            collapseAllVisibility: CollapseAllVisibility.visible,\r\n                            onRenderHeader: (props, defaultRender) => {\r\n                                if (!props.group!.name)\r\n                                    return <></>;\r\n                                return defaultRender(props);\r\n                            }\r\n                        }}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                        onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                            <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                            </Sticky>)}\r\n                        checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                    /> :\r\n                    <Suspense fallback={'...'}>\r\n                        <div id=\"gridView-cardContainer\" style={props?.cardProps?.containerStyle ?? {display: 'grid', gap: 12, gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))'}}>\r\n                        {CardsList}\r\n                        </div>\r\n                    </Suspense>\r\n                    }\r\n                </div>\r\n                {isFilterPanelOpen && <PanelFilter />}\r\n                {isGroupPanelOpen && <GroupPanel />}\r\n            </div>\r\n        </ListOptionsContext.Provider>\r\n        </FilterPanelContext.Provider>\r\n        </GroupPanelContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense } from 'react';\r\nimport { GroupPanelContext } from './Contexts';\r\n\r\nfunction GroupPanel() {\r\n    const {isOpen, panelTitle, onApply, onCancel, onClose, options, selectedGroupKeys, setSelectedGroupKeys} = useContext(GroupPanelContext);\r\n    const [FluentPanel, PrimaryButton, DefaultButton, RadioButton] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const RadioButton = lazy(() => import('@fluentui/react/lib/ChoiceGroup').then(({ ChoiceGroup }) => ({ default: ChoiceGroup })));\r\n        return [Panel, PrimaryButton, DefaultButton, RadioButton];\r\n    }, []);\r\n\r\n    if(!isOpen) return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}\r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(selectedGroupKeys)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div>)}>\r\n                <h2>{panelTitle}</h2>\r\n                <Suspense fallback={'...'}>\r\n                    <RadioButton\r\n                        onChange={(_, opt) => {\r\n                            const copyMap = new Map(selectedGroupKeys);\r\n                            if(!copyMap.has(opt?.key))\r\n                                copyMap.set(opt.key, opt.text);\r\n                            else\r\n                                copyMap.delete(opt.key);\r\n                            setSelectedGroupKeys(copyMap);\r\n                        }}\r\n                        options={options}/>\r\n                </Suspense>\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(GroupPanel);","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {GroupPanelContext, ListOptionsContext} from './Contexts';\r\n\r\nexport const ListOptions = () => {\r\n    const {customButtons, enableFilter, enableSearch, searchKey, onSearchItem, setIsFilterPanelOpen, defaultButtonsOrder, searchBoxPlaceholder, enableCardView, setRenderAs} = React.useContext(ListOptionsContext);\r\n    const {onOpen} = React.useContext(GroupPanelContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        <DefaultButton \r\n            onClick={ _ => onOpen()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />\r\n        {enableCardView && \r\n        <DefaultButton \r\n            onClick={_ => setRenderAs()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.card}}} iconProps={{iconName: 'GridViewMedium'}} />}\r\n        {customButtons?.length > 0 && customButtons?.map(b => \r\n            <PrimaryButton key={b?.text} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>)}\r\n        {(enableSearch && searchKey) && \r\n        <TextField \r\n            onChange={(_, newValue) => onSearchItem(newValue, searchKey)} placeholder={searchBoxPlaceholder}\r\n            iconProps={{iconName: 'Search'}} styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => setIsFilterPanelOpen(true)} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport {DateSlider} from './DateSlider';\r\nimport {PeoplePicker} from './PeoplePicker';\r\nimport {usePanelFilterController} from './hooks/usePanelFilterController';\r\n\r\nfunction PanelFilter() {\r\n    const {JSX, state, handlers} = usePanelFilterController();\r\n    const {actualFilteredValues, panelTitle, availableFilters, isOpen} = state;\r\n    const {FluentPanel, PrimaryButton, Dropdown, TagPicker, DefaultButton} = JSX;\r\n    const {onClose, onCancel, getDefaultDropdownSelectedKeys, onAddOrRemoveToMap, getDefaultSelectedTag, getDefaultSelectedDate} = handlers;\r\n\r\n    if (!isOpen) return null;\r\n    return (\r\n        <React.Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => handlers.onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </React.Suspense>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </React.Suspense>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    const options = handlers.mapOptions(filter?.options);\r\n                    return (<React.Suspense fallback={'...'}>\r\n                        {(filter.renderAs === 'Dropdown') ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={options}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        (filter.renderAs === 'SearchBox') ?\r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <label>{filter?.name}</label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{doNotLayer: true}}\r\n                            onChange={handlers.onChangeTags(options)}\r\n                            onItemSelected={handlers.onTagSelected(filter?.key)}\r\n                            onResolveSuggestions={handlers.onResolveTagSuggestion(options)} /></div> :\r\n                        (filter.renderAs === 'DateSlider') ?\r\n                        <DateSlider\r\n                            defaultValues={getDefaultSelectedDate(filter?.key)}\r\n                            onRecordDateRange={handlers.onRecordDateChange(filter?.key)}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            label={filter?.name}/> :\r\n                        (filter?.renderAs === 'PeoplePicker') ?\r\n                        <PeoplePicker \r\n                            label={filter?.name} key={filter?.key + \"-\" + idx}\r\n                            people={options}\r\n                            defaultSelectedItems={handlers.getDefaultSelectedPeople(filter?.key)}\r\n                            onChangePeople={handlers.onChangePeople(filter?.key)} /> : null\r\n                        }\r\n                    </React.Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </React.Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","import * as React from 'react';\r\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\r\nimport { CompactPeoplePicker, IBasePickerSuggestionsProps, ValidationState } from '@fluentui/react/lib/Pickers';\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n    suggestionsHeaderText: 'Pessoas sugeridas',\r\n    mostRecentlyUsedHeaderText: 'Pessoas mais recentes',\r\n    noResultsFoundText: 'Nenhum resultado encontrado',\r\n    loadingText: 'Carregando',\r\n    showRemoveButtons: true,\r\n    suggestionsAvailableAlertText: 'Sugestões disponíveis',\r\n    suggestionsContainerAriaLabel: 'Pessoas sugeridas',\r\n};\r\n\r\ninterface IPeoplePickerProps {\r\n    label: string;\r\n    people: IPersonaProps[];\r\n    onChangePeople: (items: IPersonaProps[]) => void;\r\n    defaultSelectedItems?: IPersonaProps[];\r\n}\r\n\r\nexport const PeoplePicker = (props: IPeoplePickerProps) => {\r\n    const [peopleList, setPeopleList] = React.useState<IPersonaProps[]>(props.people);\r\n    const picker = React.useRef(null);\r\n\r\n    const onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] | Promise<IPersonaProps[]> => {\r\n        if (!filterText)\r\n            return [];\r\n        let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\r\n        filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\r\n        filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\r\n        return filteredPersonas;\r\n    };\r\n\r\n    const filterPersonasByText = (filterText: string)=> peopleList.filter(item => doesTextStartWith(item.text as string, filterText));\r\n    \r\n    const onRemoveSuggestion = (item: IPersonaProps): void => {\r\n        const indexPeopleList: number = peopleList.indexOf(item);\r\n        if (indexPeopleList >= 0) {\r\n            const newPeople: IPersonaProps[] = peopleList\r\n                .slice(0, indexPeopleList)\r\n                .concat(peopleList.slice(indexPeopleList + 1));\r\n            setPeopleList(newPeople);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <CompactPeoplePicker\r\n                onResolveSuggestions={onFilterChanged}\r\n                getTextFromItem={getTextFromItem}\r\n                pickerSuggestionsProps={suggestionProps}\r\n                defaultSelectedItems={props?.defaultSelectedItems}\r\n                onChange={props?.onChangePeople}\r\n                className={'ms-PeoplePicker'}\r\n                onRemoveSuggestion={onRemoveSuggestion}\r\n                onValidateInput={validateInput}\r\n                componentRef={picker}\r\n                resolveDelay={300}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst doesTextStartWith = (text: string, filter: string) => text?.toLowerCase()?.indexOf(filter?.toLowerCase()) === 0;\r\n\r\nconst removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]) => personas.filter(persona => !listContainsPersona(persona, possibleDupes));\r\n\r\nfunction listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) \r\n        return false;\r\n    return personas.filter(item => item?.text === persona?.text)?.length > 0;\r\n}\r\n\r\nconst getTextFromItem = (persona: IPersonaProps) => persona?.text;\r\n\r\nfunction validateInput(input: string): ValidationState {\r\n    if (input.indexOf('@') !== -1) \r\n        return ValidationState.valid;\r\n    else if (input.length > 1) \r\n        return ValidationState.warning;\r\n    return ValidationState.invalid;\r\n}","import * as React from 'react';\r\nimport { useState, useEffect, useMemo, lazy } from 'react';\r\nimport type { IGridListProps, IRow } from '../../models/interfaces/IGridView';\r\nimport type { IListOptionsProps } from '../../models/interfaces/IListOptions';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport type { FilterOption, IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../../models/interfaces/IPanelFilter';\r\nimport { IGroupPanel } from '../../models/interfaces/IGroupPanel';\r\n\r\nexport function useGridController(props: IGridListProps<any>) {\r\n    const [renderAs, setRenderAs] = useState<typeof props.renderAs>(props?.renderAs || 'list');\r\n    const [shouldRenderCard, setShouldRenderCard] = useState(props?.renderAs === 'card');\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [selectedGroupKeys, setSelectedGroupKeys] = useState<Map<string, string>>(new Map());\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState(props?.rows ?? []);\r\n    const [currentFilteredRows, setCurFilteredRows] = useState<IRow[]>([]);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n    const [isGroupPanelOpen, setIsGroupPanel] = useState(false);\r\n\r\n    useEffect(() => { setRenderAs(props?.renderAs); }, [props?.renderAs]);\r\n\r\n    useEffect(() => {\r\n        if(renderAs === 'card') {\r\n            setShouldRenderCard(true);\r\n            if(!props?.cardProps)\r\n                console.error(\"[GridView] - You are using `renderAs: card`, but you are not passing cardProps. This will not work.\");\r\n        }\r\n        else setShouldRenderCard(false);\r\n    }, [renderAs]);\r\n\r\n    const Card = useMemo(() => {\r\n        if(!shouldRenderCard) return null;\r\n        return lazy(() => import('../../Card/Card').then((module) => ({ default: module?.default })));\r\n    }, [shouldRenderCard]);\r\n\r\n    const CardsList = useMemo(() => {\r\n        if(!Card)\r\n            return [];\r\n        \r\n        return actualRows?.map(row => {\r\n            const hasCustomCard = !!props?.onRenderCustomComponent;\r\n            if(hasCustomCard)\r\n                return props?.onRenderCustomComponent(row);\r\n            const cProps = props?.cardProps;\r\n            const cardTitle: string = Utils.getNestedObject(row, cProps?.cardTitleKey?.split('.')) || '';\r\n            const cardSubtitle: string = Utils.getNestedObject(row, cProps?.cardSubtitleKey?.split('.')) || '';\r\n            const rightCol = cProps?.rightColumn;\r\n            return (\r\n            <Card\r\n                key={row?.Id}\r\n                cardRightColInformation={rightCol?.keys && {\r\n                    ...rightCol,\r\n                    values: rightCol?.keys?.map(opt => ({\r\n                        title: Utils.getNestedObject(row, opt?.title?.split('.') as any),\r\n                        style: opt?.style ??  { fontSize: 16, marginBottom: 4, fontWeight: 600 }\r\n                    }))\r\n                }}\r\n                onCardClick={e => {\r\n                    onRowClick(row);\r\n                    if(cProps?.onCardClick)\r\n                        cProps?.onCardClick(e);\r\n                }}\r\n                cardTitle={cardTitle}\r\n                cardSubtitle={cardSubtitle}\r\n                {...props?.cardProps} />\r\n            );\r\n        })\r\n    }, [Card, props?.cardProps, actualRows, renderAs, props?.onRenderCustomComponent]);\r\n\r\n    useEffect(() => {\r\n        if (props?.columns?.length) {\r\n            const columns = props?.columns;\r\n            const convertedColumns = columns.map(c => {\r\n                if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue: string = Utils.getNestedObject(item, c?.fieldName?.split('.'));\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n\r\n                    return c;\r\n                } else if (c?.dateConversionOptions?.shouldConvertToLocaleString) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConversionOptions?.locales, c?.dateConversionOptions?.formatOptions);\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                }\r\n                return c;\r\n            })\r\n            setCols(convertedColumns);\r\n        }\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        setActualRows(props?.rows);\r\n        setAllRows(props?.rows)\r\n    }, [props?.rows?.length]);\r\n\r\n    const onRowClick = (item: IRow) => {\r\n        if (props?.onRowClick)\r\n            props?.onRowClick(item);\r\n    }\r\n\r\n    const filterFromColumns = (hiddenKeys: string[] | Array<keyof IRow>) => cols.filter(c => (!hiddenKeys?.includes(c?.key)));\r\n\r\n    /**Generate the dropdowns of each available column and it's unique values */\r\n    const buildFilters = (): IAvailableFilters[] => {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = filterFromColumns(props?.hiddenFilterKeys);\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConversionOptions?.locales, col?.dateConversionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    const groupMaps = (selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> => {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            let keyName = key.split('_')[1];\r\n            if(!keyName && !key.includes('_'))\r\n                keyName = key;\r\n            const doesNotHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesNotHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    /**Isso deve estar O log n */\r\n    const onApplyFilter: IPanelFilterProps['onApply'] = (selectedItems) => {\r\n        if(selectedItems.size === 0) {\r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n            setIsFilterPanel(false);\r\n            return;\r\n        }\r\n        let orFilterAggregation: IRow[] = currentFilteredRows;\r\n        const groupedMaps = groupMaps(selectedItems);\r\n        const onlyNecessaryKeysToVerify = cols.filter(c => groupedMaps.has(c?.key)).map(c => c?.key);\r\n        //An filter algorithm that if the groupMap key is the same is an OR operation and if it's different is an AND operation\r\n        let currentIdx = 0;\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            orFilterAggregation\r\n            currentIdx += 1;\r\n            console.log(`${mapKey}/${map.size}`, currentIdx);\r\n        }\r\n\r\n        for (let idx = 0; idx < allRows?.length; idx++) {\r\n            const row = allRows[idx];\r\n            const deepKey = Utils.getDeepKeys(row);\r\n            const filteredKeys = onlyNecessaryKeysToVerify.filter(k => deepKey.includes(k));\r\n            for (const key of filteredKeys) {\r\n                let realKey: string = key;\r\n                const valueFromKey = Utils.getNestedObject(row, key?.split('.'));\r\n                if(valueFromKey === undefined || valueFromKey === null) continue;\r\n                if(groupedMaps.has(realKey)) {\r\n                    const thisKeyMap = groupedMaps.get(realKey);\r\n                    thisKeyMap.forEach((v) => {\r\n                        const currentFilteredIds = orFilterAggregation.map(r => r?.Id);\r\n                        const mapKeyWithDots = (v?.rootItemKey as string)?.split('.');\r\n                        const valueFromMap = Utils.getNestedObject(v?.data, mapKeyWithDots);\r\n                        if(!(currentFilteredIds.includes(row?.Id)) && valueFromKey === valueFromMap)\r\n                            orFilterAggregation.push(row);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (orFilterAggregation.length > 0) {\r\n            setActualRows(orFilterAggregation)\r\n            setCurFilteredRows(orFilterAggregation);\r\n        } else { \r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n        }\r\n        setIsFilterPanel(false);\r\n    }\r\n\r\n    const filterPanelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: onApplyFilter,\r\n        onCancel: () => { setIsFilterPanel(false); },\r\n        onClose: () =>  { setIsFilterPanel(false); },\r\n        onOpen: () => { setCurFilteredRows([]); },\r\n        //The available filters are the ones that are defined in the `columns` prop, and the options are the rows that are defined in the `rows` prop according to the key\r\n        availableFilters: buildFilters(),\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues\r\n    }\r\n\r\n    const groupPanelConfig: IGroupPanel = {\r\n        isOpen: isGroupPanelOpen,\r\n        onCancel: () => { setIsGroupPanel(false); },\r\n        onClose: () =>  { setIsGroupPanel(false); },\r\n        onOpen: () => { setIsGroupPanel(true); },\r\n        panelTitle: props?.groupPanelTitle ?? 'Agrupar',\r\n        setSelectedGroupKeys,\r\n        selectedGroupKeys,\r\n        options: filterFromColumns(props?.hiddenGroupKeys)?.map(c => ({key: c?.key, text: c?.name})) ?? [],\r\n        onApply: (groupMap) => {\r\n            if(groupMap.size === 0) return;\r\n            console.warn('Grouping is not implemented yet');\r\n        }\r\n    }\r\n\r\n    const listConfig: IListOptionsProps = {\r\n        onSearchItem: (text, keys) => {\r\n            const filteredRows: IRow[] = []; \r\n            if(!text)\r\n                filteredRows.push(...allRows);\r\n            else {\r\n                filteredRows.push(...allRows?.filter(item => {\r\n                    const itemValues: string[] = [];\r\n                    for (const key of keys) {\r\n                        const value = Utils.getNestedObject(item, (key as string)?.split('.'));\r\n                        if(value !== undefined && value !== null)\r\n                            itemValues.push(value.toString());\r\n                    }\r\n                    const containsText = itemValues.some(v => v?.toLowerCase().includes(text?.toLowerCase()));\r\n                    return containsText;\r\n                }));\r\n            } \r\n            setActualRows(filteredRows);\r\n            setCurFilteredRows(filteredRows);\r\n        },\r\n        setRenderAs: () => {\r\n            if(renderAs === 'card')\r\n                return setRenderAs('list');\r\n            setRenderAs('card');\r\n        },\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        setIsGroupPanelOpen: (value) => { setIsGroupPanel(value); },\r\n        enableSearch: props?.headerOptions?.enableSearch ?? true,\r\n        enableFilter: props?.headerOptions?.enableFilter ?? true,\r\n        enableCardView: props?.headerOptions?.enableCardView ?? false,\r\n        ...props?.headerOptions\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            cols,\r\n            filterPanelConfig,\r\n            groupPanelConfig,\r\n            isFilterPanelOpen,\r\n            isGroupPanelOpen,\r\n            listConfig,\r\n            shouldRenderCard\r\n        },\r\n        handlers: {\r\n            onRowClick,\r\n        },\r\n        JSX: {\r\n            CardsList\r\n        }\r\n    }\r\n}","import { lazy, useContext, useMemo, useRef, useEffect } from 'react';\r\nimport { FilterPanelContext } from '../Contexts';\r\nimport { RangeType } from '../../helpers/enums';\r\nimport type { FilterOption } from '../../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\nimport type { IPersonaProps } from '@fluentui/react/lib/Persona';\r\n\r\nexport function usePanelFilterController() {\r\n    const { isOpen, onClose, availableFilters, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen } = useContext(FilterPanelContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if (!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string);\r\n        }\r\n        else if(option.selected && copyMap.has(option?.key as string) && option?.isDateComponent) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if (onOpen) onOpen(); }, []);\r\n\r\n    const mapOptions = (options: FilterOption[]) => {\r\n        return options\r\n        .filter(i => (i?.text !== null && i?.text !== undefined))\r\n        .map<FilterOption>(({ key, text, data }) => ({\r\n            key,\r\n            text,\r\n            data\r\n        }));\r\n    }\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0)\r\n            return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if (keyKind === keyToFilter)\r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    const getDefaultSelectedDate = (keyToFilter: string): {slider: RangeType, from: Date, to: Date} => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.find(([key]) => key === keyToFilter);\r\n        const mapWithSameKeyValue = mapWithSameKey?.[1]?.data;\r\n        if(mapWithSameKeyValue)\r\n            return {slider: mapWithSameKeyValue?.type, from: mapWithSameKeyValue?.from, to: mapWithSameKeyValue?.to};\r\n        return {\r\n            slider: RangeType.NONE,\r\n            from: null,\r\n            to: null\r\n        }\r\n    }\r\n\r\n    const getDefaultSelectedPeople = (keyToFilter: string): IPersonaProps[] => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.filter(([key]) => {\r\n            const keyKind = key?.split('_')[1];\r\n            return keyKind === keyToFilter\r\n        });\r\n        if(mapWithSameKey?.length > 0) {\r\n            const people = mapWithSameKey?.map(([_, value]) => value as IPersonaProps);\r\n            return people;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const onChangeTags = (options: FilterOption[]) => (tags: ITag[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(tags.length === 0) {\r\n            options.forEach(opt => {\r\n                if(copyMap.has(opt?.key as string))\r\n                    copyMap.delete(opt?.key as string);\r\n            });\r\n        } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n            copyMap.delete(lastAddedTag?.current?.key as string);\r\n            lastAddedTag.current = null; \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    const onTagSelected = (key: string) =>(selectedItem: ITag) => {\r\n        onAddOrRemoveToMap(key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n        lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n        return selectedItem;\r\n    }\r\n\r\n    const onResolveTagSuggestion = (options: FilterOption[]) => (currentFilter: string, tagList: ITag[], ) => {\r\n        const result = currentFilter\r\n        ? options.filter(opt => \r\n            opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n            && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n        return result;\r\n    }\r\n\r\n    const onRecordDateChange = (key: string) => (from: Date, to: Date, type: RangeType) => {\r\n        if(from && to && type !== RangeType.NONE)\r\n            onAddOrRemoveToMap(key, {\r\n                key: key,\r\n                text: `${from?.toISOString()} - ${to?.toISOString()}`,\r\n                data: { from, to, type },\r\n                selected: true,\r\n                isDateComponent: true,\r\n                name: `${from?.toISOString()} - ${to?.toISOString()}`\r\n            } as unknown as FilterOption);\r\n        else {\r\n            const copyMap = new Map(actualFilteredValues);\r\n            copyMap.delete(key);\r\n            setActualFilteredValues(copyMap);\r\n        }\r\n    }\r\n\r\n    const onChangePeople = (key: string) => (items: IPersonaProps[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(items.length === 0) {\r\n            actualFilteredValues?.forEach((_, k) => {\r\n                if(k?.split('_')?.[1] === key)\r\n                    copyMap.delete(k);\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        } \r\n        else {\r\n            items.forEach(i => {\r\n                onAddOrRemoveToMap(key, {\r\n                    key: i?.key,\r\n                    text: i?.text,\r\n                    data: i?.['data'],\r\n                    selected: true,\r\n                    isDateComponent: false,\r\n                    name: i?.text\r\n                } as unknown as FilterOption);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            isOpen,\r\n            actualFilteredValues,\r\n            panelTitle,\r\n            availableFilters\r\n        },\r\n        handlers: {\r\n            getDefaultDropdownSelectedKeys,\r\n            getDefaultSelectedTag,\r\n            getDefaultSelectedDate,\r\n            getDefaultSelectedPeople,\r\n            onAddOrRemoveToMap,\r\n            onClose,\r\n            onCancel,\r\n            onApply,\r\n            onOpen,\r\n            setActualFilteredValues,\r\n            onChangeTags,\r\n            onTagSelected,\r\n            onResolveTagSuggestion,\r\n            onRecordDateChange,\r\n            mapOptions,\r\n            onChangePeople\r\n        },\r\n        JSX: {\r\n            FluentPanel,\r\n            Dropdown,\r\n            PrimaryButton,\r\n            DefaultButton,\r\n            TagPicker\r\n        }\r\n    }\r\n}","export {GridView} from './GridView';","\r\nexport class Utils {\r\n\r\n    /**Tries to convert an ISO `string` to the locale format. */\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n\r\n    /**Get a value from a deep nested object.\r\n     * \r\n     * @param obj The object to search in.\r\n     * @param path The path to the value, as an array of keys, separated by dots.\r\n     * @returns The value, if found.\r\n     * \r\n     * Theoretically, this function can be used to get the value from an `number[]` as the type of the `pathArr`, but I've not tested it.\r\n     */\r\n    public static getNestedObject<Path, ReturnV extends any, Obj extends Record<any, any>>(nestedObj: Obj, pathArr: Path[]): ReturnV {\r\n        return pathArr?.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj) as ReturnV;\r\n    }\r\n\r\n    public static getDeepKeys(obj: Record<any, any>): string[] {\r\n        let keys: string[] = [];\r\n        for(let key in obj) {\r\n            keys.push(key);\r\n            if(typeof obj[key] === \"object\") {\r\n                let subKeys = Utils.getDeepKeys(obj[key]);\r\n                keys = keys.concat(subKeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n}","\r\nexport enum RangeType {\r\n    NONE,\r\n    WEEK,\r\n    MONTH,\r\n    YEAR,\r\n    CUSTOM\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/ChoiceGroup\");","module.exports = require(\"@fluentui/react/lib/DatePicker\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Slider\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"react\");"],"sourceRoot":""}