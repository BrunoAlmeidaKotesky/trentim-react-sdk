{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/Card/Card.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/DateSlider.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GroupPanel.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PeoplePicker.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewFilter.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewGrouping.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/handlers/GridViewMapper.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridCardRendering.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/hooks/usePanelFilterController.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/enums.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/hooks/useRefWithCallback.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/ChoiceGroup\"","webpack:///external \"@fluentui/react/lib/DatePicker\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Label\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Slider\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","Card","props","styles","card","backgroundColor","border","margin","borderRadius","position","display","flexDirection","width","height","userSelect","enableUserSelect","color","overflow","top","borderBottom","gridTemplateColumns","columnGap","padding","fontFamily","col","rightCol","alignItems","leftCol","cardTitle","WebkitLineClamp","WebkitBoxOrient","fontSize","lineHeight","projectCode","opacity","bottom","justifyContent","circleWrap","circle","background","status","marginLeft","linkButton","minWidth","React","onClick","e","onCardClick","style","cardSubtitle","cardRightColInformation","_a","containerStyle","_b","_c","values","_d","length","_e","map","idx","title","plantName","circleIndicator","_f","__assign","_g","_h","_j","Button_1","onClickDownButton","iconProps","iconName","createContext","enableFilter","enableSearch","enableCardView","customButtons","setIsFilterPanelOpen","undefined","searchBoxPlaceholder","setRenderAs","defaultButtonsOrder","group","search","filter","setIsGroupPanelOpen","onClickSearchIcon","isOpen","onApply","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","dateValue","setFilterDate","filterOptionsMatrix","availableFilters","footer","options","selectedGroupKeys","setSelectedGroupKeys","DateSliderComponent","useState","displayDatePicker","setDisplayDatePicker","enums_1","NONE","currentSlider","setCurSlider","useContext","Contexts_1","formatSliderValue","num","onSliderChange","_","val","CUSTOM","copyMap","set","itemKey","fromDate","toDate","Date","onRecordDateRange","WEEK","lastWeek","setDate","getDate","MONTH","lastMonth","setMonth","getMonth","YEAR","lastYear","setFullYear","getFullYear","useEffect","defaultSliderValue","size","dateStrings","useMemo","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","showWeekNumbers","weekNumberFormatString","firstWeekOfYear","dateFormat","showGoToToday","Slider_1","min","max","step","defaultValue","container","valueFormat","onChanged","label","DatePicker_1","maxDate","strings","formatDate","date","toLocaleDateString","onSelectDate","newMap","minDate","memo","GridView","useGridController","state","handlers","JSX","CardsList","actualRows","visibleCols","isFilterPanelOpen","filterPanelConfig","groupPanelConfig","listConfig","shouldRenderCard","isGroupPanelOpen","groups","onItemClick","Provider","ListOptions_1","zIndex","contentContainer","id","onRenderCustomComponent","DetailsList_1","detailsListProps","onRenderItemColumn","onRenderRow","defaultRender","item","cursor","items","columns","groupProps","isAllGroupsCollapsed","gr","isCollapsed","collapseAllVisibility","visible","onRenderHeader","showEmptyGroups","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","hidden","react_1","fallback","cardProps","_k","_l","gap","PanelFilter_1","GroupPanel_1","GroupPanel","Panel","lazy","then","default","PrimaryButton","DefaultButton","RadioButton","ChoiceGroup","FluentPanel","isFooterAtBottom","onDismiss","onRenderFooter","marginRight","onChange","opt","keyWithName","concat","text","defaultSelectedKey","split","__read","ListOptions","searchKeys","onSearchItemChange","enableGrouping","onFilterIconClick","onGroupIconClick","onSearchBoxClick","cardButtonProps","filterButtonProps","searchBoxProps","groupButtonProps","omittedButtonProps","omittedTextFieldProps","defaultStyles","react_2","order","b","renderAs","className","onRenderCustomButton","placeholder","onKeyDown","ENTER","currentTarget","onFocus","onBlur","target","pointerEvents","inputValue","parentElement","childNodes","CLICK","icon","PanelFilter","usePanelFilterController","Dropdown","TagPicker","Label","getDefaultDropdownSelectedKeys","onAddOrRemoveToMap","getDefaultSelectedTag","getDefaultSelectedSlider","Suspense","defaultSelectedKeys","multiSelect","enableMultiple","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","overflowY","onChangeTags","onItemSelected","onTagSelected","onResolveSuggestions","onResolveTagSuggestion","DateSlider_1","onRecordDateChange","PeoplePicker_1","people","getDefaultSelectedPeople","onChangePeople","suggestionProps","mostRecentlyUsedHeaderText","showRemoveButtons","suggestionsAvailableAlertText","suggestionsContainerAriaLabel","PeoplePicker","peopleList","setPeopleList","picker","useRef","onFilterChanged","filterText","currentPersonas","limitResults","filteredPersonas","filterPersonasByText","removeDuplicates","slice","doesTextStartWith","onRemoveSuggestion","indexPeopleList","indexOf","newPeople","Pickers_1","onValidateInput","validateInput","componentRef","resolveDelay","toLowerCase","personas","possibleDupes","persona","listContainsPersona","input","valid","warning","invalid","GridViewFilter","allRows","hiddenFields","filters","columnsToFilter","filterFromColumns","index","renderFilterAs","keys","fieldName","data","stringObject","Utils","getNestedObject","toString","dateConversionOptions","shouldConvertToLocaleString","Utils_1","convertIsoToLocaleString","locales","formatOptions","uniqueOptions","obj","pos","arr","mapObj","push","setActualRows","setIsFilterPanel","applyCustomFilter","onItemsFiltered","onFilterPanelCancel","selectedItems","groupedMaps_1","GridViewMapper_1","groupMaps","groupedMaps","filteredRows","mapKey","filterFrom","forEach","isDate","from","to","ORrowsFromThisKey","rDate","Id","includes","apply","__spreadArray","entries","allMapValues","newFilteredItems","rowValue","some","v","hiddenKeys","searchCb","onSearchBoxItemsFiltered","searchText","allFilteredRows","filteredValues","foundValues","startsWith","keys_1_1","GridViewGrouping","setGroups","setIsGroupPanel","onItemsGrouped","onGroupPanelCancel","groupByFields","startIndex","level","emptyGroupLabel","cols","selectedKey","buildGroups","updatedItemsOrder","defaultEmptyLabel","groupField","groupKey_1","keyDateConverterOptions_1","find","isKeyADate_1","groupFieldName","groupedItems_1","groupName","sortedGroups_1","groupNames","ascending","sort","reverse","groupItems","totalItems","count","subGroup","GridViewMapper","mapsByKeyKind","keyName","doesNotHaveKey","has","sameMapsList","thisKindMap_1","useGridCardRendering","setEnableGrouping","setShouldRenderCard","console","error","row","cardTitleKey","cardSubtitleKey","titleDateConversionOptions","subtitleDateConversionOptions","rightColumn","cIndicator","titleValue","_m","newCardProps","_o","marginBottom","fontWeight","setCols","headerOptions","rows","setAllRows","useRefWithCallback","currentSearchBoxItems","memoizedAvailableFilter","setAvailableFilters","hideColumn","onColumnClick","currentRows","column","isSortedDescending","isSorted","sortedItems","copyAndSort","convertedColumns","onRender","_2","fieldValue","initialGroupedBy","GridViewGrouping_1","onApplyGrouping","GridViewFilter_1","buildFilters","hiddenFilterKeys","hiddenGroupKeys","f","mapFilterOptions","onApplyFilter","filterPanelTitle","panelChildren","groupPanelTitle","selectedKeys","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","callerType","current","filteredItems","_z","_0","_1","_3","DropDown","lastAddedTag","rootItemKey","option","selected","isDateComponent","listContainsTagList","tag","tagList","compareTag","k","keyToFilter","selectedTags","keyKind","mapWithSameKey","mapWithSameKeyValue","type","tags","selectedItem","currentFilter","result","toISOString","isNaN","getTime","isIsoDate","test","Intl","DateTimeFormat","format","columnKey","aValue","bValue","nestedObj","pathArr","reduce","subKeys","getDeepKeys","subkey","RangeType","IconClickCaller","GroupOrder","initialValue","ref","toggleState","setToggle","refCallback","useCallback","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { ICardProps } from '../models/interfaces/ICardProps';\r\nimport { CSSProperties } from 'react';\r\n\r\n/**\r\n * A card component that can be used in `GridView` automatically if `renderAs` is set to `card`.\r\n * \r\n * @param props - IInfoCardProps\r\n * @returns JSX.Element\r\n */\r\nexport function Card(props: ICardProps) {\r\n    const styles: Record<string, CSSProperties> = {\r\n        card: {\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            border: \"1px solid #ababab\",\r\n            margin: \"0 0 16px\",\r\n            borderRadius: \"4px\",\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: props?.width || \"100%\",\r\n            height: props?.height || \"150px\",\r\n            userSelect: props?.enableUserSelect ? \"unset\" : \"none\",\r\n            color: \"#333\",\r\n            overflow: \"hidden\"\r\n        },\r\n        top: {\r\n            borderBottom: \"1px solid rgb(237, 235, 233)\",\r\n            overflow: \"hidden\",\r\n            height: \"100%\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 120px\",\r\n            columnGap: \"8px\",\r\n            padding: \"16px\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n        },\r\n        col: { display: \"flex\", flexDirection: \"column\" },\r\n        rightCol: { display: 'flex', flexDirection: 'column', alignItems: \"flex-end\" },\r\n        leftCol: { display: 'flex', flexDirection: 'column' },\r\n        cardTitle: {\r\n            display: \"-webkit-box\",\r\n            WebkitLineClamp: \"2\",\r\n            WebkitBoxOrient: \"vertical\",\r\n            overflow: \"hidden\",\r\n            fontSize: \"18px\",\r\n            lineHeight: 1.4\r\n        },\r\n        projectCode: {\r\n            fontSize: \"16px\",\r\n            opacity: 0.8\r\n        },\r\n        bottom: {\r\n            display: \"flex\",\r\n            padding: \"6px 16px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"rgb(250, 249, 248)\",\r\n            fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif`\r\n\r\n        },\r\n        circleWrap: { display: \"inline-flex\", alignItems: \"center\" },\r\n        circle: {\r\n            width: \"16px\",\r\n            height: \"16px\",\r\n            background: \"#06ad51\",\r\n            borderRadius: \"50%\",\r\n            border: \"1px solid #06ad51\",\r\n            display: \"inline-block\"\r\n        },\r\n        status: { display: \"inline-block\", marginLeft: \"8px\" },\r\n        linkButton: { width: \"32px\", height: \"32px\", minWidth: \"32px\" }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={(e) => {\r\n            if (props.onCardClick)\r\n                props?.onCardClick(e);\r\n        }} style={styles.card}>\r\n            <div data-class-name=\"card-top\" style={styles.top}>\r\n                <div data-class-name=\"card-top-left\" style={styles.leftCol}>\r\n                    <div style={styles.cardTitle}>\r\n                        <span>{props?.cardTitle}</span>\r\n                    </div>\r\n                    <div style={styles.projectCode}>\r\n                        <span>{props?.cardSubtitle}</span>\r\n                    </div>\r\n                </div>\r\n                <div data-class-name=\"card-top-right\" style={props?.cardRightColInformation?.containerStyle ?? styles.rightCol}>\r\n                    {props?.cardRightColInformation?.values?.length > 0 && props?.cardRightColInformation?.values.map((value, idx) => (\r\n                        <div key={value?.title ?? idx} style={value?.style ?? styles.plantName}>\r\n                            <span>{value?.title}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div data-class-name=\"card-bottom\" style={styles.bottom}>\r\n                <div data-class-name=\"card-circle-wrapper\" style={styles.circleWrap}>\r\n                    <div style={props?.circleIndicator?.color ? { ...styles.circle, background: props?.circleIndicator?.color, border: `1px solid ${props?.circleIndicator?.color}` } : {}}></div>\r\n                    <span style={styles.status}>{props?.circleIndicator?.title}</span>\r\n                </div>\r\n                <div data-class-name=\"card-button-container\">\r\n                    <PrimaryButton onClick={props?.onClickDownButton} style={styles.linkButton} iconProps={{ iconName: props?.iconName || 'Page' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IListOptions\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../models/interfaces/IGroupPanel';\r\nimport type { IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps<IRow>>({ \r\n    enableFilter: true, \r\n    enableSearch: true,\r\n    enableCardView: true,\r\n    customButtons: [], \r\n    setIsFilterPanelOpen: undefined, \r\n    searchBoxPlaceholder: '',\r\n    setRenderAs: undefined, \r\n    defaultButtonsOrder: { group: 0, search: 1, filter: 2, card: 3 },\r\n    setIsGroupPanelOpen: undefined,\r\n    onClickSearchIcon: undefined\r\n});\r\n\r\nexport const FilterPanelContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined,\r\n    dateValue: null,\r\n    setFilterDate: undefined,\r\n    filterOptionsMatrix: [],\r\n    availableFilters: [],\r\n    top: undefined,\r\n    footer: undefined\r\n});\r\n\r\nexport const GroupPanelContext = createContext<IGroupPanel>({\r\n    isOpen: false, \r\n    onApply: undefined,\r\n    onCancel: undefined,\r\n    onClose: undefined,\r\n    onOpen: undefined,\r\n    panelTitle: '',\r\n    options: [],\r\n    selectedGroupKeys: null,\r\n    setSelectedGroupKeys: undefined,\r\n    top: undefined,\r\n    footer: undefined\r\n});","import * as React from 'react';\r\nimport { RangeType } from '../helpers/enums';\r\nimport { Slider, ISliderProps } from '@fluentui/react/lib/Slider';\r\nimport { DatePicker } from '@fluentui/react/lib/DatePicker';\r\nimport type { IDateSliderProps } from '../models/interfaces/IDateSlider';\r\nimport { useContext, useEffect, useState, memo, useMemo } from 'react';\r\nimport { FilterPanelContext } from './Contexts';\r\n\r\nfunction DateSliderComponent(props: IDateSliderProps) {\r\n    const [displayDatePicker, setDisplayDatePicker] = useState(false);\r\n    const [currentSlider, setCurSlider] = useState<RangeType>(RangeType.NONE);\r\n    const {dateValue, setFilterDate} = useContext(FilterPanelContext);\r\n    const formatSliderValue = (num: number): string => num === 0 ? 'Nenhum' : num === 1 ? 'Última Semana' : num === 2 ? 'Último Mês' : num === 3 ? 'Últimos Ano' : '';\r\n    const onSliderChange: ISliderProps['onChanged'] = (_, val) => {\r\n        if(val === RangeType.CUSTOM) {\r\n            setDisplayDatePicker(true);\r\n            setCurSlider(RangeType.CUSTOM);\r\n        }\r\n        else {\r\n            setDisplayDatePicker(false);\r\n            setFilterDate(p => {\r\n                const copyMap = new Map(p);\r\n                copyMap.set(props?.itemKey, {fromDate: null, toDate: new Date()});\r\n                return copyMap;\r\n            })\r\n        }\r\n        if(val === RangeType.NONE) {\r\n            props.onRecordDateRange(null, null, RangeType.NONE);\r\n            setCurSlider(RangeType.NONE);\r\n            setDisplayDatePicker(false);\r\n        }\r\n        else if(val === RangeType.WEEK) {\r\n            const lastWeek = new Date();\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            setCurSlider(RangeType.WEEK);\r\n            props.onRecordDateRange(lastWeek, new Date(), RangeType.WEEK);\r\n        }\r\n        else if(val === RangeType.MONTH) {\r\n            const lastMonth = new Date();\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            setCurSlider(RangeType.MONTH);\r\n            props.onRecordDateRange(lastMonth, new Date(), RangeType.MONTH);\r\n        }\r\n        else if(val === RangeType.YEAR) {\r\n            const lastYear = new Date();\r\n            lastYear.setFullYear(lastYear.getFullYear() - 1);\r\n            setCurSlider(RangeType.YEAR);\r\n            props.onRecordDateRange(lastYear, new Date(), RangeType.YEAR);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurSlider(props.defaultSliderValue);\r\n    }, [props?.defaultSliderValue]);\r\n\r\n    useEffect(() => {\r\n        if(dateValue?.size > 0 && currentSlider === RangeType.CUSTOM)\r\n            props.onRecordDateRange(dateValue?.get(props?.itemKey)?.fromDate, dateValue.get(props?.itemKey)?.toDate, RangeType.CUSTOM);\r\n    }, [currentSlider, dateValue]);\r\n\r\n    useEffect(() => {\r\n        if(props?.defaultSliderValue === 4 && !displayDatePicker)\r\n            setDisplayDatePicker(true);\r\n    }, [props?.defaultSliderValue]);\r\n\r\n    const dateStrings = useMemo(() => ({\r\n        months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n        shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n        days: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\r\n        shortDays: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\r\n        goToToday: 'Hoje',\r\n        prevMonthAriaLabel: 'Mês anterior',\r\n        nextMonthAriaLabel: 'Próximo mês',\r\n        prevYearAriaLabel: 'Ano anterior',\r\n        nextYearAriaLabel: 'Próximo ano',\r\n        closeButtonAriaLabel: 'Fechar',\r\n        isRequiredErrorMessage: 'Este campo é obrigatório.',\r\n        invalidInputErrorMessage: 'Valor de entrada inválido.',\r\n        isOutOfBoundsErrorMessage: 'Valor de entrada fora dos limites.',\r\n        showWeekNumbers: false,\r\n        weekNumberFormatString: '',\r\n        firstWeekOfYear: 0,\r\n        dateFormat: 'd',\r\n        showGoToToday: true,\r\n    }), []);\r\n\r\n    return (<>\r\n    <Slider\r\n        min={0} max={4} step={1}\r\n        defaultValue={props?.defaultSliderValue ?? 0} styles={{container: { display: 'grid' }}}\r\n        valueFormat={formatSliderValue}\r\n        onChanged={onSliderChange}\r\n        label={props?.label}/>\r\n    {displayDatePicker && \r\n        <div>\r\n            <DatePicker\r\n                maxDate={dateValue?.get(props?.itemKey)?.toDate}\r\n                strings={dateStrings}\r\n                value={dateValue?.get(props?.itemKey)?.fromDate}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    setFilterDate(p => {\r\n                        const newMap = new Map(p);\r\n                        newMap.set(props?.itemKey, {fromDate: d, toDate: dateValue?.get(props?.itemKey)?.toDate});\r\n                        return newMap;\r\n                    });\r\n                    setCurSlider(RangeType.CUSTOM);\r\n                }}\r\n                label=\"De\"/>\r\n            <DatePicker\r\n                minDate={dateValue?.get(props?.itemKey)?.fromDate}\r\n                strings={dateStrings}\r\n                formatDate={(date) => date?.toLocaleDateString()}\r\n                onSelectDate={(d) => {\r\n                    setFilterDate(p => {\r\n                        const newMap = new Map(p);\r\n                        newMap.set(props?.itemKey, {fromDate: dateValue?.get(props?.itemKey)?.fromDate, toDate: d});\r\n                        return newMap;\r\n                    });\r\n                    setCurSlider(RangeType.CUSTOM);\r\n                }}\r\n                value={dateValue?.get(props?.itemKey)?.toDate}\r\n                label=\"Até\"/>\r\n        </div>\r\n    }\r\n    </>);\r\n}\r\n\r\nexport const DateSlider = memo(DateSliderComponent);","import * as React from 'react';\r\nimport { useGridController } from './hooks/useGridController';\r\nimport { FilterPanelContext, GroupPanelContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps, BaseType } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport GroupPanel from './GroupPanel';\r\nimport { ListOptions } from './ListOptions';\r\nimport { Suspense } from 'react';\r\n\r\n/** An enhanced version of the `DetailsList` component, with automatic filtering, sorting, grouping, properties searching with many other features to customize.\r\n * \r\n * The component can also be rendered as a collection of `Card` components, with the same functionalities.\r\n */\r\nexport function GridView<T extends BaseType>(props: IGridListProps<T>) {\r\n    const {state, handlers, JSX} = useGridController(props);\r\n    const {CardsList} = JSX;\r\n    const {actualRows, visibleCols, isFilterPanelOpen, filterPanelConfig, groupPanelConfig, listConfig, shouldRenderCard, isGroupPanelOpen, groups} = state;\r\n    const {onItemClick} = handlers;\r\n\r\n    return (\r\n        <GroupPanelContext.Provider value={groupPanelConfig}>\r\n        <FilterPanelContext.Provider value={filterPanelConfig}>\r\n        <ListOptionsContext.Provider value={listConfig}>\r\n            <div style={props?.styles?.root ?? {}}>\r\n                <ListOptions />\r\n                <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0, ...props?.styles?.contentContainer }} id=\"gridView-root\">\r\n                    {\r\n                    !!props?.onRenderCustomComponent ? actualRows?.map(i => props?.onRenderCustomComponent(i)) :\r\n                    !shouldRenderCard ? \r\n                    <DetailsList\r\n                        {...props?.detailsListProps}\r\n                        onRenderItemColumn={props?.onRenderItemColumn}\r\n                        onRenderRow={(p, defaultRender) => <div onClick={() => onItemClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onItemClick ? 'pointer' : 'default' } } })}</div>}\r\n                        items={actualRows} columns={visibleCols}\r\n                        groups={groups}\r\n                        groupProps={{\r\n                            isAllGroupsCollapsed: props?.detailsListProps?.groups ? props?.detailsListProps?.groups?.filter(gr => !gr?.isCollapsed)?.length === 0 : true,\r\n                            collapseAllVisibility: CollapseAllVisibility.visible,\r\n                            onRenderHeader: (props, defaultRender) => {\r\n                                if (!props.group!.name)\r\n                                    return <></>;\r\n                                return defaultRender(props);\r\n                            },\r\n                            showEmptyGroups: false\r\n                        }}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                        onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                            <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                            </Sticky>)\r\n                        }\r\n                        checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                    /> :\r\n                    <Suspense fallback={'...'}>\r\n                        <div id=\"gridView-cardContainer\" style={props?.cardProps?.containerStyle ?? {display: 'grid', gap: 12, gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))'}}>\r\n                        {CardsList}\r\n                        </div>\r\n                    </Suspense>\r\n                    }\r\n                </div>\r\n                {isFilterPanelOpen && <PanelFilter />}\r\n                {isGroupPanelOpen && <GroupPanel />}\r\n            </div>\r\n        </ListOptionsContext.Provider>\r\n        </FilterPanelContext.Provider>\r\n        </GroupPanelContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense } from 'react';\r\nimport { GroupPanelContext } from './Contexts';\r\n\r\nfunction GroupPanel() {\r\n    const {isOpen, panelTitle, onApply, onCancel, onClose, options, selectedGroupKeys, setSelectedGroupKeys, top, footer} = useContext(GroupPanelContext);\r\n    const [FluentPanel, PrimaryButton, DefaultButton, RadioButton] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const RadioButton = lazy(() => import('@fluentui/react/lib/ChoiceGroup').then(({ ChoiceGroup }) => ({ default: ChoiceGroup })));\r\n        return [Panel, PrimaryButton, DefaultButton, RadioButton];\r\n    }, []);\r\n\r\n    if(!isOpen) return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}\r\n                onRenderFooter={_ => (<>\r\n                {!!footer ? footer : null}\r\n                <div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(selectedGroupKeys)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div></>)}>\r\n                {!!top ? top : null}\r\n                <h2>{panelTitle}</h2>\r\n                <Suspense fallback={'...'}>\r\n                    <RadioButton\r\n                        onChange={(_, opt) => {\r\n                            const keyWithName = `${opt?.key};${opt?.text}` as const;\r\n                            setSelectedGroupKeys(keyWithName);\r\n                        }}\r\n                        defaultSelectedKey={selectedGroupKeys?.split(';')?.[0] ?? undefined}\r\n                        options={[{key: '@NONE', text: 'Nenhum'} ,...options]}/>\r\n                </Suspense>\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(GroupPanel);","import * as React from 'react';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {GroupPanelContext, ListOptionsContext} from './Contexts';\r\nimport { IconClickCaller } from '../helpers/enums';\r\n\r\nexport const ListOptions = () => {\r\n    const { \r\n        customButtons, enableFilter, enableSearch, searchKeys, onSearchItemChange, \r\n        setIsFilterPanelOpen, defaultButtonsOrder, searchBoxPlaceholder, enableCardView, \r\n        setRenderAs, enableGrouping, onClickSearchIcon, onFilterIconClick, onGroupIconClick, onSearchBoxClick,\r\n        cardButtonProps, filterButtonProps, searchBoxProps, groupButtonProps\r\n    } = React.useContext(ListOptionsContext);\r\n    const {onOpen} = React.useContext(GroupPanelContext);\r\n\r\n    const omittedButtonProps = useMemo(() => {\r\n        delete cardButtonProps?.['onClick'];\r\n        delete filterButtonProps?.['onClick'];\r\n        delete groupButtonProps?.['onClick'];\r\n        return {\r\n            cardButtonProps,\r\n            filterButtonProps,\r\n            groupButtonProps\r\n        }\r\n    }, [filterButtonProps, filterButtonProps, groupButtonProps, searchBoxProps]);\r\n\r\n    const omittedTextFieldProps = useMemo(() => {\r\n        delete searchBoxProps?.['placeholder'];\r\n        delete searchBoxProps?.['onKeyDown'];\r\n        delete searchBoxProps?.['onFocus'];\r\n        delete searchBoxProps?.['onBlur'];\r\n        return searchBoxProps;\r\n    }, [filterButtonProps, filterButtonProps, groupButtonProps, searchBoxProps]);\r\n\r\n    const defaultStyles = useMemo<Record<string, CSSProperties>>(() =>({\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }), []);\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        {enableGrouping &&\r\n        <DefaultButton\r\n            {...omittedButtonProps?.groupButtonProps}\r\n            onClick={_ => {\r\n                if(!!onGroupIconClick)\r\n                onGroupIconClick();\r\n                onOpen();\r\n            }} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.group}}} iconProps={{iconName: 'GroupList'}} />}\r\n        {enableCardView &&\r\n        <DefaultButton\r\n            {...omittedButtonProps?.cardButtonProps}\r\n            onClick={_ => setRenderAs()} styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.card}}} iconProps={{iconName: 'GridViewMedium'}} />}\r\n        {customButtons?.length > 0 && customButtons?.map((b, idx) => {\r\n            switch (b?.renderAs) {\r\n                case 'PrimaryButton':\r\n                    return (<PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>);\r\n                case 'DefaultButton': \r\n                    return (<DefaultButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</DefaultButton>);\r\n                case 'CustomButton': \r\n                    return b?.onRenderCustomButton(b?.props) ?? null;\r\n                default: return (<PrimaryButton key={b?.text + \"_\" + idx} className={b?.className} styles={{label: {fontSize: 14}, root: {order: b?.position ?? 'unset'}}} {...b?.props}>{b?.text}</PrimaryButton>);\r\n            }\r\n        })}\r\n        {(enableSearch && searchKeys) && \r\n        <TextField\r\n            {...omittedTextFieldProps}\r\n            placeholder={searchBoxPlaceholder}\r\n            onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                    onClickSearchIcon(IconClickCaller.ENTER, e?.currentTarget?.value, searchKeys);\r\n                }\r\n            }}\r\n            onFocus={onSearchBoxClick}\r\n            onBlur={e => onSearchItemChange(e.target.value, searchKeys)} \r\n            iconProps={{\r\n                iconName: 'Search',\r\n                style: { pointerEvents: \"auto\", cursor: \"pointer\", position: 'static', padding: 8, backgroundColor: '#e2d7cab5'},\r\n                onClick: (e) => {\r\n                    const inputValue = (e?.currentTarget?.parentElement?.childNodes[0] as HTMLInputElement)?.value;\r\n                    if(inputValue)\r\n                        onClickSearchIcon(IconClickCaller.CLICK);\r\n                }\r\n            }} \r\n            styles={{root: {width: 320, order: defaultButtonsOrder?.search}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter &&\r\n        <DefaultButton\r\n            {...omittedButtonProps?.filterButtonProps}\r\n            onClick={_ => {\r\n                if(!!onFilterIconClick) \r\n                    onFilterIconClick();\r\n                setIsFilterPanelOpen(true);\r\n            }}\r\n            styles={{label: {fontSize: 14}, root: {order: defaultButtonsOrder?.filter}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport {DateSlider} from './DateSlider';\r\nimport {PeoplePicker} from './PeoplePicker';\r\nimport {usePanelFilterController} from './hooks/usePanelFilterController';\r\n\r\nfunction PanelFilter() {\r\n    const {JSX, state, handlers} = usePanelFilterController();\r\n    const {actualFilteredValues, panelTitle, isOpen, filterOptionsMatrix, availableFilters} = state;\r\n    const {FluentPanel, PrimaryButton, Dropdown, TagPicker, DefaultButton, Label, top, footer} = JSX;\r\n    const { onClose, onCancel, getDefaultDropdownSelectedKeys, onAddOrRemoveToMap, \r\n            getDefaultSelectedTag, getDefaultSelectedSlider } = handlers;\r\n\r\n    if (!isOpen) return null;\r\n    return (\r\n        <React.Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<>\r\n                {!!footer ? footer : null}\r\n                <div style={{padding: 20}}>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => handlers.onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </React.Suspense>\r\n                    <React.Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </React.Suspense>\r\n                  </div></>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                {!!top ? top : null}\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map((filter, idx) => {\r\n                    return (<React.Suspense key={filter?.key + \"-\" + idx} fallback={'...'}>\r\n                        {(filter.renderAs === 'Dropdown') ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key + \"-\" + idx} options={filterOptionsMatrix[idx]}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        (filter.renderAs === 'SearchBox') ?\r\n                        <div key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>\r\n                        <Label>{filter?.name}</Label>\r\n                        <TagPicker \r\n                            key={filter?.key + \"-\" + idx}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{\r\n                                doNotLayer: true,\r\n                                style: {overflowY: 'auto'},\r\n                                styles: {root: {position: 'relative'}}\r\n                            }}\r\n                            onChange={handlers.onChangeTags(filterOptionsMatrix[idx])}\r\n                            onItemSelected={handlers.onTagSelected(filter?.key)}\r\n                            onResolveSuggestions={handlers.onResolveTagSuggestion(filterOptionsMatrix[idx])} /></div> :\r\n                        (filter.renderAs === 'DateSlider') ?\r\n                        <DateSlider\r\n                            itemKey={filter?.key}\r\n                            defaultSliderValue={getDefaultSelectedSlider(filter?.key)}\r\n                            onRecordDateRange={handlers.onRecordDateChange(filter?.key)}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            label={filter?.name}/> :\r\n                        (filter?.renderAs === 'PeoplePicker') ?\r\n                        <div>\r\n                        <Label key={filter?.key + \"-\" + filter?.name + \"-\" + idx}>{filter?.name}</Label>\r\n                        <PeoplePicker\r\n                            label={''}\r\n                            key={filter?.key + \"-\" + idx}\r\n                            people={filterOptionsMatrix[idx]}\r\n                            defaultSelectedItems={handlers.getDefaultSelectedPeople(filter?.key)}\r\n                            onChangePeople={handlers.onChangePeople(filter?.key)} /> \r\n                        </div> : null\r\n                        }\r\n                    </React.Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </React.Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","import * as React from 'react';\r\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\r\nimport { CompactPeoplePicker, IBasePickerSuggestionsProps, ValidationState } from '@fluentui/react/lib/Pickers';\r\n\r\nconst suggestionProps: IBasePickerSuggestionsProps = {\r\n    suggestionsHeaderText: 'Pessoas sugeridas',\r\n    mostRecentlyUsedHeaderText: 'Pessoas mais recentes',\r\n    noResultsFoundText: 'Nenhum resultado encontrado',\r\n    loadingText: 'Carregando',\r\n    showRemoveButtons: true,\r\n    suggestionsAvailableAlertText: 'Sugestões disponíveis',\r\n    suggestionsContainerAriaLabel: 'Pessoas sugeridas',\r\n};\r\n\r\ninterface IPeoplePickerProps {\r\n    label: string;\r\n    people: IPersonaProps[];\r\n    onChangePeople: (items: IPersonaProps[]) => void;\r\n    defaultSelectedItems?: IPersonaProps[];\r\n}\r\n\r\nexport const PeoplePicker = (props: IPeoplePickerProps) => {\r\n    const [peopleList, setPeopleList] = React.useState<IPersonaProps[]>(props.people);\r\n    const picker = React.useRef(null);\r\n\r\n    const onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] | Promise<IPersonaProps[]> => {\r\n        if (!filterText)\r\n            return [];\r\n        let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\r\n        filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\r\n        filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\r\n        return filteredPersonas;\r\n    };\r\n\r\n    const filterPersonasByText = (filterText: string)=> peopleList.filter(item => doesTextStartWith(item.text as string, filterText));\r\n    \r\n    const onRemoveSuggestion = (item: IPersonaProps): void => {\r\n        const indexPeopleList: number = peopleList.indexOf(item);\r\n        if (indexPeopleList >= 0) {\r\n            const newPeople: IPersonaProps[] = peopleList\r\n                .slice(0, indexPeopleList)\r\n                .concat(peopleList.slice(indexPeopleList + 1));\r\n            setPeopleList(newPeople);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <CompactPeoplePicker\r\n                onResolveSuggestions={onFilterChanged}\r\n                getTextFromItem={getTextFromItem}\r\n                pickerSuggestionsProps={suggestionProps}\r\n                defaultSelectedItems={props?.defaultSelectedItems}\r\n                onChange={props?.onChangePeople}\r\n                className={'ms-PeoplePicker'}\r\n                onRemoveSuggestion={onRemoveSuggestion}\r\n                onValidateInput={validateInput}\r\n                componentRef={picker}\r\n                resolveDelay={300}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst doesTextStartWith = (text: string, filter: string) => text?.toLowerCase()?.indexOf(filter?.toLowerCase()) === 0;\r\n\r\nconst removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]) => personas.filter(persona => !listContainsPersona(persona, possibleDupes));\r\n\r\nfunction listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\r\n    if (!personas || !personas.length || personas.length === 0) \r\n        return false;\r\n    return personas.filter(item => item?.text === persona?.text)?.length > 0;\r\n}\r\n\r\nconst getTextFromItem = (persona: IPersonaProps) => persona?.text;\r\n\r\nfunction validateInput(input: string): ValidationState {\r\n    if (input.indexOf('@') !== -1) \r\n        return ValidationState.valid;\r\n    else if (input.length > 1) \r\n        return ValidationState.warning;\r\n    return ValidationState.invalid;\r\n}","import { Utils } from '../../helpers/Utils';\r\nimport { GridViewMapper } from './GridViewMapper';\r\nimport type { IRow, TColumn } from '../../models/interfaces/IGridView';\r\nimport type { ApplyFilter, SearchItem } from '../../models/types/Common';\r\nimport type { FilterOption, IAvailableFilters } from '../../models/interfaces/IPanelFilter';\r\n\r\nexport class GridViewFilter {\r\n\r\n    static onApplyFilter: ApplyFilter<IRow<any>> = ({allRows, setActualRows, setIsFilterPanel, applyCustomFilter, onItemsFiltered, onFilterPanelCancel}) => (selectedItems) => {\r\n        if(!!applyCustomFilter) {\r\n            const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n            return applyCustomFilter({allRows, setActualRows, setIsFilterPanel, selectedItems, groupedMaps});\r\n        }\r\n\r\n        if(selectedItems.size === 0) {\r\n            setActualRows(allRows);\r\n            if(!!onItemsFiltered) \r\n                onItemsFiltered(allRows);\r\n            if(!!onFilterPanelCancel)\r\n                onFilterPanelCancel('not-selected');\r\n            return setIsFilterPanel(false);\r\n        }\r\n        const groupedMaps = GridViewMapper.groupMaps(selectedItems);\r\n        let filteredRows: IRow[] = [];\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            const filterFrom = filteredRows?.length > 0 ? filteredRows : allRows;\r\n            map?.forEach(value => {\r\n                const isDate = !!value?.data?.from && !!value?.data?.to;\r\n                const ORrowsFromThisKey = filterFrom.filter(r => {\r\n                    if(isDate) {\r\n                        const from: Date = value?.data?.from;\r\n                        const to: Date = value?.data?.to;\r\n                        const rDate: Date = new Date(Utils.getNestedObject(r, mapKey.split('.')));\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return Utils.getNestedObject(r, mapKey.split('.')) === value?.text;\r\n                });\r\n                if(ORrowsFromThisKey.length > 0 && !filteredRows?.map(r => r?.Id)?.includes(value?.data?.Id))\r\n                    filteredRows.push(...ORrowsFromThisKey);\r\n            });\r\n        }\r\n\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        for(const [mapKey, map] of groupedMaps.entries()) {\r\n            const allMapValues = [...map.values()];\r\n            const newFilteredItems = filteredRows.filter(r => {\r\n                const rowValue = Utils.getNestedObject(r, mapKey.split('.'));\r\n                return allMapValues.some(v => {\r\n                    if(v?.data?.from && v?.data?.to) {\r\n                        const from: Date = v?.data?.from;\r\n                        const to: Date = v?.data?.to;\r\n                        const rDate: Date = new Date(rowValue as string);\r\n                        return rDate >= from && rDate <= to;\r\n                    }\r\n                    return v?.text === rowValue\r\n                });\r\n            });\r\n            if(newFilteredItems?.length > 0)\r\n                filteredRows = newFilteredItems;\r\n        }\r\n\r\n        filteredRows = filteredRows.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.Id).indexOf(obj?.Id) === pos);\r\n        setActualRows(filteredRows)\r\n        setIsFilterPanel(false);\r\n        if(!!onItemsFiltered) \r\n            onItemsFiltered(filteredRows);\r\n    }\r\n\r\n    /**Generate the components of each available column and it's unique values */\r\n    static buildFilters(allRows: IRow[], columns: TColumn<any>[], hiddenFields: string[]): IAvailableFilters[] {\r\n        const filters: IAvailableFilters[] = [];\r\n        const columnsToFilter = GridViewFilter.filterFromColumns(hiddenFields, columns);\r\n        for (let index = 0; index < columnsToFilter.length; index++) {\r\n            const col = columnsToFilter[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                if (col?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                    stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConversionOptions?.locales, col?.dateConversionOptions?.formatOptions);\r\n                return {\r\n                    key: idx + \"_\" + col?.key,\r\n                    text: stringObject,\r\n                    data\r\n                };\r\n            });\r\n            const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n            filters.push({\r\n                key: col?.key,\r\n                options: uniqueOptions,\r\n                enableMultiple: true,\r\n                name: col?.name,\r\n                renderAs\r\n            });\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    static filterFromColumns = (hiddenKeys: string[], columns: TColumn<any>[]) => columns.filter(c => (!hiddenKeys?.includes(c?.key)));\r\n\r\n    static onSearchItemChange: SearchItem = ({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered}) => (searchText, keys) => {\r\n        const allFilteredRows: IRow[] = []; \r\n        if(!searchText) {\r\n            setActualRows(allRows);\r\n            return [];\r\n        } \r\n        for (const key of keys) {\r\n            const filterFrom = allFilteredRows?.length > 0 ? allFilteredRows : allRows;\r\n            const filteredValues = filterFrom.filter(item => {\r\n                const foundValues: string = Utils.getNestedObject(item, (key as string)?.split('.'))?.toString();\r\n                return foundValues?.toLowerCase()?.startsWith(searchText?.toLowerCase());\r\n            });\r\n            allFilteredRows.push(...filteredValues);\r\n        }\r\n        searchCb(allFilteredRows);\r\n        if(!!onSearchBoxItemsFiltered)\r\n            onSearchBoxItemsFiltered(allFilteredRows);\r\n        return allFilteredRows;\r\n    }\r\n}","import { Utils } from '../../helpers/Utils';\r\nimport { GroupOrder } from '../../helpers/enums';\r\nimport type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { ApplyGrouping, BuildGroups } from \"../../models/interfaces/IGrouping\";\r\nimport type { IRow } from '../../models/interfaces/IGridView';\r\n\r\nexport class GridViewGrouping {\r\n\r\n    static onApplyGrouping: ApplyGrouping = ({ \r\n        setGroups, setIsGroupPanel, onItemsGrouped, onGroupPanelCancel, groupByFields, startIndex, level, items, emptyGroupLabel, setActualRows, cols\r\n    }) => {\r\n        const selectedKey = groupByFields?.[0]?.name?.split(';')?.[0];\r\n        if (!groupByFields?.[0] || selectedKey === '@NONE') {\r\n            setIsGroupPanel(false);\r\n            if (!!onGroupPanelCancel)\r\n                onGroupPanelCancel('not-selected');\r\n            if (!!onItemsGrouped)\r\n                onItemsGrouped({ selectedKey, setGroups });\r\n            return setGroups(undefined);\r\n        }\r\n        const {groups, updatedItemsOrder} = GridViewGrouping.buildGroups({emptyGroupLabel, groupByFields, items, level, startIndex, cols});\r\n\r\n        setGroups(groups);\r\n        setActualRows(updatedItemsOrder);\r\n        setIsGroupPanel(false);\r\n        if (!!onItemsGrouped)\r\n            onItemsGrouped({ selectedKey, setGroups });\r\n    }\r\n\r\n    /** Original code from: https://github.com/pnp/sp-dev-fx-controls-react/blob/master/src/controls/listView/ListView.tsx \r\n     * \r\n     * This method supports multiple grouping levels and multiple groups, but the GridView component it self does not implement it yet.\r\n    */\r\n    static buildGroups: BuildGroups = ({ emptyGroupLabel, groupByFields, items, level, startIndex, cols }) => {\r\n        const defaultEmptyLabel = emptyGroupLabel ?? 'Sem itens definidos';\r\n\r\n        // Group array which stores the configured grouping\r\n        let groups: IGroup[] = [];\r\n        let updatedItemsOrder: IRow[] = [];\r\n        // Check if there are groupby fields set\r\n        if (groupByFields) {\r\n            const groupField = groupByFields[level];\r\n            const groupKey = groupField?.name?.split(';')[0];\r\n            const keyDateConverterOptions = cols?.find(i => i?.key === groupKey)?.dateConversionOptions;\r\n            const isKeyADate = keyDateConverterOptions?.shouldConvertToLocaleString;\r\n            const groupFieldName = groupField?.name?.split(';')[1];\r\n            // Check if grouping is configured\r\n            if (groupByFields && groupByFields.length > 0) {\r\n                // Create grouped items object\r\n                const groupedItems = {};\r\n                items.forEach(item => {\r\n                    let groupName = Utils.getNestedObject(item, groupKey?.split('.')) as string ?? defaultEmptyLabel;\r\n                    if (isKeyADate)\r\n                        groupName = Utils.convertIsoToLocaleString(groupName, keyDateConverterOptions?.locales, keyDateConverterOptions?.formatOptions);\r\n                    // Check if the group name exists\r\n                    // Check if group name is a number, this can cause sorting issues\r\n                    if (typeof groupName === \"number\") \r\n                        groupName = `${groupName}.`;\r\n                    \r\n                    // Check if current group already exists\r\n                    if (typeof groupedItems[groupName] === \"undefined\") {\r\n                        // Create a new group of items\r\n                        groupedItems[groupName] = [];\r\n                    }\r\n                    groupedItems[groupName].push(item);\r\n                });\r\n\r\n                // Sort the grouped items object by its key\r\n                const sortedGroups = {};\r\n                let groupNames = Object.keys(groupedItems);\r\n                groupNames = groupField.order === GroupOrder.ascending ? groupNames.sort() : groupNames.sort().reverse();\r\n                groupNames.forEach((key: string) => {\r\n                    sortedGroups[key] = groupedItems[key];\r\n                });\r\n\r\n                // Loop over all the groups\r\n                for (const groupItems in sortedGroups) {\r\n                    // Retrieve the total number of items per group\r\n                    const totalItems = groupedItems[groupItems].length;\r\n                    // Create the new group\r\n                    const group: IGroup = {\r\n                        name: groupItems === \"undefined\" ? defaultEmptyLabel : `${groupFieldName}: ${groupItems}`,\r\n                        key: groupItems === \"undefined\" ? defaultEmptyLabel : groupItems,\r\n                        startIndex: startIndex,\r\n                        count: totalItems,\r\n                    };\r\n                    // Check if child grouping available\r\n                    if (groupByFields[level + 1]) {\r\n                        // Get the child groups\r\n                        const subGroup = GridViewGrouping.buildGroups({\r\n                            emptyGroupLabel,\r\n                            items: groupedItems[groupItems], \r\n                            groupByFields,\r\n                            startIndex,\r\n                            level: level + 1,\r\n                            cols\r\n                        });\r\n                        subGroup?.updatedItemsOrder?.forEach((item) => {\r\n                            updatedItemsOrder.push(item);\r\n                        });\r\n                        group.children = subGroup.groups;\r\n                    } else {\r\n                        // Add the items to the updated items order array\r\n                        groupedItems[groupItems].forEach((item) => {\r\n                            updatedItemsOrder.push(item);\r\n                        });\r\n                    }\r\n                    // Increase the start index for the next group\r\n                    startIndex = startIndex + totalItems;\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            updatedItemsOrder,\r\n            groups\r\n        };\r\n    }\r\n}\r\n\r\n","import { FilterOption, SelectedItemsMap } from \"../../models/interfaces/IPanelFilter\";\r\n\r\n/**Internal class to be used when using map data operations on the GridView component context as a whole. */\r\nexport class GridViewMapper {\r\n\r\n    /**\r\n     * Creates a new map collection with the first level keys being the real keys, and the values being the maps with selected maps (with key and values) \r\n     * @example \r\n     * ```ts\r\n     * const selectedItemsMap = new Map([['0_User.Title', data], ['1_User.Title', data]]);\r\n     * const groupedMap = GridViewMapper.groupMaps(selectedItemsMap);\r\n     * //It'll be: key: 'User.Title', value: [Map([['0_User.Title', data], ['1_User.Title', data]])]\r\n     * ```\r\n     **/\r\n    static groupMaps(selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            let keyName = key.split('_')[1];\r\n            if(!keyName && !key.includes('_'))\r\n                keyName = key;\r\n            const doesNotHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesNotHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    static mapFilterOptions = (options: FilterOption[]) => {\r\n        return options\r\n        .filter(i => (i?.text !== null && i?.text !== undefined))\r\n        .map<FilterOption>(({ key, text, data }) => ({\r\n            key,\r\n            text,\r\n            data\r\n        }));\r\n    }\r\n}","import * as React from 'react';\r\nimport { useEffect, Dispatch, SetStateAction, useMemo, lazy } from 'react';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport { IRow } from '../../models/interfaces/IGridView';\r\nimport { ICardProps, IGridCardProps } from '../../models/interfaces/ICardProps';\r\n\r\ninterface IGridCardHandler {\r\n    renderAs: 'card' | 'list';\r\n    enableGrouping: boolean;\r\n    shouldRenderCard: boolean;\r\n    actualRows: IRow[];\r\n    cardProps: IGridCardProps;\r\n    setShouldRenderCard: Dispatch<SetStateAction<boolean>>;\r\n    setEnableGrouping: Dispatch<SetStateAction<boolean>>;\r\n    onRenderCustomComponent: (item: IRow) => React.ReactNode;\r\n    onItemClick: (item: IRow) => void;\r\n}\r\nexport function useGridCardRendering({\r\n    renderAs, \r\n    setEnableGrouping, \r\n    setShouldRenderCard, \r\n    enableGrouping,\r\n    actualRows, \r\n    shouldRenderCard, \r\n    cardProps, \r\n    onRenderCustomComponent,\r\n    onItemClick\r\n}: IGridCardHandler) {\r\n    useEffect(() => {\r\n        if (renderAs === 'card') {\r\n            setShouldRenderCard(true);\r\n            if (!cardProps || Object?.keys(cardProps)?.length === 0)\r\n                console.error(\"[GridView] - You are using `renderAs: card`, but you are not passing cardProps. This will not work.\");\r\n            return setEnableGrouping(false);\r\n        }\r\n        setShouldRenderCard(false);\r\n        if (enableGrouping)\r\n            setEnableGrouping(true);\r\n    }, [renderAs]);\r\n\r\n    const Card = useMemo(() => {\r\n        if (!shouldRenderCard) return null;\r\n        return lazy(() => import('../../Card/Card').then((module) => ({ default: module?.Card })));\r\n    }, [shouldRenderCard]);\r\n\r\n    const CardsList = useMemo(() => {\r\n        if (!Card || renderAs === 'list') return null;\r\n        \r\n        return actualRows?.map(row => {\r\n            if (!!onRenderCustomComponent)\r\n                return onRenderCustomComponent(row);\r\n            let cardTitle: string = Utils.getNestedObject(row, cardProps?.cardTitleKey?.split('.')) || '';\r\n            let cardSubtitle: string = Utils.getNestedObject(row, cardProps?.cardSubtitleKey?.split('.')) || '';\r\n            if (cardProps?.titleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardTitle = Utils.convertIsoToLocaleString(cardTitle, cardProps?.titleDateConversionOptions?.locales, cardProps?.titleDateConversionOptions?.formatOptions);\r\n            if (cardProps?.subtitleDateConversionOptions?.shouldConvertToLocaleString)\r\n                cardSubtitle = Utils.convertIsoToLocaleString(cardSubtitle, cardProps?.subtitleDateConversionOptions?.locales, cardProps?.subtitleDateConversionOptions?.formatOptions);\r\n            const rightCol = cardProps?.rightColumn;\r\n            const cIndicator = cardProps?.circleIndicator;\r\n            let titleValue = Utils.getNestedObject(row, cIndicator?.title?.split('.') as any) as string;\r\n            if (cIndicator?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                titleValue = Utils.convertIsoToLocaleString(titleValue, cIndicator?.dateConversionOptions?.locales, cIndicator?.dateConversionOptions?.formatOptions);\r\n            const circleIndicator = {\r\n                ...cIndicator,\r\n                title: titleValue\r\n            };\r\n            const newCardProps: ICardProps = {\r\n                ...cardProps,\r\n                cardTitle,\r\n                cardSubtitle,\r\n                cardRightColInformation: rightCol?.keys && {\r\n                    ...rightCol,\r\n                    values: rightCol?.keys?.map(opt => {\r\n                        let title: string = Utils.getNestedObject(row, opt?.title?.split('.') as any);\r\n                        if (opt?.dateConversionOptions?.shouldConvertToLocaleString)\r\n                            title = Utils.convertIsoToLocaleString(title, opt?.dateConversionOptions?.locales, opt?.dateConversionOptions?.formatOptions);\r\n                        return ({ title, style: opt?.style ?? { fontSize: 16, marginBottom: 4, fontWeight: 600 } });\r\n                    })\r\n                },\r\n                circleIndicator,\r\n                onClickDownButton: e => {\r\n                    onItemClick(row);\r\n                    if (cardProps?.onCardClick)\r\n                        cardProps?.onCardClick(e);\r\n                }\r\n            }\r\n            return (<Card key={row?.Id} {...newCardProps} />);\r\n        })\r\n    }, [Card, cardProps, actualRows, renderAs, onRenderCustomComponent]);\r\n\r\n    return CardsList;\r\n}","import * as React from 'react';\r\nimport {useRefWithCallback} from '../../hooks/useRefWithCallback';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { useGridCardRendering } from './useGridCardRendering';\r\nimport {GridViewFilter} from '../handlers/GridViewFilter';\r\nimport {GridViewGrouping} from '../handlers/GridViewGrouping';\r\nimport {GridViewMapper} from '../handlers/GridViewMapper';\r\nimport { IconClickCaller, GroupOrder } from '../../helpers/enums';\r\nimport type { IGridListProps, IRow, TColumn, BaseType } from '../../models/interfaces/IGridView';\r\nimport type { IListOptionsProps } from '../../models/interfaces/IListOptions';\r\nimport type { IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../../models/interfaces/IPanelFilter';\r\nimport type { IGroupPanel } from '../../models/interfaces/IGroupPanel';\r\nimport type { IGroup } from '@fluentui/react/lib/DetailsList';\r\nimport type { KeyAndName } from '../../models/types/Common';\r\n\r\n/** TO-DO: Use `useReducer` with context for better code splitting. */\r\nexport function useGridController<T extends BaseType>(props: IGridListProps<T>) {\r\n    const [renderAs, setRenderAs] = useState<typeof props.renderAs>(props?.renderAs || 'list');\r\n    const [shouldRenderCard, setShouldRenderCard] = useState(props?.renderAs === 'card');\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [groups, setGroups] = useState<IGroup[]>(undefined);\r\n    const [enableGrouping, setEnableGrouping] = useState(props?.headerOptions?.enableGrouping ?? false);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [selectedGroupKeys, setSelectedGroupKeys] = useState<KeyAndName>(null);\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState<IRow<T>[]>(props?.rows ?? []);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n    const [isGroupPanelOpen, setIsGroupPanel] = useState(false);\r\n    const [dateValue, setFilterDate] = useState<Map<string, {fromDate: Date, toDate: Date}>>(null);\r\n    const [searchCb, currentSearchBoxItems] = useRefWithCallback<IRow[]>([]);\r\n    const [memoizedAvailableFilter, setAvailableFilters] = useState<IAvailableFilters[]>([]);\r\n\r\n    const visibleCols = useMemo(() => cols?.filter(c => !c?.hideColumn), [cols]);\r\n    useEffect(() => { setRenderAs(props?.renderAs); }, [props?.renderAs]);\r\n\r\n    const onItemClick = (item: IRow<T>) => !!props?.onItemClick && props?.onItemClick(item);\r\n    const onColumnClick = (currentRows: IRow<T>[]) => (_: any, column: TColumn<T>): void => {\r\n        if(!column) return;\r\n        let isSortedDescending = column?.isSortedDescending;\r\n        if (column?.isSorted) \r\n          isSortedDescending = !isSortedDescending;\r\n    \r\n        const sortedItems = Utils.copyAndSort(currentRows, column?.key, isSortedDescending);\r\n        setActualRows(sortedItems);\r\n        setCols(c => c.map(col => {\r\n            col.isSorted = col.key === column?.key;\r\n            if (col?.isSorted) \r\n              col.isSortedDescending = isSortedDescending;\r\n            return col;\r\n        }));\r\n    }\r\n\r\n    const CardsList = useGridCardRendering({\r\n        renderAs,\r\n        actualRows,\r\n        onItemClick,\r\n        cardProps: props?.cardProps,\r\n        enableGrouping: props?.headerOptions?.enableGrouping,\r\n        onRenderCustomComponent: props?.onRenderCustomComponent,\r\n        setEnableGrouping,\r\n        setShouldRenderCard,\r\n        shouldRenderCard\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(!props?.columns?.length) return;\r\n        const columns = props?.columns;\r\n        const convertedColumns = columns.map(c => {\r\n            if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                c.onRender = (item, _2) => {\r\n                    const fieldValue: string = Utils.getNestedObject(item, c?.fieldName?.split('.'));\r\n                    return <span>{fieldValue}</span>;\r\n                }\r\n                return c;\r\n            } else if (c?.dateConversionOptions?.shouldConvertToLocaleString) {\r\n                c.onRender = (item, _2) => {\r\n                    const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConversionOptions?.locales, c?.dateConversionOptions?.formatOptions);\r\n                    return <span>{fieldValue}</span>;\r\n                }\r\n            }\r\n            return c;\r\n        });\r\n        setCols(convertedColumns);\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        if(!props?.initialGroupedBy?.key) return;\r\n        const fieldName: KeyAndName = `${props?.initialGroupedBy?.key};${props?.initialGroupedBy?.name}`;\r\n        GridViewGrouping.onApplyGrouping({\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n            onItemsGrouped: props?.onItemsGrouped,\r\n            onGroupPanelCancel: props?.onGroupPanelCancel,\r\n            items: actualRows,\r\n            groupByFields: [{name: fieldName, order: GroupOrder.ascending}],\r\n            setActualRows,\r\n            level: 0,\r\n            startIndex: 0,\r\n            cols\r\n        });\r\n    }, [props?.initialGroupedBy]);\r\n\r\n    useEffect(() => { setActualRows(props?.rows); setAllRows(props?.rows) }, [props?.rows]);\r\n    useEffect(() => {\r\n        setCols(columns => [...columns.map(c => ({...c, onColumnClick: onColumnClick(actualRows)}))]);\r\n    }, [actualRows?.length]);\r\n\r\n    useEffect(() => {\r\n        setAvailableFilters([...GridViewFilter.buildFilters(allRows, cols, props?.hiddenFilterKeys as string[])]);   \r\n    }, [allRows?.length, cols?.length, props?.hiddenGroupKeys?.length]);\r\n\r\n    const filterOptionsMatrix = useMemo(() => memoizedAvailableFilter.map(f => GridViewMapper.mapFilterOptions(f?.options)), [memoizedAvailableFilter]);\r\n\r\n    const filterPanelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: GridViewFilter.onApplyFilter({\r\n            allRows, \r\n            setActualRows, \r\n            setIsFilterPanel, \r\n            applyCustomFilter: props?.applyCustomFilter, \r\n            onItemsFiltered: props?.onItemsFiltered,\r\n            onFilterPanelCancel: props?.onFilterPanelCancel\r\n        }),\r\n        onCancel: () => { \r\n            setIsFilterPanel(false);\r\n            if(props?.onFilterPanelCancel) \r\n                props?.onFilterPanelCancel('cancel');\r\n        },\r\n        onClose: () =>  { \r\n            setIsFilterPanel(false); \r\n            if(props?.onFilterPanelCancel)\r\n                props?.onFilterPanelCancel('dismiss');\r\n        },\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues,\r\n        dateValue, setFilterDate,\r\n        filterOptionsMatrix,\r\n        availableFilters: memoizedAvailableFilter,\r\n        top: props?.panelChildren?.filter?.top,\r\n        footer: props?.panelChildren?.filter?.footer\r\n    }\r\n\r\n    const groupPanelConfig: IGroupPanel = {\r\n        isOpen: isGroupPanelOpen,\r\n        onCancel: () => { \r\n            setIsGroupPanel(false);\r\n            if(props?.onGroupPanelCancel)\r\n                props?.onGroupPanelCancel('cancel');\r\n        },\r\n        onClose: () =>  { \r\n            setIsGroupPanel(false); \r\n            if(props?.onGroupPanelCancel)\r\n                props?.onGroupPanelCancel('dismiss');\r\n        },\r\n        onOpen: () => { setIsGroupPanel(true); },\r\n        panelTitle: props?.groupPanelTitle ?? 'Agrupar',\r\n        setSelectedGroupKeys,\r\n        selectedGroupKeys,\r\n        options: GridViewFilter.filterFromColumns(props?.hiddenGroupKeys as string[], cols)?.map(c => ({key: c?.key, text: c?.name})) ?? [],\r\n        onApply: (selectedKeys: KeyAndName) => GridViewGrouping.onApplyGrouping({\r\n            emptyGroupLabel: props?.emptyGroupLabel,\r\n            setIsGroupPanel,\r\n            setGroups,\r\n            onItemsGrouped: props?.onItemsGrouped,\r\n            onGroupPanelCancel: props?.onGroupPanelCancel,\r\n            items: actualRows,\r\n            setActualRows,\r\n            groupByFields: [{name: selectedKeys, order: GroupOrder.ascending}],\r\n            level: 0,\r\n            startIndex: 0,\r\n            cols\r\n        }),\r\n        top: props?.panelChildren?.group?.top,\r\n        footer: props?.panelChildren?.group?.footer\r\n    }\r\n\r\n    const listConfig: IListOptionsProps<any> = {\r\n        ...props?.headerOptions,\r\n        onSearchItemChange: GridViewFilter.onSearchItemChange({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered: props?.onSearchBoxItemsFiltered}),\r\n        setRenderAs: () => renderAs === 'card' ? setRenderAs('list') : setRenderAs('card'),\r\n        setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n        setIsGroupPanelOpen: (value) => { setIsGroupPanel(value); },\r\n        enableSearch: props?.headerOptions?.enableSearch ?? true,\r\n        enableFilter: props?.headerOptions?.enableFilter ?? true,\r\n        enableCardView: props?.headerOptions?.enableCardView ?? false,\r\n        enableGrouping,\r\n        onClickSearchIcon: (callerType, text, key) => {\r\n            if(callerType === IconClickCaller.CLICK)\r\n                return setActualRows(currentSearchBoxItems?.current as IRow<T>[]);\r\n            if(callerType === IconClickCaller.ENTER) {\r\n                if(!text)\r\n                    return setActualRows(allRows);\r\n                const filteredItems = GridViewFilter.onSearchItemChange({allRows, searchCb, setActualRows, onSearchBoxItemsFiltered: props?.onSearchBoxItemsFiltered})(text, key);\r\n                searchCb(filteredItems);\r\n                setActualRows(filteredItems as IRow<T>[]);\r\n            }\r\n        },\r\n        onFilterIconClick: props?.onFilterIconClick,\r\n        onGroupIconClick: props?.onGroupIconClick,\r\n        onSearchBoxClick: props?.onSearchBoxClick,\r\n        cardButtonProps: props?.headerOptions?.cardButtonProps,\r\n        filterButtonProps: props?.headerOptions?.filterButtonProps,\r\n        groupButtonProps: props?.headerOptions?.groupButtonProps,\r\n        searchBoxProps: props?.headerOptions?.searchBoxProps,\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            visibleCols,\r\n            filterPanelConfig,\r\n            groupPanelConfig,\r\n            isFilterPanelOpen,\r\n            isGroupPanelOpen,\r\n            listConfig,\r\n            shouldRenderCard,\r\n            groups\r\n        },\r\n        handlers: { onItemClick },\r\n        JSX: { CardsList }\r\n    }\r\n}","import { lazy, useContext, useMemo, useRef, useEffect } from 'react';\r\nimport { FilterPanelContext } from '../Contexts';\r\nimport { RangeType } from '../../helpers/enums';\r\nimport type { FilterOption } from '../../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\nimport type { IPersonaProps } from '@fluentui/react/lib/Persona';\r\n\r\nexport function usePanelFilterController() {\r\n    const { isOpen, onClose, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen, filterOptionsMatrix, availableFilters, top, footer, setFilterDate } = useContext(FilterPanelContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker, Label] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        const Label = lazy(() => import('@fluentui/react/lib/Label').then(({ Label }) => ({ default: Label })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker, Label];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if (!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string);\r\n        }\r\n        else if(option.selected && copyMap.has(option?.key as string) && option?.isDateComponent) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if (onOpen) onOpen(); }, []);\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0)\r\n            return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if (keyKind === keyToFilter)\r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    const getDefaultSelectedSlider = (keyToFilter: string): RangeType => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.find(([key]) => key === keyToFilter);\r\n        const mapWithSameKeyValue = mapWithSameKey?.[1]?.data;\r\n        if(mapWithSameKeyValue) \r\n            return mapWithSameKeyValue?.type;\r\n        return RangeType.NONE;\r\n    }\r\n\r\n    const getDefaultSelectedPeople = (keyToFilter: string): IPersonaProps[] => {\r\n        const mapWithSameKey = [...actualFilteredValues]?.filter(([key]) => {\r\n            const keyKind = key?.split('_')[1];\r\n            return keyKind === keyToFilter\r\n        });\r\n        if(mapWithSameKey?.length > 0) {\r\n            const people = mapWithSameKey?.map(([_, value]) => value as IPersonaProps);\r\n            return people;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const onChangeTags = (options: FilterOption[]) => (tags: ITag[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(tags.length === 0) {\r\n            options.forEach(opt => {\r\n                if(copyMap.has(opt?.key as string))\r\n                    copyMap.delete(opt?.key as string);\r\n            });\r\n        } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n            copyMap.delete(lastAddedTag?.current?.key as string);\r\n            lastAddedTag.current = null; \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    const onTagSelected = (key: string) =>(selectedItem: ITag) => {\r\n        onAddOrRemoveToMap(key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n        lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n        return selectedItem;\r\n    }\r\n\r\n    const onResolveTagSuggestion = (options: FilterOption[]) => (currentFilter: string, tagList: ITag[], ) => {\r\n        const result = currentFilter\r\n        ? options.filter(opt => \r\n            opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n            && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n        return result;\r\n    }\r\n\r\n    const onRecordDateChange = (key: string) => (from: Date, to: Date, type: RangeType) => {\r\n        if((from || to) && type !== RangeType.NONE)\r\n            onAddOrRemoveToMap(key, {\r\n                key: key,\r\n                text: `${from?.toISOString()} - ${to?.toISOString()}`,\r\n                data: { from, to, type },\r\n                selected: true,\r\n                isDateComponent: true,\r\n                name: `${from?.toISOString()} - ${to?.toISOString()}`\r\n            } as unknown as FilterOption);\r\n        else {\r\n            const copyMap = new Map(actualFilteredValues);\r\n            copyMap.delete(key);\r\n            setFilterDate(p => {\r\n                p.delete(key);\r\n                return p;\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        }\r\n    }\r\n\r\n    const onChangePeople = (key: string) => (items: IPersonaProps[]) => {\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(items.length === 0) {\r\n            actualFilteredValues?.forEach((_, k) => {\r\n                if(k?.split('_')?.[1] === key)\r\n                    copyMap.delete(k);\r\n            });\r\n            setActualFilteredValues(copyMap);\r\n        } \r\n        else {\r\n            items.forEach(i => {\r\n                onAddOrRemoveToMap(key, {\r\n                    key: i?.key,\r\n                    text: i?.text,\r\n                    data: i?.['data'],\r\n                    selected: true,\r\n                    isDateComponent: false,\r\n                    name: i?.text\r\n                } as unknown as FilterOption);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            isOpen,\r\n            actualFilteredValues,\r\n            panelTitle,\r\n            filterOptionsMatrix,\r\n            availableFilters\r\n        },\r\n        handlers: {\r\n            getDefaultDropdownSelectedKeys,\r\n            getDefaultSelectedTag,\r\n            getDefaultSelectedSlider,\r\n            getDefaultSelectedPeople,\r\n            onAddOrRemoveToMap,\r\n            onClose,\r\n            onCancel,\r\n            onApply,\r\n            onOpen,\r\n            setActualFilteredValues,\r\n            onChangeTags,\r\n            onTagSelected,\r\n            onResolveTagSuggestion,\r\n            onRecordDateChange,\r\n            onChangePeople\r\n        },\r\n        JSX: {\r\n            FluentPanel,\r\n            Dropdown,\r\n            PrimaryButton,\r\n            DefaultButton,\r\n            TagPicker,\r\n            Label,\r\n            top, footer\r\n        }\r\n    }\r\n}","export {GridView} from './GridView';","\r\nexport class Utils {\r\n\r\n    /**Tries to convert an ISO `string` to the locale format. */\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    /**\r\n     * @TO-DO: Add documentation\r\n     */\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        return items.slice(0).sort((a: T, b: T) => {\r\n            const aValue = Utils.getNestedObject(a, columnKey?.split('.'));\r\n            const bValue = Utils.getNestedObject(b, columnKey?.split('.'));\r\n            return ((isSortedDescending ? aValue < bValue : aValue > bValue) ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**Get a value from a deep nested object.\r\n     * \r\n     * @param obj The object to search in.\r\n     * @param path The path to the value, as an array of keys, separated by dots.\r\n     * @returns The value, if found.\r\n     * \r\n     * Theoretically, this function can be used to get the value from an `number[]` as the type of the `pathArr`, but I've not tested it.\r\n     */\r\n    public static getNestedObject<Path, ReturnV extends any, Obj extends Record<any, any>>(nestedObj: Obj, pathArr: Path[]): ReturnV {\r\n        return pathArr?.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj) as ReturnV;\r\n    }\r\n\r\n    /**@TO-DO: Add documentation */\r\n    public static getDeepKeys(obj: Record<any, any>): string[] {\r\n        let keys: string[] = [];\r\n        for(let key in obj) {\r\n            keys.push(key);\r\n            if(typeof obj[key] === \"object\") {\r\n                let subKeys = Utils.getDeepKeys(obj[key]);\r\n                keys = keys.concat(subKeys?.map(subkey => {\r\n                    return key + \".\" + subkey;\r\n                }));\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n}","\r\nexport enum RangeType {\r\n    NONE,\r\n    WEEK,\r\n    MONTH,\r\n    YEAR,\r\n    CUSTOM\r\n}\r\n\r\nexport enum IconClickCaller {\r\n    CLICK,\r\n    ENTER\r\n}\r\n\r\nexport enum GroupOrder {\r\n    ascending = 1,\r\n    descending\r\n}","import { RefObject, useCallback, useRef, useState } from \"react\";\r\n\r\n/**\r\n * This hook can be used when using ref inside useCallbacks\r\n * \r\n * Usage\r\n * ```tsx\r\n * const [refCallback, ref, toggle] = useRefWithCallback<HTMLSpanElement>();\r\n * const onClick = useCallback(() => {\r\n    if (ref.current) \r\n      ref.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [toggle]);\r\n\r\n  //Change the value of the ref with refCallback(value);\r\n\r\n  return (<span ref={refCallback} />);\r\n  ```\r\n * @returns \r\n */\r\nexport function useRefWithCallback<T>(initialValue: T): [\r\n    (value: T) => void,\r\n    RefObject<T>,\r\n    boolean\r\n] {\r\n    const ref = useRef<T | null>(initialValue);\r\n    const [toggleState, setToggle] = useState(false);\r\n    const refCallback = useCallback((value: T) => {\r\n        ref.current = value;\r\n        setToggle(val => !val);\r\n    }, []);\r\n\r\n    return [refCallback, ref, toggleState];\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/ChoiceGroup\");","module.exports = require(\"@fluentui/react/lib/DatePicker\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Label\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Slider\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"react\");"],"sourceRoot":""}