import './style.css';
import c, { createContext as B, useContext as j, forwardRef as M, useState as T, useRef as k, useMemo as F, useCallback as z, useLayoutEffect as D, useEffect as w, useImperativeHandle as G } from "react";
import { $ as W, aE as R, aA as q, ao as J } from "./IconButton.c64bd954.mjs";
import "react-dom";
const O = B({ calloutIdx: null, setCallout: void 0, alwaysShowCallout: !1, showCalloutOnlyOnActive: !1 }), K = ({ styles: e, ...o }) => {
  const { calloutIdx: S, setCallout: _, alwaysShowCallout: C, showCalloutOnlyOnActive: v } = j(O), y = `${e.tile} ${e[`${o.position}`]} ${o.completed ? e.completed : ""} ${o.active ? e.active : ""} indicator-${o == null ? void 0 : o.currentIdx}`;
  return /* @__PURE__ */ c.createElement("div", {
    className: y,
    style: { order: o.currentIdx, display: o != null && o.hidden ? "none" : "flex" }
  }, o.completed ? /* @__PURE__ */ c.createElement("span", {
    className: e.stageIndicator
  }, /* @__PURE__ */ c.createElement(W, {
    styles: { root: { width: "100%" } },
    iconName: "CheckMark"
  })) : /* @__PURE__ */ c.createElement("span", {
    className: e.stageIndicator
  }), /* @__PURE__ */ c.createElement("div", {
    className: e.titleArea,
    onClick: (b) => {
      const { onStageClick: h, position: m, currentIdx: n, ...f } = o;
      C && _({ isVisible: !0, calloutIdx: n }), v && (f == null ? void 0 : f.active) && _({ isVisible: !0, calloutIdx: n }), h && ((f == null ? void 0 : f.showCallout) && (!S || S !== n) && _({ isVisible: !0, calloutIdx: n }), h(f, n, _, b));
    }
  }, /* @__PURE__ */ c.createElement("span", {
    className: e.tileTitle,
    style: o.overflowStageText ? { textOverflow: "ellipsis", width: 100, overflow: "hidden" } : {}
  }, o.label)));
}, Q = K, U = "_lifecycle_fyd1t_1", X = "_projectLifecycle_fyd1t_18", Y = "_columnTitle_fyd1t_30", Z = "_columnSubTitle_fyd1t_33", p = "_lifecycleContainer_fyd1t_37", ee = "_btnLifecycleScroll_fyd1t_45", te = "_scrollLeft_fyd1t_58", le = "_scrollRight_fyd1t_62", ce = "_lifecycleTrackContainer_fyd1t_66", ne = "_lifecycleTrack_fyd1t_66", ie = "_tile_fyd1t_82", ae = "_start_fyd1t_95", de = "_middle_fyd1t_104", oe = "_end_fyd1t_122", fe = "_active_fyd1t_131", ue = "_tileTitle_fyd1t_131", re = "_stageIndicator_fyd1t_134", se = "_completed_fyd1t_147", ye = "_titleArea_fyd1t_195", u = {
  lifecycle: U,
  projectLifecycle: X,
  columnTitle: Y,
  columnSubTitle: Z,
  lifecycleContainer: p,
  btnLifecycleScroll: ee,
  scrollLeft: te,
  scrollRight: le,
  lifecycleTrackContainer: ce,
  lifecycleTrack: ne,
  tile: ie,
  start: ae,
  middle: de,
  end: oe,
  active: fe,
  tileTitle: ue,
  stageIndicator: re,
  completed: se,
  titleArea: ye
};
function he(e, o) {
  var P, V, $;
  const [{ isVisible: S, calloutIdx: _ }, C] = T({ isVisible: !1, calloutIdx: null }), v = k(null), y = k(null), b = k(!1), [h, m] = T(1), [n, f] = T(e == null ? void 0 : e.stages.map((t) => ({ ...t, hidden: !0 }))), L = F(() => {
    const t = {
      root: { color: "white", width: 24 },
      rootHovered: { backgroundColor: e == null ? void 0 : e.buttonColor, color: "white" },
      rootFocused: { outline: "none", color: "white" },
      rootPressed: { background: e.buttonColor, color: "white" }
    };
    return {
      left: { ...t, ...e == null ? void 0 : e.leftScrollButtonStyles },
      right: { ...t, ...e == null ? void 0 : e.rightScrollButtonStyles }
    };
  }, [e == null ? void 0 : e.leftScrollButtonStyles, e == null ? void 0 : e.rightScrollButtonStyles]), N = () => {
    var l;
    const t = document.documentElement;
    t == null || t.style.setProperty("--lifecycle-color", e.indicatorColor), t == null || t.style.setProperty("--lifecycle-button-color", e.buttonColor), t == null || t.style.setProperty("--lifecycle-left-col-color", (l = e == null ? void 0 : e.leftColumnColor) != null ? l : e.indicatorColor), h ? t == null || t.style.setProperty("--lifecycle-grid-row-number", h.toString()) : t == null || t.style.setProperty("--lifecycle-grid-row-number", "3");
  }, I = () => {
    var l;
    const t = (l = y == null ? void 0 : y.current) == null ? void 0 : l.clientWidth;
    if (t >= 1200)
      return (e == null ? void 0 : e.stages.length) >= 4 ? m(4) : m(e == null ? void 0 : e.stages.length);
    if (t <= 992 && t > 768)
      return (e == null ? void 0 : e.stages.length) >= 3 ? m(3) : m(e == null ? void 0 : e.stages.length);
    if (t <= 768 && t > 520)
      return (e == null ? void 0 : e.stages.length) >= 2 ? m(2) : m(e == null ? void 0 : e.stages.length);
    t <= 411 ? m(1) : m(3);
  }, x = (t) => {
    if (!!v.current) {
      if (t === "right") {
        const l = [];
        for (let i = 0; i < n.length; i++)
          n[i].hidden || l.push(i);
        const r = l[l.length - 1], g = l[0];
        if (r === n.length - 1)
          return;
        f((i) => i.map((a, d) => d < g ? { ...a, hidden: !0 } : d === g ? { ...a, hidden: !0 } : d === r + 1 ? { ...a, hidden: !1 } : a));
      }
      if (t === "left") {
        const l = [];
        for (let i = 0; i < n.length; i++)
          n[i].hidden || l.push(i);
        const r = l[l.length - 1], g = l[0];
        if (g === 0)
          return;
        f((i) => i.map((a, d) => d > r ? { ...a, hidden: !0 } : d === r ? { ...a, hidden: !0 } : d === g - 1 ? { ...a, hidden: !1 } : a));
      }
    }
  }, H = z((t) => t === 0 ? "start" : t === n.length - 1 ? "end" : "middle", [n]), E = (t, l, r, g) => (i) => {
    const a = i.findIndex((d) => d.active);
    return a === -1 ? i.map((d, s) => ({ ...d, hidden: s < i.length - t })) : a === 0 ? i.map((d, s) => ({ ...d, hidden: s > l })) : a === n.length - 1 ? i.map((d, s) => ({ ...d, hidden: s < n.length - r })) : i.map((d, s) => {
      const A = g >= 0 ? s < a - 1 || s > a + g : s < a - 1 || s > a;
      return { ...d, hidden: A };
    });
  };
  return D(() => {
    N(), I();
  }, []), w(() => {
    const t = e.stages.map((l, r) => ({ ...l, hidden: n[r].hidden }));
    f(t);
  }, [e.stages]), w(() => I(), [(P = y == null ? void 0 : y.current) == null ? void 0 : P.clientWidth, n.length]), w(() => {
    switch (h === 1 ? b.current = !0 : b.current = !1, h) {
      case 1:
        f((t) => t.map((l, r) => ({ ...l, hidden: r !== 0 })));
        break;
      case 4: {
        f(E(4, 3, 4, 2));
        break;
      }
      case 3: {
        f(E(3, 2, 3, 1));
        break;
      }
      case 2: {
        f(E(2, 1, 2));
        break;
      }
    }
  }, [h]), w(() => N(), [h, e == null ? void 0 : e.indicatorColor, e == null ? void 0 : e.leftColumnColor]), G(o, () => ({ setCallout: C }), []), w(() => (window.addEventListener("resize", I), () => {
    window.removeEventListener("resize", I);
  }), []), /* @__PURE__ */ c.createElement(c.Fragment, null, /* @__PURE__ */ c.createElement("div", {
    ref: y,
    className: u.lifecycle
  }, /* @__PURE__ */ c.createElement("div", {
    className: u.projectLifecycle
  }, /* @__PURE__ */ c.createElement("span", {
    className: u.columnTitle
  }, e.leftColumnTitle), /* @__PURE__ */ c.createElement("span", {
    className: u.columnSubTitle
  }, e.leftColumnSubtitle)), /* @__PURE__ */ c.createElement("div", {
    className: u.lifecycleContainer
  }, /* @__PURE__ */ c.createElement("div", {
    className: `${u.btnLifecycleScroll} ${u.scrollLeft}`,
    onClick: () => x("left")
  }, /* @__PURE__ */ c.createElement(R, {
    styles: L.left,
    iconProps: { iconName: "ChevronLeftMed" }
  })), /* @__PURE__ */ c.createElement("div", {
    className: u.lifecycleTrackContainer
  }, /* @__PURE__ */ c.createElement("div", {
    ref: v,
    className: u.lifecycleTrack
  }, /* @__PURE__ */ c.createElement(O.Provider, {
    value: {
      calloutIdx: _,
      setCallout: C,
      alwaysShowCallout: e == null ? void 0 : e.alwaysShowCallout,
      showCalloutOnlyOnActive: e == null ? void 0 : e.showCalloutOnlyOnActive
    }
  }, n == null ? void 0 : n.map((t, l) => /* @__PURE__ */ c.createElement(Q, {
    hidden: t == null ? void 0 : t.hidden,
    styles: u,
    key: (t == null ? void 0 : t.label) + l,
    label: t.label,
    overflowStageText: b.current,
    currentIdx: l,
    data: t == null ? void 0 : t.data,
    showCallout: t == null ? void 0 : t.showCallout,
    active: t.active,
    completed: t == null ? void 0 : t.completed,
    position: H(l),
    onStageClick: e.onStageClick
  }))))), /* @__PURE__ */ c.createElement("div", {
    className: `${u.btnLifecycleScroll} ${u.scrollRight}`,
    onClick: () => x("right")
  }, /* @__PURE__ */ c.createElement(R, {
    styles: L.right,
    iconProps: { iconName: "ChevronRightMed" }
  })))), S && /* @__PURE__ */ c.createElement(q, {
    role: "dialog",
    target: `.indicator-${_}`,
    setInitialFocus: !0,
    directionalHint: ($ = (V = e == null ? void 0 : e.calloutProps) == null ? void 0 : V.directionalHint) != null ? $ : J.bottomAutoEdge,
    onDismiss: () => C({ isVisible: !1, calloutIdx: null }),
    ...e == null ? void 0 : e.calloutProps
  }, e == null ? void 0 : e.calloutContent));
}
const Ce = M(he);
export {
  Ce as LifecycleProgress
};
