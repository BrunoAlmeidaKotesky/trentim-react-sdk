import { useState as p, useEffect as f, useRef as m, useLayoutEffect as h, useCallback as g } from "react";
function E() {
  const [t, r] = p({
    width: void 0,
    height: void 0
  });
  return f(() => {
    function e() {
      r({
        width: window.innerWidth,
        height: window.innerHeight
      });
    }
    return window.addEventListener("resize", e), window.addEventListener("load", e), e(), () => {
      window.removeEventListener("resize", e), window.removeEventListener("load", e);
    };
  }, []), t;
}
function D(t, r) {
  const [e, i] = p(t);
  return f(
    () => {
      const d = setTimeout(() => {
        i(t);
      }, r);
      return () => {
        clearTimeout(d);
      };
    },
    [t]
  ), e;
}
function C(t, r) {
  const e = m(), i = m();
  return f(() => {
    e.current = t;
  }), f(() => {
    function d(c) {
      var a;
      (i == null ? void 0 : i.current) && (e == null ? void 0 : e.current) && !((a = i == null ? void 0 : i.current) != null && a.contains(c == null ? void 0 : c.target)) && (r && r(c) || e.current(c));
    }
    return document.addEventListener("click", d), () => document.removeEventListener("click", d);
  }, []), i;
}
function y(t) {
  const r = m();
  return f(() => {
    r.current = t;
  }, [t]), r.current;
}
const z = (t, r = !1, e) => {
  const [i, d] = p(void 0), { width: c } = E();
  return h(() => {
    const { current: l } = t, { clientWidth: o, scrollWidth: s, clientHeight: n, scrollHeight: u } = l;
    l && (() => {
      const w = r ? u > n : s > o;
      d(w), e && e(w);
    })();
  }, [t, e, r, c]), i;
}, F = () => {
  const t = m(null), [r, e] = p(!1), i = g(({ multiple: o, accept: s }) => {
    const n = document.createElement("input");
    return n.type = "file", n.accept = s, n.style.display = "none", n.multiple = o, n;
  }, []), d = (o, s) => {
    var u;
    const n = Array.from((u = o == null ? void 0 : o.target) == null ? void 0 : u.files);
    s(n), o.target.value = null, o.target.remove();
  }, c = g((o, s = ["*"]) => {
    const n = i({ multiple: !0, accept: s == null ? void 0 : s.join(",") });
    n.addEventListener("change", (u) => d(u, o)), n.click();
  }, []), a = (o) => o.preventDefault(), l = (o) => (s) => {
    var n;
    t.current && (e(!0), t.current.addEventListener("dragover", (u) => u.preventDefault()), (n = t.current) == null || n.addEventListener("drop", (u) => {
      u.preventDefault();
      const v = Array.from(u.dataTransfer.files);
      s(v);
    })), e(!1);
  };
  return f(() => (document.addEventListener("dragover", a), document.addEventListener("drop", l), () => {
    document.removeEventListener("dragover", a), document.removeEventListener("drop", l);
  }), [t]), { onUpload: c, elementRef: t, onDropFile: l(), isDroppingFile: r };
};
export {
  D as a,
  C as b,
  y as c,
  z as d,
  F as e,
  E as u
};
