import p from"global";var{LOGLEVEL:f,console:g}=p,a={trace:1,debug:2,info:3,warn:4,error:5,silent:10},L=f,c=a[L]||a.info,i={trace:(r,...e)=>c<=a.trace&&g.trace(r,...e),debug:(r,...e)=>c<=a.debug&&g.debug(r,...e),info:(r,...e)=>c<=a.info&&g.info(r,...e),warn:(r,...e)=>c<=a.warn&&g.warn(r,...e),error:(r,...e)=>c<=a.error&&g.error(r,...e),log:(r,...e)=>c<a.silent&&g.log(r,...e)},s=new Set,n=r=>(e,...t)=>{if(!s.has(e))return s.add(e),i[r](e,...t)};n.clear=()=>s.clear();n.trace=n("trace");n.debug=n("debug");n.info=n("info");n.warn=n("warn");n.error=n("error");n.log=n("log");var w=n("warn"),o=r=>(...e)=>{let t=[];if(e.length){let y=/<span\s+style=(['"])([^'"]*)\1\s*>/gi,u=/<\/span>/gi,d;for(t.push(e[0].replace(y,"%c").replace(u,"%c"));d=y.exec(e[0]);)t.push(d[2]),t.push("");for(let l=1;l<e.length;l++)t.push(e[l])}i[r].apply(i,t)};o.trace=o("trace");o.debug=o("debug");o.info=o("info");o.warn=o("warn");o.error=o("error");export{w as deprecate,i as logger,n as once,o as pretty};
