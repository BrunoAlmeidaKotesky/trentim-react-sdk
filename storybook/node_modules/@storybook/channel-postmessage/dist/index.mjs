import g from"global";import*as A from"@storybook/core-events";import{Channel as L}from"@storybook/channels";import{logger as b,pretty as v}from"@storybook/client-logger";import{isJSON as H,parse as I,stringify as W}from"telejson";import x from"qs";var{window:n,document:l,location:d}=g,y="storybook-channel",N={allowFunction:!0,maxDepth:25},h=class{constructor(r){this.config=r;if(this.buffer=[],this.handler=null,n&&n.addEventListener("message",this.handleEvent.bind(this),!1),r.page!=="manager"&&r.page!=="preview")throw new Error(`postmsg-channel: "config.page" cannot be "${r.page}"`)}setHandler(r){this.handler=(...e)=>{r.apply(this,e),!this.connected&&this.getLocalFrame().length&&(this.flush(),this.connected=!0)}}send(r,e){let{target:o,allowRegExp:t,allowFunction:a,allowSymbol:s,allowDate:i,allowUndefined:f,allowClass:w,maxDepth:E,space:C,lazyEval:F}=e||{},k=Object.fromEntries(Object.entries({allowRegExp:t,allowFunction:a,allowSymbol:s,allowDate:i,allowUndefined:f,allowClass:w,maxDepth:E,space:C,lazyEval:F}).filter(([p,u])=>typeof u<"u")),$={...N,...g.CHANNEL_OPTIONS||{},...k},m=this.getFrames(o),S=x.parse(d.search,{ignoreQueryPrefix:!0}),O=W({key:y,event:r,refId:S.refId},$);return m.length?(this.buffer.length&&this.flush(),m.forEach(p=>{try{p.postMessage(O,"*")}catch{console.error("sending over postmessage fail")}}),Promise.resolve(null)):new Promise((p,u)=>{this.buffer.push({event:r,resolve:p,reject:u})})}flush(){let{buffer:r}=this;this.buffer=[],r.forEach(e=>{this.send(e.event).then(e.resolve).catch(e.reject)})}getFrames(r){if(this.config.page==="manager"){let o=[...l.querySelectorAll("iframe[data-is-storybook][data-is-loaded]")].filter(t=>{try{return!!t.contentWindow&&t.dataset.isStorybook!==void 0&&t.id===r}catch{return!1}}).map(t=>t.contentWindow);return o.length?o:this.getCurrentFrames()}return n&&n.parent&&n.parent!==n?[n.parent]:[]}getCurrentFrames(){return this.config.page==="manager"?[...l.querySelectorAll('[data-is-storybook="true"]')].map(e=>e.contentWindow):n&&n.parent?[n.parent]:[]}getLocalFrame(){return this.config.page==="manager"?[...l.querySelectorAll("#storybook-preview-iframe")].map(e=>e.contentWindow):n&&n.parent?[n.parent]:[]}handleEvent(r){try{let{data:e}=r,{key:o,event:t,refId:a}=typeof e=="string"&&H(e)?I(e,g.CHANNEL_OPTIONS||{}):e;if(o===y){let s=this.config.page==="manager"?'<span style="color: #37D5D3; background: black"> manager </span>':'<span style="color: #1EA7FD; background: black"> preview </span>',i=Object.values(A).includes(t.type)?`<span style="color: #FF4785">${t.type}</span>`:`<span style="color: #FFAE00">${t.type}</span>`;if(a&&(t.refId=a),t.source=this.config.page==="preview"?r.origin:q(r),!t.source){v.error(`${s} received ${i} but was unable to determine the source of the event`);return}let f=`${s} received ${i} (${e.length})`;v.debug(d.origin!==t.source?f:`${f} <span style="color: gray">(on ${d.origin} from ${t.source})</span>`,...t.args),this.handler(t)}}catch(e){b.error(e)}}},q=c=>{let r=[...l.querySelectorAll("iframe[data-is-storybook]")],[e,...o]=r.filter(t=>{try{return t.contentWindow===c.source}catch{}let a=t.getAttribute("src"),s;try{({origin:s}=new URL(a,l.location))}catch{return!1}return s===c.origin});if(e&&o.length===0){let t=e.getAttribute("src"),{protocol:a,host:s,pathname:i}=new URL(t,l.location);return`${a}//${s}${i}`}return o.length>0&&b.error("found multiple candidates for event source"),null};function D({page:c}){let r=new h({page:c});return new L({transport:r})}var B=D;export{y as KEY,h as PostmsgTransport,D as createChannel,B as default};
