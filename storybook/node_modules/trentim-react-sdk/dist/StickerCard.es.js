import './style.css';
import * as u from "react";
import _, { useMemo as de, useCallback as oe, useState as ue, useEffect as ne, memo as Tt } from "react";
import { J as $, a2 as xe, ap as Bt, b6 as Pt, O as Et, N as O, aZ as w, B as h, P as ye, aq as Ot, _ as V, ar as Rt, as as Je, ah as Se, at as Ft, a7 as Ne, g as _e, a1 as Me, aB as At, bb as et, bc as Ht, an as tt, bd as Lt, av as zt, Y, be as Kt, x as at, a0 as Q, a9 as Wt, ab as Gt, D as Z, ac as $t, bf as pe, ag as E, z as Ie, L as me, bg as Ut, M as qt, ai as jt, a$ as Ge, aj as Zt, aM as Vt, au as Yt, E as Qt, aC as Xt, aD as Jt, $ as $e, ao as ot, aN as ea, ad as ta, aG as aa, K as P, aF as nt, aE as Ue, bh as rt, T as oa, X as na, bi as be, bj as Ce, a5 as ra, aH as sa } from "./IconButton.c64bd954.mjs";
import { T as ia, u as la, F as ua, O as da, c as qe, P as ca, d as ma } from "./Overlay.cdc654a1.mjs";
import "react-dom";
function fa(e) {
  var n = u.useState(e), a = n[0], t = n[1], o = $(function() {
    return function() {
      t(!0);
    };
  }), r = $(function() {
    return function() {
      t(!1);
    };
  }), d = $(function() {
    return function() {
      t(function(l) {
        return !l;
      });
    };
  });
  return [a, { setTrue: o, setFalse: r, toggle: d }];
}
var va = function(e) {
  var n = u.useRef(e);
  n.current = e, u.useEffect(function() {
    return function() {
      var a;
      (a = n.current) === null || a === void 0 || a.call(n);
    };
  }, []);
}, ha = xe(function(e, n, a, t) {
  var o, r, d, l, f, s, i, v, c, m, g, p, C, x, N = Bt(e), I = Pt(e), y = e.palette, L = e.semanticColors, X = {
    left: 4,
    top: 4,
    bottom: 4,
    right: 4,
    border: "none"
  }, J = {
    root: [
      Et(e, {
        inset: 2,
        highContrastStyle: X,
        borderColor: "transparent"
      }),
      e.fonts.medium,
      {
        minWidth: "40px",
        backgroundColor: y.white,
        color: y.neutralPrimary,
        padding: "0 4px",
        border: "none",
        borderRadius: 0,
        selectors: (o = {}, o[O] = {
          border: "none"
        }, o)
      }
    ],
    rootHovered: {
      backgroundColor: y.neutralLighter,
      color: y.neutralDark,
      selectors: (r = {}, r[O] = {
        color: "Highlight"
      }, r["." + w.msButtonIcon] = {
        color: y.themeDarkAlt
      }, r["." + w.msButtonMenuIcon] = {
        color: y.neutralPrimary
      }, r)
    },
    rootPressed: {
      backgroundColor: y.neutralLight,
      color: y.neutralDark,
      selectors: (d = {}, d["." + w.msButtonIcon] = {
        color: y.themeDark
      }, d["." + w.msButtonMenuIcon] = {
        color: y.neutralPrimary
      }, d)
    },
    rootChecked: {
      backgroundColor: y.neutralLight,
      color: y.neutralDark,
      selectors: (l = {}, l["." + w.msButtonIcon] = {
        color: y.themeDark
      }, l["." + w.msButtonMenuIcon] = {
        color: y.neutralPrimary
      }, l)
    },
    rootCheckedHovered: {
      backgroundColor: y.neutralQuaternaryAlt,
      selectors: (f = {}, f["." + w.msButtonIcon] = {
        color: y.themeDark
      }, f["." + w.msButtonMenuIcon] = {
        color: y.neutralPrimary
      }, f)
    },
    rootExpanded: {
      backgroundColor: y.neutralLight,
      color: y.neutralDark,
      selectors: (s = {}, s["." + w.msButtonIcon] = {
        color: y.themeDark
      }, s["." + w.msButtonMenuIcon] = {
        color: y.neutralPrimary
      }, s)
    },
    rootExpandedHovered: {
      backgroundColor: y.neutralQuaternaryAlt
    },
    rootDisabled: {
      backgroundColor: y.white,
      selectors: (i = {}, i["." + w.msButtonIcon] = {
        color: L.disabledBodySubtext,
        selectors: (v = {}, v[O] = h({ color: "GrayText" }, ye()), v)
      }, i[O] = h({ color: "GrayText", backgroundColor: "Window" }, ye()), i)
    },
    splitButtonContainer: {
      height: "100%",
      selectors: (c = {}, c[O] = {
        border: "none"
      }, c)
    },
    splitButtonDividerDisabled: {
      selectors: (m = {}, m[O] = {
        backgroundColor: "Window"
      }, m)
    },
    splitButtonDivider: {
      backgroundColor: y.neutralTertiaryAlt
    },
    splitButtonMenuButton: {
      backgroundColor: y.white,
      border: "none",
      borderTopRightRadius: "0",
      borderBottomRightRadius: "0",
      color: y.neutralSecondary,
      selectors: {
        ":hover": {
          backgroundColor: y.neutralLighter,
          color: y.neutralDark,
          selectors: (g = {}, g[O] = {
            color: "Highlight"
          }, g["." + w.msButtonIcon] = {
            color: y.neutralPrimary
          }, g)
        },
        ":active": {
          backgroundColor: y.neutralLight,
          selectors: (p = {}, p["." + w.msButtonIcon] = {
            color: y.neutralPrimary
          }, p)
        }
      }
    },
    splitButtonMenuButtonDisabled: {
      backgroundColor: y.white,
      selectors: (C = {}, C[O] = h({ color: "GrayText", border: "none", backgroundColor: "Window" }, ye()), C)
    },
    splitButtonMenuButtonChecked: {
      backgroundColor: y.neutralLight,
      color: y.neutralDark,
      selectors: {
        ":hover": {
          backgroundColor: y.neutralQuaternaryAlt
        }
      }
    },
    splitButtonMenuButtonExpanded: {
      backgroundColor: y.neutralLight,
      color: y.black,
      selectors: {
        ":hover": {
          backgroundColor: y.neutralQuaternaryAlt
        }
      }
    },
    splitButtonMenuIcon: {
      color: y.neutralPrimary
    },
    splitButtonMenuIconDisabled: {
      color: y.neutralTertiary
    },
    label: {
      fontWeight: "normal"
    },
    icon: {
      color: y.themePrimary
    },
    menuIcon: (x = {
      color: y.neutralSecondary
    }, x[O] = {
      color: "GrayText"
    }, x)
  };
  return Ot(N, I, J, n);
}), De = function(e) {
  V(n, e);
  function n() {
    return e !== null && e.apply(this, arguments) || this;
  }
  return n.prototype.render = function() {
    var a = this.props, t = a.styles, o = a.theme;
    return u.createElement(Rt, h({}, this.props, { variantClassName: "ms-Button--commandBar", styles: ha(o, t), onRenderDescription: Je }));
  }, n = Se([
    Ft("CommandBarButton", ["theme", "styles"], !0)
  ], n), n;
}(u.Component), ce;
(function(e) {
  e[e.horizontal = 0] = "horizontal", e[e.vertical = 1] = "vertical";
})(ce || (ce = {}));
var ga = 16, ya = function() {
  var e = {};
  return {
    getCachedMeasurement: function(n) {
      if (n && n.cacheKey && e.hasOwnProperty(n.cacheKey))
        return e[n.cacheKey];
    },
    addMeasurementToCache: function(n, a) {
      n.cacheKey && (e[n.cacheKey] = a);
    }
  };
}, pa = function(e) {
  e === void 0 && (e = ya());
  var n = e, a;
  function t(i, v) {
    var c = n.getCachedMeasurement(i);
    if (c !== void 0)
      return c;
    var m = v();
    return n.addMeasurementToCache(i, m), m;
  }
  function o(i, v, c) {
    for (var m = i, g = t(i, c); g > a; ) {
      var p = v(m);
      if (p === void 0)
        return {
          renderedData: m,
          resizeDirection: void 0,
          dataToMeasure: void 0
        };
      if (g = n.getCachedMeasurement(p), g === void 0)
        return {
          dataToMeasure: p,
          resizeDirection: "shrink"
        };
      m = p;
    }
    return {
      renderedData: m,
      resizeDirection: void 0,
      dataToMeasure: void 0
    };
  }
  function r(i, v, c, m) {
    for (var g = i, p = t(i, c); p < a; ) {
      var C = v(g);
      if (C === void 0)
        return {
          renderedData: g,
          resizeDirection: void 0,
          dataToMeasure: void 0
        };
      if (p = n.getCachedMeasurement(C), p === void 0)
        return {
          dataToMeasure: C
        };
      g = C;
    }
    return h({ resizeDirection: "shrink" }, o(g, m, c));
  }
  function d(i, v, c, m) {
    var g;
    return i > a ? m ? g = {
      resizeDirection: "grow",
      dataToMeasure: m(c)
    } : g = {
      resizeDirection: "shrink",
      dataToMeasure: v
    } : g = {
      resizeDirection: "shrink",
      dataToMeasure: c
    }, a = i, h(h({}, g), { measureContainer: !1 });
  }
  function l(i, v, c, m) {
    if (!(m === void 0 && v.dataToMeasure === void 0)) {
      if (m) {
        if (a && v.renderedData && !v.dataToMeasure)
          return h(h({}, v), d(m, i.data, v.renderedData, i.onGrowData));
        a = m;
      }
      var g = h(h({}, v), { measureContainer: !1 });
      return v.dataToMeasure && (v.resizeDirection === "grow" && i.onGrowData ? g = h(h({}, g), r(v.dataToMeasure, i.onGrowData, c, i.onReduceData)) : g = h(h({}, g), o(v.dataToMeasure, i.onReduceData, c))), g;
    }
  }
  function f(i) {
    return !(!i || n.getCachedMeasurement(i) !== void 0);
  }
  function s(i) {
    return {
      dataToMeasure: h({}, i),
      resizeDirection: "grow",
      measureContainer: !0
    };
  }
  return {
    getNextState: l,
    shouldRenderDataForMeasurement: f,
    getInitialResizeGroupState: s
  };
}, ba = u.createContext({ isMeasured: !1 }), je = { position: "fixed", visibility: "hidden" }, Ca = { position: "relative" }, Da = "ResizeGroup";
function xa(e, n) {
  var a;
  switch (n.type) {
    case "resizeData":
      return h({}, n.value);
    case "dataToMeasure":
      return h(h({}, e), { dataToMeasure: n.value, resizeDirection: "grow", measureContainer: !0 });
    default:
      return h(h({}, e), (a = {}, a[n.type] = n.value, a));
  }
}
function Sa(e, n, a) {
  var t = $(function() {
    return n.getInitialResizeGroupState(e.data);
  }), o = u.useReducer(xa, t), r = o[0], d = o[1];
  u.useEffect(function() {
    d({
      type: "dataToMeasure",
      value: e.data
    });
  }, [e.data]);
  var l = u.useRef(t);
  l.current = h({}, r);
  var f = u.useCallback(function(i) {
    i && d({
      type: "resizeData",
      value: i
    });
  }, []), s = u.useCallback(function() {
    a.current && d({
      type: "measureContainer",
      value: !0
    });
  }, [a]);
  return [l, f, s];
}
function Na(e, n) {
  var a = $(pa), t = u.useRef(null), o = u.useRef(null), r = u.useRef(!1), d = At(), l = Sa(e, a, n), f = l[0], s = l[1], i = l[2];
  u.useEffect(function() {
    var g;
    f.current.renderedData && (r.current = !0, (g = e.dataDidRender) === null || g === void 0 || g.call(e, f.current.renderedData));
  }), u.useEffect(function() {
    d.requestAnimationFrame(function() {
      var g = void 0;
      if (f.current.measureContainer && n.current) {
        var p = n.current.getBoundingClientRect();
        g = e.direction === ce.vertical ? p.height : p.width;
      }
      var C = a.getNextState(e, f.current, function() {
        var x = r.current ? o : t;
        return x.current ? e.direction === ce.vertical ? x.current.scrollHeight : x.current.scrollWidth : 0;
      }, g);
      s(C);
    }, n.current);
  });
  var v = et();
  Ht(v, "resize", d.debounce(i, ga, { leading: !0 }));
  var c = a.shouldRenderDataForMeasurement(f.current.dataToMeasure), m = !r.current && c;
  return [
    f.current.dataToMeasure,
    f.current.renderedData,
    i,
    t,
    o,
    c,
    m
  ];
}
function _a(e) {
  process.env.NODE_ENV !== "production" && tt({
    name: Da,
    props: e,
    deprecations: { styles: "className" }
  });
}
var Ma = { isMeasured: !0 }, st = u.forwardRef(function(e, n) {
  var a = u.useRef(null), t = Ne(a, n), o = Na(e, a), r = o[0], d = o[1], l = o[2], f = o[3], s = o[4], i = o[5], v = o[6];
  u.useImperativeHandle(e.componentRef, function() {
    return { remeasure: l };
  }, [l]), _a(e);
  var c = e.className, m = e.onRenderData, g = _e(e, Me, ["data"]);
  return u.createElement(
    "div",
    h({}, g, { className: c, ref: t }),
    u.createElement(
      "div",
      { style: Ca },
      i && !v && u.createElement(
        "div",
        { style: je, ref: s },
        u.createElement(ba.Provider, { value: Ma }, m(r))
      ),
      u.createElement("div", { ref: f, style: v ? je : void 0, "data-automation-id": "visibleContent" }, v ? m(r) : d && m(d))
    )
  );
});
st.displayName = "ResizeGroupBase";
var Ia = st, Ze = function(e, n, a) {
  for (var t = 0, o = e; t < o.length; t++) {
    var r = o[t], d = n.register(r, !0);
    a[d] = r;
  }
}, Ve = function(e, n) {
  for (var a = 0, t = Object.keys(n); a < t.length; a++) {
    var o = t[a];
    e.unregister(n[o], o, !0), delete n[o];
  }
}, ka = function(e, n, a) {
  var t = zt(e);
  u.useEffect(function() {
    t && (Ve(a, t), Ze(n, a, e));
  }), u.useEffect(function() {
    return Ze(n, a, e), function() {
      Ve(a, e);
    };
  }, []);
}, Ye = function(e) {
  var n = Lt.getInstance(), a = e.className, t = e.overflowItems, o = e.keytipSequences, r = e.itemSubMenuProvider, d = e.onRenderOverflowButton, l = $({}), f = u.useCallback(function(c) {
    if (r)
      return r(c);
    if (c.subMenuProps)
      return c.subMenuProps.items;
  }, [r]), s = u.useMemo(function() {
    var c = [], m = [];
    return o ? t == null || t.forEach(function(g) {
      var p, C = g.keytipProps;
      if (C) {
        var x = {
          content: C.content,
          keySequences: C.keySequences,
          disabled: C.disabled || !!(g.disabled || g.isDisabled),
          hasDynamicChildren: C.hasDynamicChildren,
          hasMenu: C.hasMenu
        };
        C.hasDynamicChildren || f(g) ? (x.onExecute = n.menuExecute.bind(n, o, (p = g == null ? void 0 : g.keytipProps) === null || p === void 0 ? void 0 : p.keySequences), x.hasOverflowSubMenu = !0) : x.onExecute = C.onExecute, c.push(x);
        var N = h(h({}, g), { keytipProps: h(h({}, C), { overflowSetSequence: o }) });
        m == null || m.push(N);
      } else
        m == null || m.push(g);
    }) : m = t, { modifiedOverflowItems: m, keytipsToRegister: c };
  }, [t, f, n, o]), i = s.modifiedOverflowItems, v = s.keytipsToRegister;
  return ka(l, v, n), u.createElement("div", { className: a }, d(i));
}, wa = Y(), Ta = "OverflowSet", Ba = function(e, n) {
  u.useImperativeHandle(e.componentRef, function() {
    return {
      focus: function() {
        var a = !1;
        return n.current && (a = Kt(n.current)), a;
      },
      focusElement: function(a) {
        var t = !1;
        return a ? (n.current && at(n.current, a) && (a.focus(), t = document.activeElement === a), t) : !1;
      }
    };
  }, [n]);
}, it = u.forwardRef(function(e, n) {
  var a = u.useRef(null), t = Ne(a, n);
  Ba(e, a);
  var o = e.items, r = e.overflowItems, d = e.className, l = e.styles, f = e.vertical, s = e.role, i = e.overflowSide, v = i === void 0 ? "end" : i, c = e.onRenderItem, m = wa(l, { className: d, vertical: f }), g = !!r && r.length > 0;
  return u.createElement(
    "div",
    h({}, _e(e, Me), { role: s || "group", "aria-orientation": s === "menubar" ? f === !0 ? "vertical" : "horizontal" : void 0, className: m.root, ref: t }),
    v === "start" && g && u.createElement(Ye, h({}, e, { className: m.overflowButton })),
    o && o.map(function(p, C) {
      return u.createElement("div", { className: m.item, key: p.key, role: "none" }, c(p));
    }),
    v === "end" && g && u.createElement(Ye, h({}, e, { className: m.overflowButton }))
  );
});
it.displayName = Ta;
var Qe = {
  flexShrink: 0,
  display: "inherit"
}, Pa = function(e) {
  var n = e.className, a = e.vertical;
  return {
    root: [
      "ms-OverflowSet",
      {
        position: "relative",
        display: "flex",
        flexWrap: "nowrap"
      },
      a && { flexDirection: "column" },
      n
    ],
    item: ["ms-OverflowSet-item", Qe],
    overflowButton: ["ms-OverflowSet-overflowButton", Qe]
  };
}, Xe = Q(it, Pa, void 0, {
  scope: "OverflowSet"
}), Ea = 44, Oa = function(e) {
  var n = e.className, a = e.theme, t = a.semanticColors;
  return {
    root: [
      a.fonts.medium,
      "ms-CommandBar",
      {
        display: "flex",
        backgroundColor: t.bodyBackground,
        padding: "0 14px 0 24px",
        height: Ea
      },
      n
    ],
    primarySet: [
      "ms-CommandBar-primaryCommand",
      {
        flexGrow: "1",
        display: "flex",
        alignItems: "stretch"
      }
    ],
    secondarySet: [
      "ms-CommandBar-secondaryCommand",
      {
        flexShrink: "0",
        display: "flex",
        alignItems: "stretch"
      }
    ]
  };
}, Ra = xe(function(e) {
  var n = {
    height: "100%"
  }, a = {
    whiteSpace: "nowrap"
  }, t = e || {}, o = t.root, r = t.label, d = Wt(t, ["root", "label"]);
  return h(h({}, d), { root: o ? [n, o] : n, label: r ? [a, r] : a });
}), Fa = Y(), Aa = function(e) {
  V(n, e);
  function n(a) {
    var t = e.call(this, a) || this;
    return t._overflowSet = u.createRef(), t._resizeGroup = u.createRef(), t._onRenderData = function(o) {
      var r = t.props, d = r.ariaLabel, l = r.primaryGroupAriaLabel, f = r.farItemsGroupAriaLabel, s = o.farItems && o.farItems.length > 0;
      return u.createElement(
        Gt,
        { className: Z(t._classNames.root), direction: $t.horizontal, role: "menubar", "aria-label": d },
        u.createElement(Xe, { role: s ? "group" : "none", "aria-label": s ? l : void 0, componentRef: t._overflowSet, className: Z(t._classNames.primarySet), items: o.primaryItems, overflowItems: o.overflowItems.length ? o.overflowItems : void 0, onRenderItem: t._onRenderItem, onRenderOverflowButton: t._onRenderOverflowButton }),
        s && u.createElement(Xe, { role: "group", "aria-label": f, className: Z(t._classNames.secondarySet), items: o.farItems, onRenderItem: t._onRenderItem, onRenderOverflowButton: Je })
      );
    }, t._onRenderItem = function(o) {
      if (o.onRender)
        return o.onRender(o, function() {
        });
      var r = o.text || o.name, d = h(h({ allowDisabledFocus: !0, role: "menuitem" }, o), { styles: Ra(o.buttonStyles), className: Z("ms-CommandBarItem-link", o.className), text: o.iconOnly ? void 0 : r, menuProps: o.subMenuProps, onClick: t._onButtonClick(o) });
      return o.iconOnly && (r !== void 0 || o.tooltipHostProps) ? u.createElement(ia, h({ role: "none", content: r, setAriaDescribedBy: !1 }, o.tooltipHostProps), t._commandButton(o, d)) : t._commandButton(o, d);
    }, t._commandButton = function(o, r) {
      var d = t.props.buttonAs, l = o.commandBarButtonAs, f = De, s = f;
      return l && (s = pe(l, s)), d && (s = pe(d, s)), u.createElement(s, h({}, r));
    }, t._onRenderOverflowButton = function(o) {
      var r = t.props.overflowButtonProps, d = r === void 0 ? {} : r, l = E(E([], d.menuProps ? d.menuProps.items : []), o), f = h(h({ role: "menuitem" }, d), { styles: h({ menuIcon: { fontSize: "17px" } }, d.styles), className: Z("ms-CommandBar-overflowButton", d.className), menuProps: h(h({}, d.menuProps), { items: l }), menuIconProps: h({ iconName: "More" }, d.menuIconProps) }), s = t.props.overflowButtonAs ? pe(t.props.overflowButtonAs, De) : De;
      return u.createElement(s, h({}, f));
    }, t._onReduceData = function(o) {
      var r = t.props, d = r.shiftOnReduce, l = r.onDataReduced, f = o.primaryItems, s = o.overflowItems, i = o.cacheKey, v = f[d ? 0 : f.length - 1];
      if (v !== void 0) {
        v.renderedInOverflow = !0, s = E([v], s), f = d ? f.slice(1) : f.slice(0, -1);
        var c = h(h({}, o), { primaryItems: f, overflowItems: s });
        return i = t._computeCacheKey({ primaryItems: f, overflow: s.length > 0 }), l && l(v), c.cacheKey = i, c;
      }
    }, t._onGrowData = function(o) {
      var r = t.props, d = r.shiftOnReduce, l = r.onDataGrown, f = o.minimumOverflowItems, s = o.primaryItems, i = o.overflowItems, v = o.cacheKey, c = i[0];
      if (c !== void 0 && i.length > f) {
        c.renderedInOverflow = !1, i = i.slice(1), s = d ? E([c], s) : E(E([], s), [c]);
        var m = h(h({}, o), { primaryItems: s, overflowItems: i });
        return v = t._computeCacheKey({ primaryItems: s, overflow: i.length > 0 }), l && l(c), m.cacheKey = v, m;
      }
    }, Ie(t), t;
  }
  return n.prototype.render = function() {
    var a = this.props, t = a.items, o = a.overflowItems, r = a.farItems, d = a.styles, l = a.theme, f = a.dataDidRender, s = a.onReduceData, i = s === void 0 ? this._onReduceData : s, v = a.onGrowData, c = v === void 0 ? this._onGrowData : v, m = a.resizeGroupAs, g = m === void 0 ? Ia : m, p = {
      primaryItems: E([], t),
      overflowItems: E([], o),
      minimumOverflowItems: E([], o).length,
      farItems: r,
      cacheKey: this._computeCacheKey({
        primaryItems: E([], t),
        overflow: o && o.length > 0
      })
    };
    this._classNames = Fa(d, { theme: l });
    var C = _e(this.props, Me);
    return u.createElement(g, h({}, C, { componentRef: this._resizeGroup, data: p, onReduceData: i, onGrowData: c, onRenderData: this._onRenderData, dataDidRender: f }));
  }, n.prototype.focus = function() {
    var a = this._overflowSet.current;
    a && a.focus();
  }, n.prototype.remeasure = function() {
    this._resizeGroup.current && this._resizeGroup.current.remeasure();
  }, n.prototype._onButtonClick = function(a) {
    return function(t) {
      a.inactive || a.onClick && a.onClick(t, a);
    };
  }, n.prototype._computeCacheKey = function(a) {
    var t = a.primaryItems, o = a.overflow, r = function(f, s) {
      var i = s.cacheKey, v = i === void 0 ? s.key : i;
      return f + v;
    }, d = t && t.reduce(r, ""), l = o ? "overflow" : "";
    return [d, l].join("");
  }, n.defaultProps = {
    items: [],
    overflowItems: []
  }, n;
}(u.Component), lt = Q(Aa, Oa, void 0, {
  scope: "CommandBar"
}), H;
(function(e) {
  e[e.normal = 0] = "normal", e[e.largeHeader = 1] = "largeHeader", e[e.close = 2] = "close";
})(H || (H = {}));
var ut = qt.durationValue2, Ha = {
  root: "ms-Modal",
  main: "ms-Dialog-main",
  scrollableContent: "ms-Modal-scrollableContent",
  isOpen: "is-open",
  layer: "ms-Modal-Layer"
}, La = function(e) {
  var n, a = e.className, t = e.containerClassName, o = e.scrollableContentClassName, r = e.isOpen, d = e.isVisible, l = e.hasBeenOpened, f = e.modalRectangleTop, s = e.theme, i = e.topOffsetFixed, v = e.isModeless, c = e.layerClassName, m = e.isDefaultDragHandle, g = e.windowInnerHeight, p = s.palette, C = s.effects, x = s.fonts, N = me(Ha, s);
  return {
    root: [
      N.root,
      x.medium,
      {
        backgroundColor: "transparent",
        position: v ? "absolute" : "fixed",
        height: "100%",
        width: "100%",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        opacity: 0,
        pointerEvents: "none",
        transition: "opacity " + ut
      },
      i && typeof f == "number" && l && {
        alignItems: "flex-start"
      },
      r && N.isOpen,
      d && {
        opacity: 1,
        pointerEvents: "auto"
      },
      a
    ],
    main: [
      N.main,
      {
        boxShadow: C.elevation64,
        borderRadius: C.roundedCorner2,
        backgroundColor: p.white,
        boxSizing: "border-box",
        position: "relative",
        textAlign: "left",
        outline: "3px solid transparent",
        maxHeight: "calc(100% - 32px)",
        maxWidth: "calc(100% - 32px)",
        minHeight: "176px",
        minWidth: "288px",
        overflowY: "auto",
        zIndex: v ? Ut.Layer : void 0
      },
      i && typeof f == "number" && l && {
        top: f
      },
      m && {
        cursor: "move"
      },
      t
    ],
    scrollableContent: [
      N.scrollableContent,
      {
        overflowY: "auto",
        flexGrow: 1,
        maxHeight: "100vh",
        selectors: (n = {}, n["@supports (-webkit-overflow-scrolling: touch)"] = {
          maxHeight: g
        }, n)
      },
      o
    ],
    layer: v && [
      c,
      N.layer,
      {
        position: "static",
        width: "unset",
        height: "unset"
      }
    ],
    keyboardMoveIconContainer: {
      position: "absolute",
      display: "flex",
      justifyContent: "center",
      width: "100%",
      padding: "3px 0px"
    },
    keyboardMoveIcon: {
      fontSize: x.xLargePlus.fontSize,
      width: "24px"
    }
  };
}, za = xe(function(e, n) {
  return {
    root: jt(e, n && {
      touchAction: "none",
      selectors: {
        "& *": {
          userSelect: "none"
        }
      }
    })
  };
}), ae = {
  touch: {
    start: "touchstart",
    move: "touchmove",
    stop: "touchend"
  },
  mouse: {
    start: "mousedown",
    move: "mousemove",
    stop: "mouseup"
  }
}, Ka = function(e) {
  V(n, e);
  function n(a) {
    var t = e.call(this, a) || this;
    return t._currentEventType = ae.mouse, t._events = [], t._onMouseDown = function(o) {
      var r = u.Children.only(t.props.children).props.onMouseDown;
      return r && r(o), t._currentEventType = ae.mouse, t._onDragStart(o);
    }, t._onMouseUp = function(o) {
      var r = u.Children.only(t.props.children).props.onMouseUp;
      return r && r(o), t._currentEventType = ae.mouse, t._onDragStop(o);
    }, t._onTouchStart = function(o) {
      var r = u.Children.only(t.props.children).props.onTouchStart;
      return r && r(o), t._currentEventType = ae.touch, t._onDragStart(o);
    }, t._onTouchEnd = function(o) {
      var r = u.Children.only(t.props.children).props.onTouchEnd;
      r && r(o), t._currentEventType = ae.touch, t._onDragStop(o);
    }, t._onDragStart = function(o) {
      if (typeof o.button == "number" && o.button !== 0)
        return !1;
      if (!(t.props.handleSelector && !t._matchesSelector(o.target, t.props.handleSelector) || t.props.preventDragSelector && t._matchesSelector(o.target, t.props.preventDragSelector))) {
        t._touchId = t._getTouchId(o);
        var r = t._getControlPosition(o);
        if (r !== void 0) {
          var d = t._createDragDataFromPosition(r);
          t.props.onStart && t.props.onStart(o, d), t.setState({
            isDragging: !0,
            lastPosition: r
          }), t._events = [
            Ge(document.body, t._currentEventType.move, t._onDrag, !0),
            Ge(document.body, t._currentEventType.stop, t._onDragStop, !0)
          ];
        }
      }
    }, t._onDrag = function(o) {
      o.type === "touchmove" && o.preventDefault();
      var r = t._getControlPosition(o);
      if (!!r) {
        var d = t._createUpdatedDragData(t._createDragDataFromPosition(r)), l = d.position;
        t.props.onDragChange && t.props.onDragChange(o, d), t.setState({
          position: l,
          lastPosition: r
        });
      }
    }, t._onDragStop = function(o) {
      if (!!t.state.isDragging) {
        var r = t._getControlPosition(o);
        if (!!r) {
          var d = t._createDragDataFromPosition(r);
          t.setState({
            isDragging: !1,
            lastPosition: void 0
          }), t.props.onStop && t.props.onStop(o, d), t.props.position && t.setState({
            position: t.props.position
          }), t._events.forEach(function(l) {
            return l();
          });
        }
      }
    }, t.state = {
      isDragging: !1,
      position: t.props.position || { x: 0, y: 0 },
      lastPosition: void 0
    }, t;
  }
  return n.prototype.componentDidUpdate = function(a) {
    this.props.position && (!a.position || this.props.position !== a.position) && this.setState({ position: this.props.position });
  }, n.prototype.componentWillUnmount = function() {
    this._events.forEach(function(a) {
      return a();
    });
  }, n.prototype.render = function() {
    var a = u.Children.only(this.props.children), t = a.props, o = this.props.position, r = this.state, d = r.position, l = r.isDragging, f = d.x, s = d.y;
    return o && !l && (f = o.x, s = o.y), u.cloneElement(a, {
      style: h(h({}, t.style), { transform: "translate(" + f + "px, " + s + "px)" }),
      className: za(t.className, this.state.isDragging).root,
      onMouseDown: this._onMouseDown,
      onMouseUp: this._onMouseUp,
      onTouchStart: this._onTouchStart,
      onTouchEnd: this._onTouchEnd
    });
  }, n.prototype._getControlPosition = function(a) {
    var t = this._getActiveTouch(a);
    if (!(this._touchId !== void 0 && !t)) {
      var o = t || a;
      return {
        x: o.clientX,
        y: o.clientY
      };
    }
  }, n.prototype._getActiveTouch = function(a) {
    return a.targetTouches && this._findTouchInTouchList(a.targetTouches) || a.changedTouches && this._findTouchInTouchList(a.changedTouches);
  }, n.prototype._getTouchId = function(a) {
    var t = a.targetTouches && a.targetTouches[0] || a.changedTouches && a.changedTouches[0];
    if (t)
      return t.identifier;
  }, n.prototype._matchesSelector = function(a, t) {
    if (!a || a === document.body)
      return !1;
    var o = a.matches || a.webkitMatchesSelector || a.msMatchesSelector;
    return o ? o.call(a, t) || this._matchesSelector(a.parentElement, t) : !1;
  }, n.prototype._findTouchInTouchList = function(a) {
    if (this._touchId !== void 0) {
      for (var t = 0; t < a.length; t++)
        if (a[t].identifier === this._touchId)
          return a[t];
    }
  }, n.prototype._createDragDataFromPosition = function(a) {
    var t = this.state.lastPosition;
    return t === void 0 ? {
      delta: { x: 0, y: 0 },
      lastPosition: a,
      position: a
    } : {
      delta: {
        x: a.x - t.x,
        y: a.y - t.y
      },
      lastPosition: t,
      position: a
    };
  }, n.prototype._createUpdatedDragData = function(a) {
    var t = this.state.position;
    return {
      position: {
        x: t.x + a.delta.x,
        y: t.y + a.delta.y
      },
      delta: a.delta,
      lastPosition: t
    };
  }, n;
}(u.Component), j = { x: 0, y: 0 }, Wa = {
  isOpen: !1,
  isDarkOverlay: !0,
  className: "",
  containerClassName: ""
}, Ga = Y(), $a = function(e) {
  var n = 10;
  return e.shiftKey ? e.ctrlKey || (n = 50) : e.ctrlKey && (n = 1), n;
}, Ua = function(e, n) {
  u.useImperativeHandle(e.componentRef, function() {
    return {
      focus: function() {
        n.current && n.current.focus();
      }
    };
  }, [n]);
}, dt = u.forwardRef(function(e, n) {
  var a = Zt(Wa, e), t = a.allowTouchBodyScroll, o = a.className, r = a.children, d = a.containerClassName, l = a.scrollableContentClassName, f = a.elementToFocusOnDismiss, s = a.firstFocusableSelector, i = a.forceFocusInsideTrap, v = a.ignoreExternalFocusing, c = a.isBlocking, m = a.isAlert, g = a.isClickableOutsideFocusTrap, p = a.isDarkOverlay, C = a.onDismiss, x = a.layerProps, N = a.overlay, I = a.isOpen, y = a.titleAriaId, L = a.styles, X = a.subtitleAriaId, J = a.theme, re = a.topOffsetFixed, fe = a.responsiveMode, ve = a.onLayerDidMount, T = a.isModeless, M = a.dragOptions, k = a.onDismissed, ee = a.enableAriaHiddenSiblings, te = u.useRef(null), R = u.useRef(null), F = u.useRef(null), se = Ne(te, n), ie = Vt(se), ke = Yt("ModalFocusTrapZone"), z = et(), we = la(), Te = we.setTimeout, vt = we.clearTimeout, Be = u.useState(I), he = Be[0], Pe = Be[1], Ee = u.useState(I), ht = Ee[0], Oe = Ee[1], Re = u.useState(j), Fe = Re[0], K = Re[1], Ae = u.useState(), gt = Ae[0], yt = Ae[1], He = fa(!1), Le = He[0], ze = He[1], pt = ze.toggle, U = ze.setFalse, b = $(function() {
    return {
      onModalCloseTimer: 0,
      allowTouchBodyScroll: t,
      scrollableContent: null,
      lastSetCoordinates: j,
      events: new Qt({})
    };
  }), ge = (M || {}).keepInBounds, bt = m != null ? m : c && !T, Ct = x === void 0 ? "" : x.className, q = Ga(L, {
    theme: J,
    className: o,
    containerClassName: d,
    scrollableContentClassName: l,
    isOpen: I,
    isVisible: ht,
    hasBeenOpened: b.hasBeenOpened,
    modalRectangleTop: gt,
    topOffsetFixed: re,
    isModeless: T,
    layerClassName: Ct,
    windowInnerHeight: z == null ? void 0 : z.innerHeight,
    isDefaultDragHandle: M && !M.dragHandleSelector
  }), Dt = h(h({ eventBubblingEnabled: !1 }, x), { onLayerDidMount: x && x.onLayerDidMount ? x.onLayerDidMount : ve, insertFirst: T, className: q.layer }), xt = u.useCallback(function(S) {
    S ? b.allowTouchBodyScroll ? Xt(S, b.events) : Jt(S, b.events) : b.events.off(b.scrollableContent), b.scrollableContent = S;
  }, [b]), St = function() {
    var S = F.current, D = S == null ? void 0 : S.getBoundingClientRect();
    D && (re && yt(D.top), ge && (b.minPosition = { x: -D.left, y: -D.top }, b.maxPosition = { x: D.left, y: D.top }));
  }, W = u.useCallback(function(S, D) {
    var A = b.minPosition, G = b.maxPosition;
    return ge && A && G && (D = Math.max(A[S], D), D = Math.min(G[S], D)), D;
  }, [ge, b]), Ke = function() {
    var S;
    b.lastSetCoordinates = j, U(), b.isInKeyboardMoveMode = !1, Pe(!1), K(j), (S = b.disposeOnKeyUp) === null || S === void 0 || S.call(b), k == null || k();
  }, Nt = u.useCallback(function() {
    U(), b.isInKeyboardMoveMode = !1;
  }, [b, U]), _t = u.useCallback(function(S, D) {
    K(function(A) {
      return {
        x: W("x", A.x + D.delta.x),
        y: W("y", A.y + D.delta.y)
      };
    });
  }, [W]), Mt = u.useCallback(function() {
    R.current && R.current.focus();
  }, []), It = function() {
    var S = function(D) {
      if (D.altKey && D.ctrlKey && D.keyCode === P.space) {
        D.preventDefault(), D.stopPropagation();
        return;
      }
      if (Le && (D.altKey || D.keyCode === P.escape) && U(), b.isInKeyboardMoveMode && (D.keyCode === P.escape || D.keyCode === P.enter) && (b.isInKeyboardMoveMode = !1, D.preventDefault(), D.stopPropagation()), b.isInKeyboardMoveMode) {
        var A = !0, G = $a(D);
        switch (D.keyCode) {
          case P.escape:
            K(b.lastSetCoordinates);
          case P.enter: {
            b.lastSetCoordinates = j;
            break;
          }
          case P.up: {
            K(function(B) {
              return { x: B.x, y: W("y", B.y - G) };
            });
            break;
          }
          case P.down: {
            K(function(B) {
              return { x: B.x, y: W("y", B.y + G) };
            });
            break;
          }
          case P.left: {
            K(function(B) {
              return { x: W("x", B.x - G), y: B.y };
            });
            break;
          }
          case P.right: {
            K(function(B) {
              return { x: W("x", B.x + G), y: B.y };
            });
            break;
          }
          default:
            A = !1;
        }
        A && (D.preventDefault(), D.stopPropagation());
      }
    };
    b.lastSetCoordinates = Fe, U(), b.isInKeyboardMoveMode = !0, b.events.on(z, "keydown", S, !0), b.disposeOnKeyDown = function() {
      b.events.off(z, "keydown", S, !0), b.disposeOnKeyDown = void 0;
    };
  }, kt = function() {
    var S;
    b.lastSetCoordinates = j, b.isInKeyboardMoveMode = !1, (S = b.disposeOnKeyDown) === null || S === void 0 || S.call(b);
  }, wt = function() {
    var S = function(D) {
      D.altKey && D.ctrlKey && D.keyCode === P.space && at(b.scrollableContent, D.target) && (pt(), D.preventDefault(), D.stopPropagation());
    };
    b.disposeOnKeyUp || (b.events.on(z, "keyup", S, !0), b.disposeOnKeyUp = function() {
      b.events.off(z, "keyup", S, !0), b.disposeOnKeyUp = void 0;
    });
  };
  u.useEffect(function() {
    vt(b.onModalCloseTimer), I && (requestAnimationFrame(function() {
      return Te(St, 0);
    }), Pe(!0), M && wt(), b.hasBeenOpened = !0, Oe(!0)), !I && he && (b.onModalCloseTimer = Te(Ke, parseFloat(ut) * 1e3), Oe(!1));
  }, [he, I]), va(function() {
    b.events.dispose();
  }), Ua(a, R), qa(a);
  var We = u.createElement(
    ua,
    { id: ke, ref: F, componentRef: R, className: q.main, elementToFocusOnDismiss: f, isClickableOutsideFocusTrap: T || g || !c, ignoreExternalFocusing: v, forceFocusInsideTrap: T ? !T : i, firstFocusableSelector: s, focusPreviouslyFocusedInnerElement: !0, onBlur: b.isInKeyboardMoveMode ? kt : void 0, enableAriaHiddenSiblings: ee },
    M && b.isInKeyboardMoveMode && u.createElement("div", { className: q.keyboardMoveIconContainer }, M.keyboardMoveIconProps ? u.createElement($e, h({}, M.keyboardMoveIconProps)) : u.createElement($e, { iconName: "move", className: q.keyboardMoveIcon })),
    u.createElement(
      "div",
      { ref: xt, className: q.scrollableContent, "data-is-scrollable": !0 },
      M && Le && u.createElement(M.menu, { items: [
        { key: "move", text: M.moveMenuItemText, onClick: It },
        { key: "close", text: M.closeMenuItemText, onClick: Ke }
      ], onDismiss: U, alignTargetEdge: !0, coverTarget: !0, directionalHint: ot.topLeftEdge, directionalHintFixed: !0, shouldFocusOnMount: !0, target: b.scrollableContent }),
      r
    )
  );
  return he && ie >= (fe || ea.small) && u.createElement(
    ta,
    h({ ref: se }, Dt),
    u.createElement(
      aa,
      { role: bt ? "alertdialog" : "dialog", "aria-modal": !T, ariaLabelledBy: y, ariaDescribedBy: X, onDismiss: C, shouldRestoreFocus: !v },
      u.createElement(
        "div",
        { className: q.root, role: T ? void 0 : "document" },
        !T && u.createElement(da, h({ "aria-hidden": !0, isDarkThemed: p, onClick: c ? void 0 : C, allowTouchBodyScroll: t }, N)),
        M ? u.createElement(Ka, { handleSelector: M.dragHandleSelector || "#" + ke, preventDragSelector: "button", onStart: Nt, onDragChange: _t, onStop: Mt, position: Fe }, We) : We
      )
    )
  ) || null;
});
dt.displayName = "Modal";
function qa(e) {
  process.env.NODE_ENV !== "production" && tt({
    name: "Modal",
    props: e,
    deprecations: { onLayerDidMount: "layerProps.onLayerDidMount" }
  });
}
var ct = Q(dt, La, void 0, {
  scope: "Modal",
  fields: ["theme", "styles", "enableAriaHiddenSiblings"]
});
ct.displayName = "Modal";
var ja = Y(), Za = function(e) {
  V(n, e);
  function n(a) {
    var t = e.call(this, a) || this;
    return Ie(t), t;
  }
  return n.prototype.render = function() {
    var a = this.props, t = a.className, o = a.styles, r = a.theme;
    return this._classNames = ja(o, {
      theme: r,
      className: t
    }), u.createElement(
      "div",
      { className: this._classNames.actions },
      u.createElement("div", { className: this._classNames.actionsRight }, this._renderChildrenAsActions())
    );
  }, n.prototype._renderChildrenAsActions = function() {
    var a = this;
    return u.Children.map(this.props.children, function(t) {
      return t ? u.createElement("span", { className: a._classNames.action }, t) : null;
    });
  }, n;
}(u.Component), Va = {
  actions: "ms-Dialog-actions",
  action: "ms-Dialog-action",
  actionsRight: "ms-Dialog-actionsRight"
}, Ya = function(e) {
  var n = e.className, a = e.theme, t = me(Va, a);
  return {
    actions: [
      t.actions,
      {
        position: "relative",
        width: "100%",
        minHeight: "24px",
        lineHeight: "24px",
        margin: "16px 0 0",
        fontSize: "0",
        selectors: {
          ".ms-Button": {
            lineHeight: "normal"
          }
        }
      },
      n
    ],
    action: [
      t.action,
      {
        margin: "0 4px"
      }
    ],
    actionsRight: [
      t.actionsRight,
      {
        textAlign: "right",
        marginRight: "-4px",
        fontSize: "0"
      }
    ]
  };
}, mt = Q(Za, Ya, void 0, { scope: "DialogFooter" }), Qa = Y(), Xa = u.createElement(mt, null).type, Ja = "DialogContent", eo = function(e) {
  V(n, e);
  function n(a) {
    var t = e.call(this, a) || this;
    return Ie(t), nt(Ja, a, {
      titleId: "titleProps.id"
    }), t;
  }
  return n.prototype.render = function() {
    var a = this.props, t = a.showCloseButton, o = a.className, r = a.closeButtonAriaLabel, d = a.onDismiss, l = a.subTextId, f = a.subText, s = a.titleProps, i = s === void 0 ? {} : s, v = a.titleId, c = a.title, m = a.type, g = a.styles, p = a.theme, C = a.draggableHeaderClassName, x = Qa(g, {
      theme: p,
      className: o,
      isLargeHeader: m === H.largeHeader,
      isClose: m === H.close,
      draggableHeaderClassName: C
    }), N = this._groupChildren(), I;
    return f && (I = u.createElement("p", { className: x.subText, id: l }, f)), u.createElement(
      "div",
      { className: x.content },
      u.createElement(
        "div",
        { className: x.header },
        u.createElement("div", h({ id: v, role: "heading", "aria-level": 1 }, i, { className: Z(x.title, i.className) }), c),
        u.createElement(
          "div",
          { className: x.topButton },
          this.props.topButtonsProps.map(function(y, L) {
            return u.createElement(Ue, h({ key: y.uniqueId || L }, y));
          }),
          (m === H.close || t && m !== H.largeHeader) && u.createElement(Ue, { className: x.button, iconProps: { iconName: "Cancel" }, ariaLabel: r, onClick: d })
        )
      ),
      u.createElement(
        "div",
        { className: x.inner },
        u.createElement(
          "div",
          { className: x.innerContent },
          I,
          N.contents
        ),
        N.footers
      )
    );
  }, n.prototype._groupChildren = function() {
    var a = {
      footers: [],
      contents: []
    };
    return u.Children.map(this.props.children, function(t) {
      typeof t == "object" && t !== null && t.type === Xa ? a.footers.push(t) : a.contents.push(t);
    }), a;
  }, n.defaultProps = {
    showCloseButton: !1,
    className: "",
    topButtonsProps: [],
    closeButtonAriaLabel: "Close"
  }, n = Se([
    rt
  ], n), n;
}(u.Component), to = {
  contentLgHeader: "ms-Dialog-lgHeader",
  close: "ms-Dialog--close",
  subText: "ms-Dialog-subText",
  header: "ms-Dialog-header",
  headerLg: "ms-Dialog--lgHeader",
  button: "ms-Dialog-button ms-Dialog-button--close",
  inner: "ms-Dialog-inner",
  content: "ms-Dialog-content",
  title: "ms-Dialog-title"
}, ao = function(e) {
  var n, a, t, o = e.className, r = e.theme, d = e.isLargeHeader, l = e.isClose, f = e.hidden, s = e.isMultiline, i = e.draggableHeaderClassName, v = r.palette, c = r.fonts, m = r.effects, g = r.semanticColors, p = me(to, r);
  return {
    content: [
      d && [
        p.contentLgHeader,
        {
          borderTop: "4px solid " + v.themePrimary
        }
      ],
      l && p.close,
      {
        flexGrow: 1,
        overflowY: "hidden"
      },
      o
    ],
    subText: [
      p.subText,
      c.medium,
      {
        margin: "0 0 24px 0",
        color: g.bodySubtext,
        lineHeight: "1.5",
        wordWrap: "break-word",
        fontWeight: oa.regular
      }
    ],
    header: [
      p.header,
      {
        position: "relative",
        width: "100%",
        boxSizing: "border-box"
      },
      l && p.close,
      i && [
        i,
        {
          cursor: "move"
        }
      ]
    ],
    button: [
      p.button,
      f && {
        selectors: {
          ".ms-Icon.ms-Icon--Cancel": {
            color: g.buttonText,
            fontSize: na.medium
          }
        }
      }
    ],
    inner: [
      p.inner,
      {
        padding: "0 24px 24px",
        selectors: (n = {}, n["@media (min-width: " + be + "px) and (max-width: " + Ce + "px)"] = {
          padding: "0 16px 16px"
        }, n)
      }
    ],
    innerContent: [
      p.content,
      {
        position: "relative",
        width: "100%"
      }
    ],
    title: [
      p.title,
      c.xLarge,
      {
        color: g.bodyText,
        margin: "0",
        minHeight: c.xLarge.fontSize,
        padding: "16px 46px 20px 24px",
        lineHeight: "normal",
        selectors: (a = {}, a["@media (min-width: " + be + "px) and (max-width: " + Ce + "px)"] = {
          padding: "16px 46px 16px 16px"
        }, a)
      },
      d && {
        color: g.menuHeader
      },
      s && { fontSize: c.xxLarge.fontSize }
    ],
    topButton: [
      {
        display: "flex",
        flexDirection: "row",
        flexWrap: "nowrap",
        position: "absolute",
        top: "0",
        right: "0",
        padding: "15px 15px 0 0",
        selectors: (t = {
          "> *": {
            flex: "0 0 auto"
          },
          ".ms-Dialog-button": {
            color: g.buttonText
          },
          ".ms-Dialog-button:hover": {
            color: g.buttonTextHovered,
            borderRadius: m.roundedCorner2
          }
        }, t["@media (min-width: " + be + "px) and (max-width: " + Ce + "px)"] = {
          padding: "15px 8px 0 0"
        }, t)
      }
    ]
  };
}, oo = Q(eo, ao, void 0, { scope: "DialogContent" }), no = Y(), ro = {
  isDarkOverlay: !1,
  isBlocking: !1,
  className: "",
  containerClassName: "",
  topOffsetFixed: !1
}, so = {
  type: H.normal,
  className: "",
  topButtonsProps: []
}, io = function(e) {
  V(n, e);
  function n(a) {
    var t = e.call(this, a) || this;
    return t._getSubTextId = function() {
      var o = t.props, r = o.ariaDescribedById, d = o.modalProps, l = o.dialogContentProps, f = o.subText, s = d && d.subtitleAriaId || r;
      return s || (s = (l && l.subText || f) && t._defaultSubTextId), s;
    }, t._getTitleTextId = function() {
      var o = t.props, r = o.ariaLabelledById, d = o.modalProps, l = o.dialogContentProps, f = o.title, s = d && d.titleAriaId || r;
      return s || (s = (l && l.title || f) && t._defaultTitleTextId), s;
    }, t._id = ra("Dialog"), t._defaultTitleTextId = t._id + "-title", t._defaultSubTextId = t._id + "-subText", process.env.NODE_ENV !== "production" && nt("Dialog", a, {
      isOpen: "hidden",
      type: "dialogContentProps.type",
      subText: "dialogContentProps.subText",
      contentClassName: "dialogContentProps.className",
      topButtonsProps: "dialogContentProps.topButtonsProps",
      className: "modalProps.className",
      isDarkOverlay: "modalProps.isDarkOverlay",
      isBlocking: "modalProps.isBlocking",
      containerClassName: "modalProps.containerClassName",
      onDismissed: "modalProps.onDismissed",
      onLayerDidMount: "modalProps.layerProps.onLayerDidMount",
      ariaDescribedById: "modalProps.subtitleAriaId",
      ariaLabelledById: "modalProps.titleAriaId"
    }), t;
  }
  return n.prototype.render = function() {
    var a, t, o = this.props, r = o.className, d = o.containerClassName, l = o.contentClassName, f = o.elementToFocusOnDismiss, s = o.firstFocusableSelector, i = o.forceFocusInsideTrap, v = o.styles, c = o.hidden, m = o.ignoreExternalFocusing, g = o.isBlocking, p = o.isClickableOutsideFocusTrap, C = o.isDarkOverlay, x = o.isOpen, N = o.onDismiss, I = o.onDismissed, y = o.onLayerDidMount, L = o.responsiveMode, X = o.subText, J = o.theme, re = o.title, fe = o.topButtonsProps, ve = o.type, T = o.minWidth, M = o.maxWidth, k = o.modalProps, ee = h({}, k ? k.layerProps : { onLayerDidMount: y });
    y && !ee.onLayerDidMount && (ee.onLayerDidMount = y);
    var te, R;
    k && k.dragOptions && !k.dragOptions.dragHandleSelector ? (te = "ms-Dialog-draggable-header", R = h(h({}, k.dragOptions), { dragHandleSelector: "." + te })) : R = k && k.dragOptions;
    var F = h(h(h(h({}, ro), { className: r, containerClassName: d, isBlocking: g, isDarkOverlay: C, onDismissed: I }), k), { layerProps: ee, dragOptions: R }), se = h(h(h({ className: l, subText: X, title: re, topButtonsProps: fe, type: ve }, so), this.props.dialogContentProps), { draggableHeaderClassName: te, titleProps: h({
      id: ((a = this.props.dialogContentProps) === null || a === void 0 ? void 0 : a.titleId) || this._defaultTitleTextId
    }, (t = this.props.dialogContentProps) === null || t === void 0 ? void 0 : t.titleProps) }), ie = no(v, {
      theme: J,
      className: F.className,
      containerClassName: F.containerClassName,
      hidden: c,
      dialogDefaultMinWidth: T,
      dialogDefaultMaxWidth: M
    });
    return u.createElement(
      ct,
      h({ elementToFocusOnDismiss: f, firstFocusableSelector: s, forceFocusInsideTrap: i, ignoreExternalFocusing: m, isClickableOutsideFocusTrap: p, responsiveMode: L }, F, { isOpen: x !== void 0 ? x : !c, className: ie.root, containerClassName: ie.main, onDismiss: N || F.onDismiss, subtitleAriaId: this._getSubTextId(), titleAriaId: this._getTitleTextId() }),
      u.createElement(oo, h({ subTextId: this._defaultSubTextId, showCloseButton: F.isBlocking, onDismiss: N }, se), this.props.children)
    );
  }, n.defaultProps = {
    hidden: !0
  }, n = Se([
    rt
  ], n), n;
}(u.Component), lo = {
  root: "ms-Dialog"
}, uo = function(e) {
  var n, a = e.className, t = e.containerClassName, o = e.dialogDefaultMinWidth, r = o === void 0 ? "288px" : o, d = e.dialogDefaultMaxWidth, l = d === void 0 ? "340px" : d, f = e.hidden, s = e.theme, i = me(lo, s);
  return {
    root: [i.root, s.fonts.medium, a],
    main: [
      {
        width: r,
        outline: "3px solid transparent",
        selectors: (n = {}, n["@media (min-width: " + sa + "px)"] = {
          width: "auto",
          maxWidth: l,
          minWidth: r
        }, n)
      },
      !f && { display: "flex" },
      t
    ]
  };
}, ft = Q(io, uo, void 0, { scope: "Dialog" });
ft.displayName = "Dialog";
const co = "_stickerCardContainer_5cqs9_1", mo = "_stickerCardItem_5cqs9_9", fo = "_cardItemStickerWrapper_5cqs9_17", vo = "_cardStickerWrapper_5cqs9_38", le = {
  stickerCardContainer: co,
  stickerCardItem: mo,
  cardItemStickerWrapper: fo,
  cardStickerWrapper: vo
}, ho = (e) => {
  const n = de(() => "#333!important", []), a = de(() => ({
    root: { background: "0 0", backgroundColor: "transparent", color: n },
    icon: { color: n },
    labelDisabled: { color: n },
    rootHovered: {
      background: "0 0",
      backgroundColor: "transparent"
    },
    rootPressed: {
      background: "0 0",
      backgroundColor: "transparent"
    }
  }), []), t = oe(() => {
    const o = [{
      key: e.title,
      text: e.title,
      iconProps: { iconName: e.icon, color: n, styles: { root: { color: n } } },
      canCheck: !1,
      disabled: !0,
      buttonStyles: a
    }];
    return e != null && e.isEditModeEnabled && o.push({
      key: "addSticker",
      text: e.addTitle,
      ariaLabel: e.addTitle,
      iconOnly: !0,
      iconProps: { iconName: "Add", style: { color: n } },
      buttonStyles: a,
      onClick: e.onAddSticker
    }), o;
  }, [e]);
  return /* @__PURE__ */ _.createElement("div", {
    className: e == null ? void 0 : e.className,
    style: { backgroundColor: e.backgroundColor }
  }, /* @__PURE__ */ _.createElement(lt, {
    styles: {
      root: {
        padding: "0 12px",
        background: "0 0",
        height: "40px"
      },
      primarySet: { justifyContent: "space-between" }
    },
    items: t()
  }));
};
function go(e) {
  const [n, a] = ue(e == null ? void 0 : e.stickers);
  ne(() => a(e == null ? void 0 : e.stickers), [e.stickers]);
  const t = oe((l) => {
    a(n == null ? void 0 : n.filter((f) => {
      const s = f.id !== l.id;
      return !s && (e == null ? void 0 : e.onBeforeDeleteSticker) && e.onBeforeDeleteSticker(f), s;
    }));
  }, [n, e == null ? void 0 : e.onBeforeDeleteSticker]), o = oe(() => {
    const l = (n == null ? void 0 : n.length) > 0 ? n[(n == null ? void 0 : n.length) - 1] : null;
    let f = 1;
    l && (f = l.order + 1);
    let s = {
      id: f,
      title: null,
      order: f,
      data: null,
      renderedOnce: !0
    };
    e != null && e.onBeforeAddSticker && (s = { ...e.onBeforeAddSticker(s), renderedOnce: !0 });
    const i = [...n, s];
    a(i), e != null && e.onStickerAdded && e.onStickerAdded(i, (i == null ? void 0 : i.length) === 1 ? 0 : (i == null ? void 0 : i.length) - 1);
  }, [n, e == null ? void 0 : e.onStickerAdded, e == null ? void 0 : e.onBeforeAddSticker]), r = oe((l) => {
    const f = n.map((s) => ((s == null ? void 0 : s.id) === (l == null ? void 0 : l.id) && (s = l, (e == null ? void 0 : e.onStickerChanged) && (l == null ? void 0 : l.title) !== null && (l == null ? void 0 : l.title) !== void 0 && e.onStickerChanged(s)), s));
    a(f);
  }, [n, e == null ? void 0 : e.onStickerChanged]), d = oe((l, f) => {
    const s = [...n], i = s.find((c) => (c == null ? void 0 : c.id) === (l == null ? void 0 : l.id));
    if (f === "up") {
      const c = s.find((m) => (m == null ? void 0 : m.order) === (l == null ? void 0 : l.order) - 1);
      if (c) {
        const m = c.order;
        c.order = l.order, i.order = m;
      }
    } else {
      const c = s.find((m) => (m == null ? void 0 : m.order) === (l == null ? void 0 : l.order) + 1);
      if (c) {
        const m = c.order;
        c.order = l.order, i.order = m;
      }
    }
    const v = [...s].sort((c, m) => (c == null ? void 0 : c.order) - (m == null ? void 0 : m.order));
    a(v), e != null && e.onStickerOrderChanged && e.onStickerOrderChanged(v, l);
  }, [n, e == null ? void 0 : e.onStickerOrderChanged]);
  return { deleteSticker: t, updateSticker: r, addSticker: o, changeOrder: d, stickersState: n };
}
const yo = ({ sticker: e, onChange: n, onChangeOrder: a, onDelete: t, isEditEnabled: o, stickerBgColor: r, renderedNow: d, styles: l }) => {
  const [f, s] = ue(o ? d : !1), [i, v] = ue(e), [c, m] = ue(!1);
  ne(() => {
    v(e);
  }, [e]), ne(() => {
    n(i);
  }, [i]), ne(() => {
    var C;
    const p = document.documentElement;
    (C = p == null ? void 0 : p.style) == null || C.setProperty("--card-sticker-wrapper-bgcolor", r != null ? r : "#feffb7");
  }, [r]);
  const g = de(() => o ? [
    {
      key: "edit",
      text: "Editar",
      onClick: () => s(!0),
      iconProps: { iconName: "Edit" }
    },
    {
      key: "up",
      text: "Mover para cima",
      onClick: () => a(i, "up"),
      iconProps: { iconName: "SortUp" }
    },
    {
      key: "down",
      text: "Mover para baixo",
      onClick: () => a(i, "down"),
      iconProps: { iconName: "SortDown" }
    },
    {
      key: "delete",
      text: "Deletar",
      onClick: () => m(!0),
      iconProps: { iconName: "Delete" }
    }
  ] : [], [o, c, f, i]);
  return /* @__PURE__ */ _.createElement("div", {
    className: l.cardStickerWrapper
  }, f ? /* @__PURE__ */ _.createElement(qe, {
    autoFocus: !0,
    multiline: !0,
    rows: 4,
    onChange: (p, C) => v({ ...i, title: C }),
    value: i == null ? void 0 : i.title,
    onFocus: () => {
      !f && s(!0);
    },
    onBlur: () => s(!1)
  }) : /* @__PURE__ */ _.createElement(_.Fragment, null, /* @__PURE__ */ _.createElement(lt, {
    styles: { root: { backgroundColor: "transparent", padding: 0 } },
    overflowButtonProps: {
      ariaLabel: "Mais a\xE7\xF5es",
      menuProps: {
        items: [],
        isBeakVisible: !0,
        beakWidth: 20,
        gapSpace: 10,
        directionalHint: ot.topCenter,
        styles: { root: { background: "transparent" } }
      },
      menuIconProps: {
        iconName: "MoreVertical",
        styles: { root: { background: "transparent" } }
      },
      styles: { root: { backgroundColor: "transparent" } }
    },
    items: [],
    overflowItems: g,
    farItems: [],
    ariaLabel: "Use left and right arrow keys to navigate between commands"
  }), /* @__PURE__ */ _.createElement(qe, {
    className: "not-editable",
    multiline: !0,
    styles: { root: { backgroundColor: r != null ? r : "#feffb7" }, fieldGroup: { backgroundColor: r != null ? r : "#feffb7" } },
    rows: 4,
    value: i == null ? void 0 : i.title,
    readOnly: !0,
    borderless: !0
  }), /* @__PURE__ */ _.createElement(ft, {
    hidden: !c,
    onDismiss: () => m(!1),
    dialogContentProps: {
      type: H.normal,
      title: "Deletar item",
      closeButtonAriaLabel: "Fechar",
      subText: "Tem certeza que deseja deletar esse item?"
    }
  }, /* @__PURE__ */ _.createElement(mt, null, /* @__PURE__ */ _.createElement(ca, {
    text: "Sim",
    onClick: () => {
      t(i), m(!1);
    }
  }), /* @__PURE__ */ _.createElement(ma, {
    onClick: () => m(!1),
    text: "N\xE3o"
  })))));
}, po = Tt(yo);
function So(e) {
  var l, f, s, i;
  ne(() => {
    var c, m;
    const v = document.documentElement;
    (m = v == null ? void 0 : v.style) == null || m.setProperty("--sticker-card-item-bgcolor", (c = e == null ? void 0 : e.cardBgColor) != null ? c : "#fff");
  }, [e.cardBgColor]);
  const {
    addSticker: n,
    changeOrder: a,
    deleteSticker: t,
    updateSticker: o,
    stickersState: r
  } = go(e), d = de(() => e.headerProps, [e == null ? void 0 : e.headerProps]);
  return /* @__PURE__ */ _.createElement("div", {
    className: `${le.stickerCardContainer} ${(l = e == null ? void 0 : e.classNames) == null ? void 0 : l.root}`
  }, /* @__PURE__ */ _.createElement("div", {
    className: `${le.stickerCardItem} ${(f = e == null ? void 0 : e.classNames) == null ? void 0 : f.rootFirstChild}`
  }, /* @__PURE__ */ _.createElement(ho, {
    className: (s = e == null ? void 0 : e.classNames) == null ? void 0 : s.header,
    isEditModeEnabled: e.isEditModeEnabled,
    onAddSticker: () => {
      n();
    },
    ...d
  }), /* @__PURE__ */ _.createElement("div", {
    className: `${le.cardItemStickerWrapper} ${(i = e == null ? void 0 : e.classNames) == null ? void 0 : i.cardBodyWrapper}`
  }, (r == null ? void 0 : r.length) > 0 ? [...r].sort((v, c) => (v == null ? void 0 : v.order) - (c == null ? void 0 : c.order)).map((v) => {
    var c;
    return /* @__PURE__ */ _.createElement(po, {
      stickerClassName: (c = e == null ? void 0 : e.classNames) == null ? void 0 : c.cardStickerItem,
      stickerBgColor: e == null ? void 0 : e.stickerBgColor,
      sticker: v,
      styles: le,
      renderedNow: v.renderedOnce,
      key: v == null ? void 0 : v.id,
      isEditEnabled: e == null ? void 0 : e.isEditModeEnabled,
      onChange: o,
      onDelete: t,
      onChangeOrder: a
    });
  }) : e.onNoItemsRender ? e.onNoItemsRender() : /* @__PURE__ */ _.createElement("span", {
    style: { color: "#333" }
  }, "No items"))));
}
export {
  So as StickerCard
};
