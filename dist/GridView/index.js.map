{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/styles.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/components/GridView/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"@fluentui/react/lib/Styling\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","createContext","enableFilter","enableSearch","customButtons","setIsFilterPanelOpen","undefined","isOpen","onApply","availableFilters","onCancel","onClose","panelTitle","GridView","props","useGridController","state","handlers","actualRows","allRows","cols","groups","isFilterPanelOpen","panelConfig","onRowClick","setActualRows","setIsFilterPanel","React","Contexts_1","Provider","onSearchItem","text","filteredRows","filter","item","isKeyInsideFileObj","file","keys","_a","includes","itemValue","console","log","toLowerCase","headerOptions","ListOptions_1","style","position","zIndex","DetailsList_1","__assign","detailsListProps","onRenderRow","defaultRender","onClick","styles","cursor","items","columns","groupProps","isAllGroupsCollapsed","gr","isCollapsed","length","collapseAllVisibility","visible","onRenderHeader","group","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","_b","_c","hidden","PanelFilter_1","ListOptions","useContext","searchKey","defaultStyles","container","display","flexDirection","gap","justifyContent","margin","react_1","_","label","fontSize","iconProps","iconName","map","b","className","onChange","newValue","width","icon","color","memo","useState","Map","actualFilteredValues","setActualFilteredValues","useMemo","Panel","lazy","then","default","DropDown","Dropdown","PrimaryButton","DefaultButton","FluentPanel","rootItemKey","option","copyMap","selected","has","set","itemKey","data","fallback","onRenderFooter","marginRight","isFooterAtBottom","onDismiss","options","multiSelect","enableMultiple","opt","mergeStyleSets","fileIconHeaderIcon","padding","fileIconCell","textAlign","selectors","content","verticalAlign","height","visibility","fileIconImg","maxHeight","maxWidth","controlWrapper","flexWrap","exampleToggle","marginBottom","selectionDetails","setCols","rows","setAllRows","currentFilteredRows","setCurFilteredRows","setGroups","useEffect","convertedColumns","fieldName","onRender","_2","fieldValue","Utils","findObjectByPath","split","dateConvertionOptions","shouldConvertToLocaleString","Utils_1","convertIsoToLocaleString","locales","formatOptions","listType","styles_1","iconClassName","ariaLabel","isIconOnly","minWidth","onColumnClick","src","iconUrl","alt","fileType","isRowHeader","isResizable","isSorted","isSortedDescending","sortAscendingAriaLabel","sortDescendingAriaLabel","isPadded","__read","rowsAsNode","nodes","groups_1","processNodes","column","newColumns","slice","currColumn","currCol","forEach","newCol","newItems","copyAndSort","buildFilters","filters","index","validRows","every","idx","toString","uniqueOptions","obj","pos","arr","mapObj","indexOf","push","selectedItems","andFilterAggregation","row","sameKeyFromMap","__spreadArray","k","isSameValue","Id","entries","filterPanelTitle","objectIn","path","e","date","Date","isNaN","getTime","isIsoDate","test","Intl","DateTimeFormat","format","nodeItems","level","nodeItem","newGroup","title","startIndex","count","apply","columnKey","sort","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/components/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../../models/interfaces/IGridView\";\r\nimport type { IPanelFilterProps } from '../../models/interfaces/IPanelFilter';\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps>({ enableFilter: true, enableSearch: true, customButtons: [], setIsFilterPanelOpen: undefined });\r\nexport const FilterPaneContext = createContext<IPanelFilterProps>({ isOpen: false, onApply: undefined, availableFilters: [], onCancel: undefined, onClose: undefined, panelTitle: '' });","import * as React from 'react';\r\nimport { useGridController } from './useGridController';\r\nimport { FilterPaneContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps } from '../../models/interfaces/IGridView';\r\nimport { PanelFilter } from './PanelFilter';\r\nimport { ListOptions } from './ListOptions';\r\n\r\nexport const GridView = (props: IGridListProps<any>) => {   \r\n    const {state, handlers} = useGridController(props);\r\n    const {actualRows, allRows, cols, groups, isFilterPanelOpen, panelConfig} = state;\r\n    const {onRowClick, setActualRows, setIsFilterPanel} = handlers;\r\n\r\n    return (\r\n        <FilterPaneContext.Provider value={panelConfig}>\r\n            <ListOptionsContext.Provider value={{\r\n                onSearchItem: (text, key) => {\r\n                    const filteredRows = text ?\r\n                        allRows?.filter(item => {\r\n                            const isKeyInsideFileObj = item?.file ? Object.keys(item?.file)?.includes(key as unknown as string) : false;\r\n                            const itemValue: string = isKeyInsideFileObj ? item?.file[key] : item?.[key];\r\n                            console.log(key, itemValue)\r\n                            return itemValue?.toLowerCase().includes(text.toLowerCase());\r\n                        }) : allRows;\r\n                    setActualRows(filteredRows);\r\n                },\r\n                setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n                ...props?.headerOptions\r\n            }}>\r\n                <div>\r\n                    <ListOptions />\r\n                    <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0 }}>\r\n                        <DetailsList\r\n                            {...props?.detailsListProps}\r\n                            onRenderRow={(p, defaultRender) => <div onClick={() => onRowClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onRowClick ? 'pointer' : 'default' } } })}</div>}\r\n                            items={actualRows} columns={cols} groups={groups}\r\n                            groupProps={{\r\n                                isAllGroupsCollapsed: props?.groups ? props?.groups.filter(gr => !gr?.isCollapsed)?.length === 0 : true,\r\n                                collapseAllVisibility: CollapseAllVisibility.visible,\r\n                                onRenderHeader: (props, defaultRender) => {\r\n                                    if (!props.group!.name)\r\n                                        return <></>;\r\n                                    return defaultRender(props);\r\n                                }\r\n                            }}\r\n                            layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                            onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                                <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                    <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                                </Sticky>)}\r\n                            checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                        />\r\n                    </div>\r\n                    {isFilterPanelOpen && <PanelFilter />}\r\n                </div>\r\n            </ListOptionsContext.Provider>\r\n        </FilterPaneContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {ListOptionsContext} from './Contexts';\r\n\r\nexport const ListOptions = () => {\r\n    const {customButtons, enableFilter, enableSearch, searchKey, onSearchItem, setIsFilterPanelOpen} = React.useContext(ListOptionsContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        <DefaultButton \r\n            onClick={ _ => ''} styles={{label: {fontSize: 14}}} iconProps={{iconName: 'GroupList'}} />\r\n        <DefaultButton \r\n            onClick={ _ => ''} styles={{label: {fontSize: 14}}} iconProps={{iconName: 'ViewList'}} />\r\n        {customButtons?.length > 0 && customButtons?.map(b => \r\n        <PrimaryButton className={b?.className} styles={{label: {fontSize: 14}}} {...b?.props}>{b?.text}</PrimaryButton>)}\r\n        {(enableSearch && searchKey) && \r\n        <TextField \r\n            onChange={(_, newValue) => onSearchItem(newValue, searchKey)}\r\n            iconProps={{iconName: 'Search'}} styles={{root: {width: 320}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => setIsFilterPanelOpen(true)} styles={{label: {fontSize: 14}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense, useState } from 'react';\r\nimport { FilterPaneContext } from './Contexts';\r\nimport type { FilterOption, SelectedItemsMap } from '../../models/interfaces/IPanelFilter';\r\n\r\nexport const PanelFilter = React.memo(() => {\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const { isOpen, onClose, availableFilters, panelTitle, onCancel, onApply} = useContext(FilterPaneContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton];\r\n    }, []);\r\n\r\n    const onChange = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string); \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    if (!isOpen)\r\n        return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div>\r\n                    <PrimaryButton onClick={() => onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                        Aplicar\r\n                    </PrimaryButton>\r\n                    <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map(filter => {\r\n                    const options = filter?.options?.map<FilterOption>(({ key, text, data }) => {\r\n                        return {\r\n                            key,\r\n                            text,\r\n                            data\r\n                        };\r\n                    });\r\n                    return (\r\n                        <Dropdown\r\n                            key={filter?.key} options={options}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onChange(filter?.key, opt)} />\r\n                    )\r\n                })}\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n});","export {GridView} from './GridView';","import { mergeStyleSets } from \"@fluentui/react/lib/Styling\";\r\n\r\nexport const classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px',\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden',\r\n            },\r\n        },\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px',\r\n    },\r\n    controlWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    exampleToggle: {\r\n        display: 'inline-block',\r\n        marginBottom: '10px',\r\n        marginRight: '30px',\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px',\r\n    },\r\n});","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { classNames } from './styles';\r\nimport type { IGridListProps, IRow } from '../../models/interfaces/IGridView';\r\nimport { Utils } from '../../helpers/Utils';\r\nimport type { FilterOption, IAvailableFitlers, IPanelFilterProps } from '../../models/interfaces/IPanelFilter';\r\nimport type { IColumn, IGroup } from '@fluentui/react/lib/DetailsList';\r\n\r\nexport function useGridController(props: IGridListProps<any>) {\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState(props?.rows ?? []);\r\n    const [currentFilteredRows, setCurFilteredRows] = useState<IRow[]>([]);\r\n    const [groups, setGroups] = useState(props?.groups);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        if (props?.columns?.length) {\r\n            const columns = props?.columns;\r\n            const convertedColumns = columns.map(c => {\r\n                if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.findObjectByPath(item, c?.fieldName?.split('.')) as any ?? '-';\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n\r\n                    return c;\r\n                } else if (c?.dateConvertionOptions?.shouldConvertToLocaleString) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConvertionOptions?.locales, c?.dateConvertionOptions?.formatOptions);\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                }\r\n                return c;\r\n            })\r\n            setCols(convertedColumns);\r\n        }\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        if (props.listType === 'file' || props.listType === 'folder')\r\n            setCols([{\r\n                key: 'fileType',\r\n                name: 'File Type',\r\n                className: classNames.fileIconCell,\r\n                iconClassName: classNames.fileIconHeaderIcon,\r\n                ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n                iconName: 'Page',\r\n                isIconOnly: true,\r\n                fieldName: 'name',\r\n                minWidth: 16,\r\n                maxWidth: 16,\r\n                onColumnClick,\r\n                onRender: (item: IRow) => (<img src={item?.file?.iconUrl} className={classNames.fileIconImg} alt={`${item?.file?.fileType} file icon`} />),\r\n            },\r\n            {\r\n                key: 'name',\r\n                name: 'Nome',\r\n                fieldName: 'name',\r\n                minWidth: 210,\r\n                maxWidth: 350,\r\n                isRowHeader: true,\r\n                isResizable: true,\r\n                isSorted: true,\r\n                isSortedDescending: false,\r\n                sortAscendingAriaLabel: 'Sorted A to Z',\r\n                sortDescendingAriaLabel: 'Sorted Z to A',\r\n                onColumnClick,\r\n                onRender: (item: IRow) => (<span>{item?.file?.name}</span>),\r\n                data: 'string',\r\n                isPadded: true,\r\n            }, ...cols]);\r\n        else setCols(props?.columns);\r\n    }, [props?.listType]);\r\n\r\n    useEffect(() => {\r\n        setActualRows(props?.rows);\r\n        setAllRows(props?.rows)\r\n    }, [props?.rows?.length]);\r\n\r\n    useEffect(() => {\r\n        if (props?.listType === 'folder' && props?.rowsAsNode) {\r\n            const nodes = props.rowsAsNode;\r\n            const items: IRow[] = [];\r\n            const groups: IGroup[] = [];\r\n            Utils.processNodes(nodes, groups, items, 0);\r\n            setActualRows(items);\r\n            setGroups(groups);\r\n        }\r\n    }, [props?.rowsAsNode, props?.listType]);\r\n\r\n    /**TO-DO: Implement this method to work with `INode[]` */\r\n    const onColumnClick = (_: unknown, column: IColumn): void => {\r\n        if (props?.rowsAsNode)\r\n            return;\r\n        const newColumns: IColumn[] = cols.slice();\r\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\r\n        newColumns.forEach((newCol: IColumn) => {\r\n            if (newCol === currColumn) {\r\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n                currColumn.isSorted = true;\r\n            } else {\r\n                newCol.isSorted = false;\r\n                newCol.isSortedDescending = true;\r\n            }\r\n        });\r\n        const newItems = Utils.copyAndSort(actualRows, currColumn?.fieldName!, currColumn?.isSortedDescending);\r\n        setCols(newColumns);\r\n        setActualRows(newItems);\r\n    };\r\n\r\n    const onRowClick = (item: IRow) => {\r\n        if (props?.onRowClick)\r\n            props?.onRowClick(item);\r\n    }\r\n\r\n    const buildFilters = (): IAvailableFitlers[] => {\r\n        const filters: IAvailableFitlers[] = [];\r\n        for (let index = 0; index < cols.length; index++) {\r\n            const c = cols[index];\r\n            const validRows = allRows?.every(r => r[c?.fieldName ?? c?.key]);\r\n            if (validRows) {\r\n                const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                    return {\r\n                        key: idx + \"_\" + c?.key,\r\n                        text: data?.[c?.key ?? c?.fieldName ?? c?.key]?.toString(),\r\n                        data\r\n                    };\r\n                });\r\n                //Remove duplicates from options checking if the text repeats.\r\n                const uniqueOptions = options?.filter((obj, pos, arr) => {\r\n                    return arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos;\r\n                });\r\n\r\n                filters.push({\r\n                    key: c?.key,\r\n                    options: uniqueOptions,\r\n                    enableMultiple: true,\r\n                    name: c?.name\r\n                });\r\n            }\r\n        }\r\n\r\n        return filters;\r\n    }\r\n\r\n    const panelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: (selectedItems) => {\r\n            //filter the rows according to the selected items, where the key is the rootItemKey\r\n            let andFilterAggregation: IRow[] = currentFilteredRows;\r\n            for (let idx = 0; idx < allRows?.length; idx++) {\r\n                const row = allRows[idx];\r\n                for (const [key, _] of Object.entries(row)) {\r\n\r\n                    const sameKeyFromMap = [...selectedItems].filter((s) => {\r\n                        const k = s[0];\r\n                        return k.split(\"_\")[1] === key;\r\n                    });\r\n                    if (sameKeyFromMap?.length > 0) {\r\n                        sameKeyFromMap.forEach((_, idx) => {\r\n                            const isSameValue = sameKeyFromMap[idx][1]['data'][key] === row[key];\r\n                            if (isSameValue && !andFilterAggregation.map(r => r?.Id).includes(row?.Id)) {\r\n                                andFilterAggregation = [...andFilterAggregation, row];\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n            }\r\n            console.log(andFilterAggregation);\r\n            if (andFilterAggregation.length > 0) {\r\n                setActualRows(andFilterAggregation)\r\n                setCurFilteredRows(andFilterAggregation);\r\n            } else { \r\n                setActualRows(allRows);\r\n                setCurFilteredRows([]);\r\n            }\r\n        },\r\n        onCancel: () => { setIsFilterPanel(false); setActualRows(allRows); setCurFilteredRows([])},\r\n        onClose: () =>  { setIsFilterPanel(false); setActualRows(allRows); setCurFilteredRows([])},\r\n        //The available filters are the ones that are defined in the `columns` prop, and the options are the rows that are defined in the `rows` prop according to the key\r\n        availableFilters: buildFilters(),\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            cols,\r\n            groups,\r\n            panelConfig,\r\n            allRows,\r\n            isFilterPanelOpen\r\n        },\r\n        handlers: {\r\n            onRowClick,\r\n            setActualRows,\r\n            setIsFilterPanel\r\n        }\r\n    }\r\n}","import type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { INode, IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport class Utils {\r\n\r\n    public static findObjectByPath<T, R extends any>(objectIn: T, path: string[]): R {\r\n        try {\r\n            let obj = objectIn;\r\n            for (let i = 0; i <= path.length - 1; i++) {\r\n                const item = path[i]\r\n                obj = obj[item]\r\n            }\r\n            return obj as R ?? null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    public static processNodes(nodeItems: INode[] | undefined, groups: IGroup[], items: IRow[], level: number): void {\r\n        // end of recursion\r\n        if (!nodeItems || !nodeItems?.length)\r\n            return;\r\n        // processing current level of the tree\r\n        nodeItems.forEach(nodeItem => {\r\n            const newGroup: IGroup = {\r\n                key: nodeItem.key,\r\n                name: nodeItem.title,\r\n                startIndex: items?.length,\r\n                count: 0,\r\n                children: [],\r\n                level: level, // level is incremented on each call of the recursion\r\n                data: nodeItem // storing initial INode instance in the group's data\r\n            };\r\n\r\n            groups.push(newGroup);\r\n            if (nodeItem?.items && nodeItem?.items?.length) {\r\n\r\n                // adding items to the flat array\r\n                items.push(...nodeItem?.items);\r\n            }\r\n\r\n            // processing child nodes\r\n            Utils.processNodes(nodeItem.children, newGroup.children!, items, level + 1);\r\n            // current group count is a sum of group's leaf items and leaf items in all child nodes\r\n            newGroup.count = items?.length - newGroup.startIndex;\r\n        });\r\n    }\r\n\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"@fluentui/react/lib/Styling\");","module.exports = require(\"react\");"],"sourceRoot":""}