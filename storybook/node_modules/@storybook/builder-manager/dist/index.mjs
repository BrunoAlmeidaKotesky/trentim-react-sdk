var a=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof require!="undefined"?require:t)[r]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import{dirname as _,join as f,parse as K}from"path";import T from"fs-extra";import q from"express";import{logger as F}from"@storybook/node-logger";import{globalExternals as Q}from"@fal-works/esbuild-plugin-global-externals";import{pnpPlugin as X}from"@yarnpkg/esbuild-plugin-pnp";import Y from"esbuild-plugin-alias";import oe,{dirname as I,join as A}from"path";import C from"fs-extra";import{render as U}from"ejs";var v=async e=>A(I(a.resolve("@storybook/builder-manager/package.json")),"templates",e),L=async e=>{let t=await v(e);return C.readFile(t,"utf8")};var D=async(e,t,r,s,i,o,n,l,c,{versionCheck:u,releaseNotesData:w,docsMode:x,previewUrl:O,serverChannelUrl:m})=>{let d=await r,g=await t,b=await e;return U(b,{title:g?`${g} - Storybook`:"Storybook",files:{js:i,css:s},globals:{FEATURES:JSON.stringify(await o,null,2),REFS:JSON.stringify(await n,null,2),LOGLEVEL:JSON.stringify(await l,null,2),DOCS_OPTIONS:JSON.stringify(await c,null,2),VERSIONCHECK:JSON.stringify(JSON.stringify(u),null,2),RELEASE_NOTES_DATA:JSON.stringify(JSON.stringify(w),null,2),PREVIEW_URL:JSON.stringify(O,null,2),SERVER_CHANNEL_URL:JSON.stringify(m,null,2)},head:d?await C.readFile(d,"utf8"):""})};import{definitions as M}from"@storybook/manager/dist/globals";import{join as V}from"path";import{getRefs as G}from"@storybook/core-common";var j=e=>{try{return Promise.resolve(a.resolve(e))}catch{return Promise.resolve(!1)}};var B=async e=>{let t=G(e),r=e.presets.apply("features"),s=e.presets.apply("logLevel"),i=e.presets.apply("title"),o=e.presets.apply("docs",{}),n=L("template.ejs"),l=j(V(e.configDir,"manager-head.html")),[c,u]=await Promise.all([k.get(),J(e)]);return{refs:t,features:r,title:i,docsOptions:o,template:n,customHead:l,instance:c,config:u,logLevel:s}};import H from"fs-extra";import{join as W}from"path";import $ from"slash";async function N(e,t){let r=await Promise.all(t?.map(async o=>{let{location:n,url:l}=z(o,e);return await H.ensureFile(n),await H.writeFile(n,o.contents),l})||[]),s=r.filter(o=>o.endsWith(".mjs"));return{cssFiles:r.filter(o=>o.endsWith(".css")),jsFiles:s}}function z(e,t){let r=e.path.replace(t,""),s=W(t,r),i=`./sb-addons${$(r).split("/").map(encodeURIComponent).join("/")}`;return{location:s,url:i}}var p,y,J=async e=>{let[t,r,s]=await Promise.all([e.presets.apply("managerEntries",[]),j(f(e.configDir,"manager")),v("addon.tsconfig.json")]);return{entryPoints:r?[...t,r]:t,outdir:f(e.outputDir||"./","sb-addons"),format:"esm",write:!1,outExtension:{".js":".mjs"},loader:{".js":"jsx",".png":"dataurl",".gif":"dataurl",".jpg":"dataurl",".jpeg":"dataurl",".svg":"dataurl",".webp":"dataurl",".webm":"dataurl"},target:["chrome100"],platform:"browser",bundle:!0,minify:!1,sourcemap:!0,jsxFactory:"React.createElement",jsxFragment:"React.Fragment",jsx:"transform",jsxImportSource:"react",tsconfig:s,legalComments:"external",plugins:[Y({process:a.resolve("process/browser.js"),util:a.resolve("util/util.js"),assert:a.resolve("browser-assert")}),Q(M),X()],define:{"process.env.NODE_ENV":"'production'","process.env":"{}",global:"window",module:"{}"}}},k={get:async()=>{let{build:e}=await import("esbuild");return e}},Z=async function*({startTime:t,options:r,router:s}){F.info("=> Starting manager..");let{config:i,customHead:o,features:n,instance:l,refs:c,template:u,title:w,logLevel:x,docsOptions:O}=await B(r);yield;let m=i.outdir;await T.remove(m),yield,p=await l({...i,watch:!0}),yield;let d=f(_(a.resolve("@storybook/manager/package.json")),"dist");s.use("/sb-addons",q.static(m)),s.use("/sb-manager",q.static(d));let{cssFiles:g,jsFiles:b}=await N(m,p?.outputFiles);yield;let S=await D(u,w,o,g,b,n,c,x,O,r);return yield,s.use("/",({path:P},E,R)=>{P==="/"?E.status(200).send(S):R()}),{bail:te,stats:{toJson:()=>({})},totalTime:process.hrtime(t)}},ee=async function*({startTime:t,options:r}){if(!r.outputDir)throw new Error("outputDir is required");F.info("=> Building manager..");let{config:s,customHead:i,features:o,instance:n,refs:l,template:c,title:u,logLevel:w,docsOptions:x}=await B(r);yield;let O=s.outdir,m=f(_(a.resolve("@storybook/manager/package.json")),"dist"),d=f(r.outputDir,"sb-manager");p=await n({...s,minify:!0,watch:!1}),yield;let g=T.copy(m,d,{filter:E=>{let{ext:R}=K(E);return R?R===".mjs":!0}}),{cssFiles:b,jsFiles:S}=await N(O,p?.outputFiles);yield;let P=await D(c,u,i,b,S,o,l,w,x,r);return await Promise.all([T.writeFile(f(r.outputDir,"index.html"),P),g]),F.trace({message:"=> Manager built",time:process.hrtime(t)}),{toJson:()=>({})}},te=async()=>{if(y)try{await y.throw(new Error)}catch{}if(p&&p.stop)try{p.stop(),F.warn("Force closed manager build")}catch{F.warn("Unable to close manager build!")}},Ce=async e=>{y=Z(e);let t;do t=await y.next();while(!t.done);return t.value},Le=async e=>{y=ee(e);let t;do t=await y.next();while(!t.done);return t.value},Me=[],Je=[];export{te as bail,Le as build,Me as corePresets,k as executor,J as getConfig,Je as overridePresets,Ce as start};
