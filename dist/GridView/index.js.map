{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/module.js","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/Contexts.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/GridView.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/ListOptions.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/PanelFilter.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/index.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/styles.ts","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/GridView/useGridController.tsx","webpack:///dist/F:/Projetos Individuais/ReactLibraries/trentim-react-sdk/src/helpers/Utils.ts","webpack:///external \"@fluentui/react\"","webpack:///external \"@fluentui/react/lib/Button\"","webpack:///external \"@fluentui/react/lib/DetailsList\"","webpack:///external \"@fluentui/react/lib/Dropdown\"","webpack:///external \"@fluentui/react/lib/Panel\"","webpack:///external \"@fluentui/react/lib/Pickers\"","webpack:///external \"@fluentui/react/lib/Sticky\"","webpack:///external \"@fluentui/react/lib/Styling\"","webpack:///external \"react\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","webpackPolyfill","deprecate","paths","children","createContext","enableFilter","enableSearch","customButtons","setIsFilterPanelOpen","undefined","isOpen","onApply","availableFilters","onCancel","onClose","panelTitle","actualFilteredValues","Map","setActualFilteredValues","onOpen","GridView","props","useGridController","state","handlers","actualRows","allRows","cols","groups","isFilterPanelOpen","panelConfig","onRowClick","setActualRows","setIsFilterPanel","React","Contexts_1","Provider","onSearchItem","text","filteredRows","filter","item","isKeyInsideFileObj","file","keys","_a","includes","itemValue","toLowerCase","headerOptions","ListOptions_1","style","position","zIndex","DetailsList_1","__assign","detailsListProps","onRenderRow","defaultRender","onClick","styles","cursor","items","columns","groupProps","isAllGroupsCollapsed","gr","isCollapsed","length","collapseAllVisibility","visible","onRenderHeader","group","layoutMode","fixedColumns","isHeaderVisible","onRenderDetailsHeader","headerProps","Sticky_1","stickyPosition","Header","stickyBackgroundColor","checkboxVisibility","_b","_c","hidden","PanelFilter_1","ListOptions","useContext","searchKey","defaultStyles","container","display","flexDirection","gap","justifyContent","margin","react_1","_","label","fontSize","iconProps","iconName","map","b","className","onChange","newValue","width","icon","color","PanelFilter","useMemo","Panel","lazy","then","default","DropDown","Dropdown","PrimaryButton","DefaultButton","TagPicker","FluentPanel","lastAddedTag","useRef","onAddOrRemoveToMap","rootItemKey","option","copyMap","selected","has","set","itemKey","data","useEffect","listContainsTagList","tag","tagList","some","compareTag","getDefaultDropdownSelectedKeys","selectedKeys","forEach","k","push","getDefaultSelectedTag","keyToFilter","selectedTags","keyKind","split","fallback","onRenderFooter","padding","marginRight","isFooterAtBottom","onDismiss","options","renderAs","defaultSelectedKeys","multiSelect","enableMultiple","opt","getTextFromItem","defaultSelectedItems","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","loadingText","pickerCalloutProps","doNotLayer","tags","current","onItemSelected","selectedItem","onResolveSuggestions","currentFilter","result","indexOf","f","memo","mergeStyleSets","fileIconHeaderIcon","fileIconCell","textAlign","selectors","content","verticalAlign","height","visibility","fileIconImg","maxHeight","maxWidth","controlWrapper","flexWrap","exampleToggle","marginBottom","selectionDetails","useState","setCols","rows","setAllRows","currentFilteredRows","setCurFilteredRows","setGroups","convertedColumns","fieldName","onRender","_2","fieldValue","Utils","findObjectByPath","dateConvertionOptions","shouldConvertToLocaleString","Utils_1","convertIsoToLocaleString","locales","formatOptions","listType","styles_1","iconClassName","ariaLabel","isIconOnly","minWidth","onColumnClick","src","iconUrl","alt","fileType","isRowHeader","isResizable","isSorted","isSortedDescending","sortAscendingAriaLabel","sortDescendingAriaLabel","isPadded","__read","rowsAsNode","nodes","groups_1","processNodes","column","newColumns","slice","currColumn","currCol","newCol","newItems","copyAndSort","buildFilters","filters","index","col","renderFilterAs","_d","validRows","every","obj","getNestedObject","_e","idx","stringObject","toString","uniqueOptions","pos","arr","mapObj","groupMaps","selectedItems","mapsByKeyKind","keyName","doesntHaveKey","sameMapsList","__spreadArray","thisKindMap_1","onApplyFilter","size","groupedMaps","allGroupMapKeys","flatMap","orFilterAggregation","row","_f","realKey","isKeyValueAObject","constructor","keysFromObject","getAllNestedObjectKeys","concat","join","thisKeyMap","v","currentFilteredIds","Id","mapKeyWithDots","obj1","obj2","filterPanelTitle","objectIn","path","e","date","Date","isNaN","getTime","isIsoDate","test","Intl","DateTimeFormat","format","nodeItems","level","nodeItem","newGroup","title","startIndex","count","apply","columnKey","sort","nestedObj","pathArr","reduce","acc","require"],"mappings":"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","file":"GridView/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GridView/index.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { createContext } from \"react\";\r\nimport type { IListOptionsProps } from \"../models/interfaces/IGridView\";\r\nimport type { IPanelFilterProps } from '../models/interfaces/IPanelFilter';\r\n\r\nexport const ListOptionsContext = createContext<IListOptionsProps>({ enableFilter: true, enableSearch: true, customButtons: [], setIsFilterPanelOpen: undefined });\r\nexport const FilterPaneContext = createContext<IPanelFilterProps>({ \r\n    isOpen: false, \r\n    onApply: undefined, \r\n    availableFilters: [], \r\n    onCancel: undefined, \r\n    onClose: undefined, \r\n    panelTitle: '',\r\n    actualFilteredValues: new Map(),\r\n    setActualFilteredValues: undefined,\r\n    onOpen: undefined\r\n});","import * as React from 'react';\r\nimport { useGridController } from './useGridController';\r\nimport { FilterPaneContext, ListOptionsContext } from './Contexts';\r\nimport { CheckboxVisibility, CollapseAllVisibility, DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';\r\nimport { Sticky, StickyPositionType } from '@fluentui/react/lib/Sticky';\r\nimport type { IGridListProps } from '../models/interfaces/IGridView';\r\nimport PanelFilter from './PanelFilter';\r\nimport { ListOptions } from './ListOptions';\r\n\r\nexport const GridView = (props: IGridListProps<any>) => {   \r\n    const {state, handlers} = useGridController(props);\r\n    const {actualRows, allRows, cols, groups, isFilterPanelOpen, panelConfig} = state;\r\n    const {onRowClick, setActualRows, setIsFilterPanel} = handlers;\r\n\r\n    return (\r\n        <FilterPaneContext.Provider value={panelConfig}>\r\n            <ListOptionsContext.Provider value={{\r\n                onSearchItem: (text, key) => {\r\n                    const filteredRows = text ?\r\n                        allRows?.filter(item => {\r\n                            const isKeyInsideFileObj = item?.file ? Object.keys(item?.file)?.includes(key as unknown as string) : false;\r\n                            const itemValue: string = isKeyInsideFileObj ? item?.file[key] : item?.[key];\r\n                            return itemValue?.toLowerCase().includes(text.toLowerCase());\r\n                        }) : allRows;\r\n                    setActualRows(filteredRows);\r\n                },\r\n                setIsFilterPanelOpen: (value) => { setIsFilterPanel(value); },\r\n                ...props?.headerOptions\r\n            }}>\r\n                <div>\r\n                    <ListOptions />\r\n                    <div data-is-scrollable=\"true\" style={{ position: 'relative', zIndex: 0 }}>\r\n                        <DetailsList\r\n                            {...props?.detailsListProps}\r\n                            onRenderRow={(p, defaultRender) => <div onClick={() => onRowClick(p?.item)}>{defaultRender({ ...p, styles: { root: { cursor: props?.onRowClick ? 'pointer' : 'default' } } })}</div>}\r\n                            items={actualRows} columns={cols} groups={groups}\r\n                            groupProps={{\r\n                                isAllGroupsCollapsed: props?.groups ? props?.groups.filter(gr => !gr?.isCollapsed)?.length === 0 : true,\r\n                                collapseAllVisibility: CollapseAllVisibility.visible,\r\n                                onRenderHeader: (props, defaultRender) => {\r\n                                    if (!props.group!.name)\r\n                                        return <></>;\r\n                                    return defaultRender(props);\r\n                                }\r\n                            }}\r\n                            layoutMode={DetailsListLayoutMode.fixedColumns} isHeaderVisible={true}\r\n                            onRenderDetailsHeader={(headerProps, defaultRender) => (\r\n                                <Sticky key={headerProps?.key} stickyPosition={StickyPositionType.Header} stickyBackgroundColor=\"transparent\">\r\n                                    <div key={headerProps?.key}>{defaultRender!(headerProps)}</div>\r\n                                </Sticky>)}\r\n                            checkboxVisibility={props?.detailsListProps?.checkboxVisibility ?? CheckboxVisibility.hidden}\r\n                        />\r\n                    </div>\r\n                    {isFilterPanelOpen && <PanelFilter />}\r\n                </div>\r\n            </ListOptionsContext.Provider>\r\n        </FilterPaneContext.Provider>);\r\n}","import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\nimport { DefaultButton, PrimaryButton, TextField } from '@fluentui/react'\r\nimport {ListOptionsContext} from './Contexts';\r\n\r\nexport const ListOptions = () => {\r\n    const {customButtons, enableFilter, enableSearch, searchKey, onSearchItem, setIsFilterPanelOpen} = React.useContext(ListOptionsContext);\r\n\r\n    const defaultStyles: Record<string, CSSProperties> = {\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: 4,\r\n            justifyContent: 'end',\r\n            margin: '8px 0'\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div data-class-name=\"grid-view-header-container\" style={defaultStyles.container}>\r\n        <DefaultButton \r\n            onClick={ _ => ''} styles={{label: {fontSize: 14}}} iconProps={{iconName: 'GroupList'}} />\r\n        <DefaultButton \r\n            onClick={ _ => ''} styles={{label: {fontSize: 14}}} iconProps={{iconName: 'ViewList'}} />\r\n        {customButtons?.length > 0 && customButtons?.map(b => \r\n        <PrimaryButton className={b?.className} styles={{label: {fontSize: 14}}} {...b?.props}>{b?.text}</PrimaryButton>)}\r\n        {(enableSearch && searchKey) && \r\n        <TextField \r\n            onChange={(_, newValue) => onSearchItem(newValue, searchKey)}\r\n            iconProps={{iconName: 'Search'}} styles={{root: {width: 320}, icon: {color: '[theme: themePrimary, default: #0078D4]'}}} />}\r\n        {enableFilter && \r\n        <DefaultButton \r\n            onClick={_ => setIsFilterPanelOpen(true)} styles={{label: {fontSize: 14}}} iconProps={{iconName: 'Filter'}} />}\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { lazy, useContext, useMemo, Suspense, useRef, useEffect } from 'react';\r\nimport { FilterPaneContext } from './Contexts';\r\nimport type { FilterOption } from '../models/interfaces/IPanelFilter';\r\nimport type { ITag } from '@fluentui/react/lib/Pickers';\r\n\r\nfunction PanelFilter() {\r\n    const { isOpen, onClose, availableFilters, panelTitle, onCancel, onApply, actualFilteredValues, setActualFilteredValues, onOpen } = useContext(FilterPaneContext);\r\n    const [FluentPanel, Dropdown, PrimaryButton, DefaultButton, TagPicker] = useMemo(() => {\r\n        const Panel = lazy(() => import('@fluentui/react/lib/Panel').then(({ Panel }) => ({ default: Panel })));\r\n        const DropDown = lazy(() => import('@fluentui/react/lib/Dropdown').then(({ Dropdown }) => ({ default: Dropdown })));\r\n        const PrimaryButton = lazy(() => import('@fluentui/react/lib/Button').then(({ PrimaryButton }) => ({ default: PrimaryButton })));\r\n        const DefaultButton = lazy(() => import('@fluentui/react/lib/Button').then(({ DefaultButton }) => ({ default: DefaultButton })));\r\n        const TagPicker = lazy(() => import('@fluentui/react/lib/Pickers').then(({ TagPicker }) => ({ default: TagPicker })));\r\n        return [Panel, DropDown, PrimaryButton, DefaultButton, TagPicker];\r\n    }, []);\r\n    const lastAddedTag = useRef<FilterOption>(null);\r\n\r\n    const onAddOrRemoveToMap = (rootItemKey: string, option: FilterOption) => {\r\n        //If the current option is selected and is not already on the actualFilteredValues map, add it\r\n        //else if the current option is not select and all the other options are not select too, remove the key from the map\r\n        const copyMap = new Map(actualFilteredValues);\r\n        if(!option.key) return;\r\n        if (option.selected && !copyMap.has(option?.key as string)) {\r\n            copyMap.set(option.key as string, { rootItemKey, itemKey: option.key, data: option?.data, text: option?.text });\r\n        }\r\n        else if (!option.selected && copyMap.has(option?.key as string)) {\r\n            copyMap.delete(option?.key as string); \r\n        }\r\n        setActualFilteredValues(copyMap);\r\n    }\r\n\r\n    useEffect(() => { if(onOpen) onOpen();}, []);\r\n\r\n    const listContainsTagList = (tag: FilterOption, tagList?: FilterOption[]) => {\r\n        if (!tagList || !tagList.length || tagList.length === 0) \r\n          return false;\r\n        return tagList.some(compareTag => compareTag?.key === tag?.key);\r\n    };\r\n\r\n    const getDefaultDropdownSelectedKeys = () => {\r\n        const selectedKeys: string[] = [];\r\n        actualFilteredValues.forEach((_, k) => {\r\n            selectedKeys.push(k);\r\n        })\r\n        return selectedKeys;\r\n    }\r\n\r\n    const getDefaultSelectedTag = (keyToFilter: string) => {\r\n        const selectedTags: FilterOption[] = [];\r\n        actualFilteredValues.forEach((d, k) => {\r\n            const keyKind = k?.split('_')[1];\r\n            if(keyKind === keyToFilter) \r\n                selectedTags.push({\r\n                    key: keyKind,\r\n                    text: d?.text,\r\n                    data: d?.data,\r\n                    selected: true,\r\n                    name: d?.text\r\n                });\r\n        })\r\n        return selectedTags as unknown as ITag[];\r\n    }\r\n\r\n    if (!isOpen)\r\n        return null;\r\n    return (\r\n        <Suspense fallback={<div>...</div>}>\r\n            <FluentPanel \r\n                onRenderFooter={_ => (<div style={{padding: 20}}>\r\n                    <Suspense fallback={'...'}>\r\n                        <PrimaryButton onClick={() => onApply(actualFilteredValues)} styles={{root: {marginRight: 8}}}>\r\n                            Aplicar\r\n                        </PrimaryButton>\r\n                    </Suspense>\r\n                    <Suspense fallback={'...'}>\r\n                        <DefaultButton onClick={onCancel}>Cancelar</DefaultButton>\r\n                    </Suspense>\r\n                  </div>)}\r\n                isFooterAtBottom={true}\r\n                onDismiss={onClose} isOpen={isOpen}>\r\n                <h2>{panelTitle}</h2>\r\n                {availableFilters?.map(filter => {\r\n                    const options = filter?.options?.map<FilterOption>(({ key, text, data }) => {\r\n                        return {\r\n                            key,\r\n                            text,\r\n                            data\r\n                        };\r\n                    });\r\n                    return (<Suspense fallback={'...'}>\r\n                        {filter.renderAs === 'Dropdown' ? \r\n                        <Dropdown\r\n                            defaultSelectedKeys={getDefaultDropdownSelectedKeys()}\r\n                            key={filter?.key} options={options}\r\n                            multiSelect={filter?.enableMultiple} label={filter?.name}\r\n                            onChange={(_, opt) => onAddOrRemoveToMap(filter?.key, opt)} /> :\r\n                        filter.renderAs === 'SearchBox' ? \r\n                        <div key={filter?.key + \"-\" + filter?.name}>\r\n                        <label>{filter?.name}</label>\r\n                        <TagPicker \r\n                            key={filter?.key}\r\n                            getTextFromItem={item => item?.name}\r\n                            defaultSelectedItems={getDefaultSelectedTag(filter.key)}\r\n                            pickerSuggestionsProps={{\r\n                                suggestionsHeaderText: \"Sugestões\",\r\n                                noResultsFoundText: \"Nenhum resultado encontrado\",\r\n                                loadingText: \"Carregando...\"\r\n                            }}\r\n                            pickerCalloutProps={{doNotLayer: true}}\r\n                            onChange={(tags) => {\r\n                                const copyMap = new Map(actualFilteredValues);\r\n                                if(tags.length === 0) {\r\n                                    options.forEach(opt => {\r\n                                        if(copyMap.has(opt?.key as string))\r\n                                            copyMap.delete(opt?.key as string);\r\n                                    });\r\n                                } else if(!(tags?.map(i => i?.key).includes(lastAddedTag?.current?.key))) {\r\n                                    copyMap.delete(lastAddedTag?.current?.key as string);\r\n                                    lastAddedTag.current = null; \r\n                                }\r\n                                setActualFilteredValues(copyMap);\r\n                            }}\r\n                            onItemSelected={(selectedItem) => {\r\n                                onAddOrRemoveToMap(filter?.key, {...selectedItem, selected: true} as unknown as FilterOption);\r\n                                lastAddedTag.current = selectedItem as unknown as FilterOption;\r\n                                return selectedItem;\r\n                            }}\r\n                            onResolveSuggestions={(currentFilter, tagList) => {\r\n                                const result = currentFilter\r\n                                ? options.filter(opt => \r\n                                    opt?.text?.toLowerCase().indexOf(currentFilter.toLowerCase()) === 0 \r\n                                    && !listContainsTagList(opt, tagList as unknown as FilterOption[])).map(f => ({...f, name: f?.text})): [];\r\n                                return result;\r\n                            }} /></div> :\r\n                        null}\r\n                    </Suspense>);\r\n                })}\r\n            </FluentPanel>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default React.memo(PanelFilter);","export {GridView} from './GridView';","import { mergeStyleSets } from \"@fluentui/react/lib/Styling\";\r\n\r\nexport const classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px',\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden',\r\n            },\r\n        },\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px',\r\n    },\r\n    controlWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    exampleToggle: {\r\n        display: 'inline-block',\r\n        marginBottom: '10px',\r\n        marginRight: '30px',\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px',\r\n    },\r\n});","import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { classNames } from './styles';\r\nimport type { IGridListProps, IRow } from '../models/interfaces/IGridView';\r\nimport { Utils } from '../helpers/Utils';\r\nimport type { FilterOption, IAvailableFilters, IPanelFilterProps, SelectedItemsMap } from '../models/interfaces/IPanelFilter';\r\nimport type { IColumn, IGroup } from '@fluentui/react/lib/DetailsList';\r\n\r\nexport function useGridController(props: IGridListProps<any>) {\r\n    const [cols, setCols] = useState(props?.columns);\r\n    const [actualFilteredValues, setActualFilteredValues] = useState<SelectedItemsMap>(new Map());\r\n    const [allRows, setAllRows] = useState(props?.rows);\r\n    const [actualRows, setActualRows] = useState(props?.rows ?? []);\r\n    const [currentFilteredRows, setCurFilteredRows] = useState<IRow[]>([]);\r\n    const [groups, setGroups] = useState(props?.groups);\r\n    const [isFilterPanelOpen, setIsFilterPanel] = useState(false);\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        if (props?.columns?.length) {\r\n            const columns = props?.columns;\r\n            const convertedColumns = columns.map(c => {\r\n                if (c?.key?.includes('.') || c?.fieldName?.includes('.')) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.findObjectByPath(item, c?.fieldName?.split('.')) as any ?? '-';\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n\r\n                    return c;\r\n                } else if (c?.dateConvertionOptions?.shouldConvertToLocaleString) {\r\n                    c.onRender = (item, _2) => {\r\n                        const fieldValue = Utils.convertIsoToLocaleString(item[c?.fieldName ?? c?.key], c?.dateConvertionOptions?.locales, c?.dateConvertionOptions?.formatOptions);\r\n                        return <span>{fieldValue}</span>;\r\n                    }\r\n                }\r\n                return c;\r\n            })\r\n            setCols(convertedColumns);\r\n        }\r\n    }, [props?.columns]);\r\n\r\n    useEffect(() => {\r\n        if (props.listType === 'file' || props.listType === 'folder')\r\n            setCols([{\r\n                key: 'fileType',\r\n                name: 'File Type',\r\n                className: classNames.fileIconCell,\r\n                iconClassName: classNames.fileIconHeaderIcon,\r\n                ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n                iconName: 'Page',\r\n                isIconOnly: true,\r\n                fieldName: 'name',\r\n                minWidth: 16,\r\n                maxWidth: 16,\r\n                onColumnClick,\r\n                onRender: (item: IRow) => (<img src={item?.file?.iconUrl} className={classNames.fileIconImg} alt={`${item?.file?.fileType} file icon`} />),\r\n            },\r\n            {\r\n                key: 'name',\r\n                name: 'Nome',\r\n                fieldName: 'name',\r\n                minWidth: 210,\r\n                maxWidth: 350,\r\n                isRowHeader: true,\r\n                isResizable: true,\r\n                isSorted: true,\r\n                isSortedDescending: false,\r\n                sortAscendingAriaLabel: 'Sorted A to Z',\r\n                sortDescendingAriaLabel: 'Sorted Z to A',\r\n                onColumnClick,\r\n                onRender: (item: IRow) => (<span>{item?.file?.name}</span>),\r\n                data: 'string',\r\n                isPadded: true,\r\n            }, ...cols]);\r\n        else setCols(props?.columns);\r\n    }, [props?.listType]);\r\n\r\n    useEffect(() => {\r\n        setActualRows(props?.rows);\r\n        setAllRows(props?.rows)\r\n    }, [props?.rows?.length]);\r\n\r\n    useEffect(() => {\r\n        if (props?.listType === 'folder' && props?.rowsAsNode) {\r\n            const nodes = props.rowsAsNode;\r\n            const items: IRow[] = [];\r\n            const groups: IGroup[] = [];\r\n            Utils.processNodes(nodes, groups, items, 0);\r\n            setActualRows(items);\r\n            setGroups(groups);\r\n        }\r\n    }, [props?.rowsAsNode, props?.listType]);\r\n\r\n    /**TO-DO: Implement this method to work with `INode[]` */\r\n    const onColumnClick = (_: unknown, column: IColumn): void => {\r\n        if (props?.rowsAsNode)\r\n            return;\r\n        const newColumns: IColumn[] = cols.slice();\r\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\r\n        newColumns.forEach((newCol: IColumn) => {\r\n            if (newCol === currColumn) {\r\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n                currColumn.isSorted = true;\r\n            } else {\r\n                newCol.isSorted = false;\r\n                newCol.isSortedDescending = true;\r\n            }\r\n        });\r\n        const newItems = Utils.copyAndSort(actualRows, currColumn?.fieldName!, currColumn?.isSortedDescending);\r\n        setCols(newColumns);\r\n        setActualRows(newItems);\r\n    };\r\n\r\n    const onRowClick = (item: IRow) => {\r\n        if (props?.onRowClick)\r\n            props?.onRowClick(item);\r\n    }\r\n    /**Generate the dropdowns of each availabe column and it's unique values */\r\n    const buildFilters = (): IAvailableFilters[] => {\r\n        const filters: IAvailableFilters[] = [];\r\n        for (let index = 0; index < cols.length; index++) {\r\n            const col = cols[index];\r\n            const renderAs = col?.renderFilterAs ?? 'Dropdown';\r\n            const keys = col?.key?.split('.') ?? col.fieldName?.split('.'); \r\n            const validRows = allRows?.every(r => {\r\n                const obj = Utils.getNestedObject<string, any>(r, keys);\r\n                return !!obj\r\n            });\r\n            if (validRows) {\r\n                const options: FilterOption[] = allRows?.filter(d => d)?.map((data, idx) => {\r\n                    let stringObject = Utils.getNestedObject(data, keys)?.toString();\r\n                    if (col?.dateConvertionOptions?.shouldConvertToLocaleString)\r\n                        stringObject = Utils.convertIsoToLocaleString(stringObject, col?.dateConvertionOptions?.locales, col?.dateConvertionOptions?.formatOptions);\r\n                    return {\r\n                        key: idx + \"_\" + col?.key,\r\n                        text: stringObject,\r\n                        data\r\n                    };\r\n                });\r\n                const uniqueOptions = options?.filter((obj, pos, arr) => arr.map(mapObj => mapObj?.text).indexOf(obj?.text) === pos);\r\n\r\n                filters.push({\r\n                    key: col?.key,\r\n                    options: uniqueOptions,\r\n                    enableMultiple: true,\r\n                    name: col?.name,\r\n                    renderAs\r\n                });\r\n            }\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    const groupMaps = (selectedItems: SelectedItemsMap): Map<string, SelectedItemsMap> => {\r\n        const mapsByKeyKind = new Map<string, SelectedItemsMap>();\r\n        selectedItems.forEach((_, key, map) => {\r\n            const keyName = key.split('_')[1];\r\n            const doesntHaveKey = !mapsByKeyKind.has(keyName);\r\n            const sameMapsList = [...map].filter(d => d[0] === key);\r\n            if(doesntHaveKey) \r\n                mapsByKeyKind.set(keyName, new Map(sameMapsList));\r\n            else {\r\n                const thisKindMap = mapsByKeyKind.get(keyName);\r\n                sameMapsList.forEach(d => thisKindMap?.set(d[0], d[1]));\r\n            } \r\n        });\r\n        return mapsByKeyKind;\r\n    }\r\n\r\n    /**Isso deve estar O log n */\r\n    const onApplyFilter: IPanelFilterProps['onApply'] = (selectedItems) => {\r\n        if(selectedItems.size === 0) {\r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n            return;\r\n        }\r\n        const groupedMaps = groupMaps(selectedItems);\r\n        const allGroupMapKeys = [...groupedMaps.keys()]?.flatMap(i => i?.split('.')) ?? [];\r\n        \r\n        let orFilterAggregation: IRow[] = currentFilteredRows;\r\n        for (let idx = 0; idx < allRows?.length; idx++) {\r\n            const row = allRows[idx];\r\n            for (const key of Object.keys(row)) {\r\n                let realKey: string = key;\r\n                const isKeyValueAObject = row[key]?.constructor === Object;\r\n                if(isKeyValueAObject && allGroupMapKeys.includes(key)) {\r\n                    const keysFromObject = Utils.getAllNestedObjectKeys(row[key]);\r\n                    realKey = `${key}.${keysFromObject.join('.')}`;\r\n                }\r\n                if(groupedMaps.has(realKey)) {\r\n                    const thisKeyMap = groupedMaps.get(realKey);\r\n                    thisKeyMap.forEach((v) => {\r\n                        const currentFilteredIds = orFilterAggregation.map(r => r?.Id);\r\n                        const mapKeyWithDots = (v.rootItemKey as string)?.split('.');\r\n                        const obj1 = Utils.getNestedObject(row, mapKeyWithDots);\r\n                        const obj2 = Utils.getNestedObject(v.data, mapKeyWithDots);\r\n                        if(!(currentFilteredIds.includes(row.Id)) && obj1 === obj2)\r\n                            orFilterAggregation.push(row);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (orFilterAggregation.length > 0) {\r\n            setActualRows(orFilterAggregation)\r\n            setCurFilteredRows(orFilterAggregation);\r\n        } else { \r\n            setActualRows(allRows);\r\n            setCurFilteredRows([]);\r\n        }\r\n        setIsFilterPanel(false);\r\n    }\r\n\r\n    const panelConfig: IPanelFilterProps = {\r\n        isOpen: isFilterPanelOpen,\r\n        onApply: onApplyFilter,\r\n        onCancel: () => { setIsFilterPanel(false); },\r\n        onClose: () =>  { setIsFilterPanel(false); },\r\n        onOpen: () => { setCurFilteredRows([]); },\r\n        //The available filters are the ones that are defined in the `columns` prop, and the options are the rows that are defined in the `rows` prop according to the key\r\n        availableFilters: buildFilters(),\r\n        panelTitle: props?.filterPanelTitle ?? 'Filtrar',\r\n        actualFilteredValues,\r\n        setActualFilteredValues\r\n    }\r\n\r\n    return {\r\n        state: {\r\n            actualRows,\r\n            cols,\r\n            groups,\r\n            panelConfig,\r\n            allRows,\r\n            isFilterPanelOpen,\r\n        },\r\n        handlers: {\r\n            onRowClick,\r\n            setActualRows,\r\n            setIsFilterPanel,\r\n        }\r\n    }\r\n}","import type { IGroup } from \"@fluentui/react/lib/DetailsList\";\r\nimport type { INode, IRow } from \"../models/interfaces/IGridView\";\r\n\r\nexport class Utils {\r\n\r\n    public static findObjectByPath<T, R extends any>(objectIn: T, path: string[]): R {\r\n        try {\r\n            let obj = objectIn;\r\n            for (let i = 0; i <= path.length - 1; i++) {\r\n                const item = path[i]\r\n                obj = obj[item]\r\n            }\r\n            return obj as R ?? null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static convertIsoToLocaleString(date: string, locales: string | string[] = 'pt-BR', formatOptions: Intl.DateTimeFormatOptions = undefined): string {\r\n        //First check if the string can be converted to a date object.\r\n        if(!(new Date(date) instanceof Date) && isNaN(new Date(date)?.getTime()))\r\n            return date;\r\n        const isIsoDate = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z/.test(date);\r\n        if (!isIsoDate)\r\n            return date;\r\n        return new Intl.DateTimeFormat(locales, formatOptions).format(new Date(date));\r\n    }\r\n\r\n    public static processNodes(nodeItems: INode[] | undefined, groups: IGroup[], items: IRow[], level: number): void {\r\n        // end of recursion\r\n        if (!nodeItems || !nodeItems?.length)\r\n            return;\r\n        // processing current level of the tree\r\n        nodeItems.forEach(nodeItem => {\r\n            const newGroup: IGroup = {\r\n                key: nodeItem.key,\r\n                name: nodeItem.title,\r\n                startIndex: items?.length,\r\n                count: 0,\r\n                children: [],\r\n                level: level, // level is incremented on each call of the recursion\r\n                data: nodeItem // storing initial INode instance in the group's data\r\n            };\r\n\r\n            groups.push(newGroup);\r\n            if (nodeItem?.items && nodeItem?.items?.length) {\r\n\r\n                // adding items to the flat array\r\n                items.push(...nodeItem?.items);\r\n            }\r\n\r\n            // processing child nodes\r\n            Utils.processNodes(nodeItem.children, newGroup.children!, items, level + 1);\r\n            // current group count is a sum of group's leaf items and leaf items in all child nodes\r\n            newGroup.count = items?.length - newGroup.startIndex;\r\n        });\r\n    }\r\n\r\n    public static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n\r\n    public static getNestedObject<T, V extends any>(nestedObj: any, pathArr: T[]): V  {\r\n        return pathArr.reduce((obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj);\r\n    }\r\n\r\n    public static getAllNestedObjectKeys(nestedObj: any): string[] {\r\n        return Object.keys(nestedObj).reduce((acc, key) => {\r\n            const value = nestedObj[key];\r\n            return typeof value === 'object' ? [...acc, ...Utils.getAllNestedObjectKeys(value)] : [...acc, key];\r\n        }, []);\r\n    }\r\n}","module.exports = require(\"@fluentui/react\");","module.exports = require(\"@fluentui/react/lib/Button\");","module.exports = require(\"@fluentui/react/lib/DetailsList\");","module.exports = require(\"@fluentui/react/lib/Dropdown\");","module.exports = require(\"@fluentui/react/lib/Panel\");","module.exports = require(\"@fluentui/react/lib/Pickers\");","module.exports = require(\"@fluentui/react/lib/Sticky\");","module.exports = require(\"@fluentui/react/lib/Styling\");","module.exports = require(\"react\");"],"sourceRoot":""}