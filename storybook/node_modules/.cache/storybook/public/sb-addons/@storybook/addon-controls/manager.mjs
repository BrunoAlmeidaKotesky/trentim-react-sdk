var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __require = /* @__PURE__ */ ((x2) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x2, {
  get: (a2, b2) => (typeof require !== "undefined" ? require : a2)[b2]
}) : x2)(function(x2) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x2 + '" is not supported');
});
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// <define:module>
var init_define_module = __esm({
  "<define:module>"() {
  }
});

// <define:process.env>
var init_define_process_env = __esm({
  "<define:process.env>"() {
  }
});

// global-externals:react
var react_exports = {};
__export(react_exports, {
  Children: () => Children,
  Component: () => Component,
  Fragment: () => Fragment,
  Profiler: () => Profiler,
  PureComponent: () => PureComponent,
  StrictMode: () => StrictMode,
  Suspense: () => Suspense,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: () => __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  cloneElement: () => cloneElement,
  createContext: () => createContext,
  createElement: () => createElement,
  createFactory: () => createFactory,
  createRef: () => createRef,
  default: () => react_default,
  forwardRef: () => forwardRef,
  isValidElement: () => isValidElement,
  lazy: () => lazy,
  memo: () => memo,
  useCallback: () => useCallback2,
  useContext: () => useContext,
  useDebugValue: () => useDebugValue,
  useEffect: () => useEffect2,
  useImperativeHandle: () => useImperativeHandle,
  useLayoutEffect: () => useLayoutEffect,
  useMemo: () => useMemo2,
  useReducer: () => useReducer2,
  useRef: () => useRef2,
  useState: () => useState2,
  version: () => version
});
var react_default, Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback2, useContext, useDebugValue, useEffect2, useImperativeHandle, useLayoutEffect, useMemo2, useReducer2, useRef2, useState2, version;
var init_react = __esm({
  "global-externals:react"() {
    init_define_module();
    init_define_process_env();
    react_default = __REACT__;
    ({ Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback: useCallback2, useContext, useDebugValue, useEffect: useEffect2, useImperativeHandle, useLayoutEffect, useMemo: useMemo2, useReducer: useReducer2, useRef: useRef2, useState: useState2, version } = __REACT__);
  }
});

// global-externals:@storybook/addons
var addons_exports = {};
__export(addons_exports, {
  AddonStore: () => AddonStore,
  HooksContext: () => HooksContext2,
  addons: () => addons,
  applyHooks: () => applyHooks2,
  default: () => addons_default,
  isSupportedType: () => isSupportedType,
  makeDecorator: () => makeDecorator,
  mockChannel: () => mockChannel,
  types: () => types,
  useArgs: () => useArgs2,
  useCallback: () => useCallback3,
  useChannel: () => useChannel2,
  useEffect: () => useEffect3,
  useGlobals: () => useGlobals2,
  useMemo: () => useMemo3,
  useParameter: () => useParameter2,
  useReducer: () => useReducer3,
  useRef: () => useRef3,
  useState: () => useState3,
  useStoryContext: () => useStoryContext2
});
var addons_default, AddonStore, HooksContext2, addons, applyHooks2, isSupportedType, makeDecorator, mockChannel, types, useArgs2, useCallback3, useChannel2, useEffect3, useGlobals2, useMemo3, useParameter2, useReducer3, useRef3, useState3, useStoryContext2;
var init_addons = __esm({
  "global-externals:@storybook/addons"() {
    init_define_module();
    init_define_process_env();
    addons_default = __STORYBOOKADDONS__;
    ({ AddonStore, HooksContext: HooksContext2, addons, applyHooks: applyHooks2, isSupportedType, makeDecorator, mockChannel, types, useArgs: useArgs2, useCallback: useCallback3, useChannel: useChannel2, useEffect: useEffect3, useGlobals: useGlobals2, useMemo: useMemo3, useParameter: useParameter2, useReducer: useReducer3, useRef: useRef3, useState: useState3, useStoryContext: useStoryContext2 } = __STORYBOOKADDONS__);
  }
});

// global-externals:@storybook/components
var components_exports = {};
__export(components_exports, {
  A: () => A,
  ActionBar: () => ActionBar,
  AddonPanel: () => AddonPanel,
  Badge: () => Badge,
  Bar: () => Bar,
  Blockquote: () => Blockquote,
  Button: () => Button,
  Code: () => Code,
  DL: () => DL,
  Div: () => Div,
  DocumentWrapper: () => DocumentWrapper,
  FlexBar: () => FlexBar,
  Form: () => Form,
  H1: () => H1,
  H2: () => H2,
  H3: () => H3,
  H4: () => H4,
  H5: () => H5,
  H6: () => H6,
  HR: () => HR,
  IconButton: () => IconButton,
  IconButtonSkeleton: () => IconButtonSkeleton,
  Icons: () => Icons,
  Img: () => Img,
  LI: () => LI,
  Link: () => Link,
  Loader: () => Loader,
  OL: () => OL,
  P: () => P,
  Placeholder: () => Placeholder,
  Pre: () => Pre,
  ResetWrapper: () => ResetWrapper,
  ScrollArea: () => ScrollArea,
  Separator: () => Separator,
  Spaced: () => Spaced,
  Span: () => Span,
  StorybookIcon: () => StorybookIcon,
  StorybookLogo: () => StorybookLogo,
  Symbols: () => Symbols,
  SyntaxHighlighter: () => SyntaxHighlighter,
  TT: () => TT,
  TabBar: () => TabBar,
  TabButton: () => TabButton,
  TabWrapper: () => TabWrapper,
  Table: () => Table,
  Tabs: () => Tabs,
  TabsState: () => TabsState,
  TooltipLinkList: () => TooltipLinkList,
  TooltipMessage: () => TooltipMessage,
  TooltipNote: () => TooltipNote,
  UL: () => UL,
  WithTooltip: () => WithTooltip,
  WithTooltipPure: () => WithTooltipPure,
  Zoom: () => Zoom,
  codeCommon: () => codeCommon,
  components: () => components,
  createCopyToClipboardFunction: () => createCopyToClipboardFunction,
  default: () => components_default,
  getStoryHref: () => getStoryHref,
  interleaveSeparators: () => interleaveSeparators,
  nameSpaceClassNames: () => nameSpaceClassNames,
  resetComponents: () => resetComponents,
  withReset: () => withReset
});
var components_default, A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, Code, DL, Div, DocumentWrapper, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset;
var init_components = __esm({
  "global-externals:@storybook/components"() {
    init_define_module();
    init_define_process_env();
    components_default = __STORYBOOKCOMPONENTS__;
    ({ A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, Code, DL, Div, DocumentWrapper, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset } = __STORYBOOKCOMPONENTS__);
  }
});

// global-externals:@storybook/api
var api_exports = {};
__export(api_exports, {
  ActiveTabs: () => ActiveTabs,
  Consumer: () => Consumer,
  ManagerContext: () => ManagerContext,
  Provider: () => Provider,
  combineParameters: () => combineParameters2,
  default: () => api_default,
  merge: () => merge,
  useAddonState: () => useAddonState2,
  useArgTypes: () => useArgTypes,
  useArgs: () => useArgs3,
  useChannel: () => useChannel3,
  useGlobalTypes: () => useGlobalTypes,
  useGlobals: () => useGlobals3,
  useParameter: () => useParameter3,
  useSharedState: () => useSharedState2,
  useStoryPrepared: () => useStoryPrepared,
  useStorybookApi: () => useStorybookApi,
  useStorybookState: () => useStorybookState
});
var api_default, ActiveTabs, Consumer, ManagerContext, Provider, combineParameters2, merge, useAddonState2, useArgTypes, useArgs3, useChannel3, useGlobalTypes, useGlobals3, useParameter3, useSharedState2, useStoryPrepared, useStorybookApi, useStorybookState;
var init_api = __esm({
  "global-externals:@storybook/api"() {
    init_define_module();
    init_define_process_env();
    api_default = __STORYBOOKAPI__;
    ({ ActiveTabs, Consumer, ManagerContext, Provider, combineParameters: combineParameters2, merge, useAddonState: useAddonState2, useArgTypes, useArgs: useArgs3, useChannel: useChannel3, useGlobalTypes, useGlobals: useGlobals3, useParameter: useParameter3, useSharedState: useSharedState2, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__);
  }
});

// node_modules/react-colorful/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-colorful/dist/index.js"(exports) {
    init_define_module();
    init_define_process_env();
    var e = (init_react(), __toCommonJS(react_exports));
    function r(e2) {
      return e2 && "object" == typeof e2 && "default" in e2 ? e2 : { default: e2 };
    }
    var t = r(e);
    function o() {
      return (o = Object.assign || function(e2) {
        for (var r2 = 1; r2 < arguments.length; r2++) {
          var t2 = arguments[r2];
          for (var o2 in t2)
            Object.prototype.hasOwnProperty.call(t2, o2) && (e2[o2] = t2[o2]);
        }
        return e2;
      }).apply(this, arguments);
    }
    function n(e2, r2) {
      if (null == e2)
        return {};
      var t2, o2, n2 = {}, a3 = Object.keys(e2);
      for (o2 = 0; o2 < a3.length; o2++)
        r2.indexOf(t2 = a3[o2]) >= 0 || (n2[t2] = e2[t2]);
      return n2;
    }
    function a2(r2) {
      var t2 = e.useRef(r2), o2 = e.useRef(function(e2) {
        t2.current && t2.current(e2);
      });
      return t2.current = r2, o2.current;
    }
    var l = function(e2, r2, t2) {
      return void 0 === r2 && (r2 = 0), void 0 === t2 && (t2 = 1), e2 > t2 ? t2 : e2 < r2 ? r2 : e2;
    };
    var u = function(e2) {
      return "touches" in e2;
    };
    var c2 = function(e2) {
      return e2 && e2.ownerDocument.defaultView || self;
    };
    var s2 = function(e2, r2, t2) {
      var o2 = e2.getBoundingClientRect(), n2 = u(r2) ? function(e3, r3) {
        for (var t3 = 0; t3 < e3.length; t3++)
          if (e3[t3].identifier === r3)
            return e3[t3];
        return e3[0];
      }(r2.touches, t2) : r2;
      return { left: l((n2.pageX - (o2.left + c2(e2).pageXOffset)) / o2.width), top: l((n2.pageY - (o2.top + c2(e2).pageYOffset)) / o2.height) };
    };
    var f2 = function(e2) {
      !u(e2) && e2.preventDefault();
    };
    var i2 = t.default.memo(function(r2) {
      var l2 = r2.onMove, i3 = r2.onKey, d2 = n(r2, ["onMove", "onKey"]), v2 = e.useRef(null), h3 = a2(l2), g2 = a2(i3), m3 = e.useRef(null), p2 = e.useRef(false), b3 = e.useMemo(function() {
        var e2 = function(e3) {
          f2(e3), (u(e3) ? e3.touches.length > 0 : e3.buttons > 0) && v2.current ? h3(s2(v2.current, e3, m3.current)) : t2(false);
        }, r3 = function() {
          return t2(false);
        };
        function t2(t3) {
          var o2 = p2.current, n2 = c2(v2.current), a3 = t3 ? n2.addEventListener : n2.removeEventListener;
          a3(o2 ? "touchmove" : "mousemove", e2), a3(o2 ? "touchend" : "mouseup", r3);
        }
        return [function(e3) {
          var r4 = e3.nativeEvent, o2 = v2.current;
          if (o2 && (f2(r4), !function(e4, r5) {
            return r5 && !u(e4);
          }(r4, p2.current) && o2)) {
            if (u(r4)) {
              p2.current = true;
              var n2 = r4.changedTouches || [];
              n2.length && (m3.current = n2[0].identifier);
            }
            o2.focus(), h3(s2(o2, r4, m3.current)), t2(true);
          }
        }, function(e3) {
          var r4 = e3.which || e3.keyCode;
          r4 < 37 || r4 > 40 || (e3.preventDefault(), g2({ left: 39 === r4 ? 0.05 : 37 === r4 ? -0.05 : 0, top: 40 === r4 ? 0.05 : 38 === r4 ? -0.05 : 0 }));
        }, t2];
      }, [g2, h3]), _3 = b3[0], C2 = b3[1], x3 = b3[2];
      return e.useEffect(function() {
        return x3;
      }, [x3]), t.default.createElement("div", o({}, d2, { onTouchStart: _3, onMouseDown: _3, className: "react-colorful__interactive", ref: v2, onKeyDown: C2, tabIndex: 0, role: "slider" }));
    });
    var d = function(e2) {
      return e2.filter(Boolean).join(" ");
    };
    var v = function(e2) {
      var r2 = e2.color, o2 = e2.left, n2 = e2.top, a3 = void 0 === n2 ? 0.5 : n2, l2 = d(["react-colorful__pointer", e2.className]);
      return t.default.createElement("div", { className: l2, style: { top: 100 * a3 + "%", left: 100 * o2 + "%" } }, t.default.createElement("div", { className: "react-colorful__pointer-fill", style: { backgroundColor: r2 } }));
    };
    var h2 = function(e2, r2, t2) {
      return void 0 === r2 && (r2 = 0), void 0 === t2 && (t2 = Math.pow(10, r2)), Math.round(t2 * e2) / t2;
    };
    var g = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) };
    var m2 = function(e2) {
      return S(p(e2));
    };
    var p = function(e2) {
      return "#" === e2[0] && (e2 = e2.substring(1)), e2.length < 6 ? { r: parseInt(e2[0] + e2[0], 16), g: parseInt(e2[1] + e2[1], 16), b: parseInt(e2[2] + e2[2], 16), a: 4 === e2.length ? h2(parseInt(e2[3] + e2[3], 16) / 255, 2) : 1 } : { r: parseInt(e2.substring(0, 2), 16), g: parseInt(e2.substring(2, 4), 16), b: parseInt(e2.substring(4, 6), 16), a: 8 === e2.length ? h2(parseInt(e2.substring(6, 8), 16) / 255, 2) : 1 };
    };
    var b2 = function(e2, r2) {
      return void 0 === r2 && (r2 = "deg"), Number(e2) * (g[r2] || 1);
    };
    var _2 = function(e2) {
      var r2 = /hsla?\(?\s*(-?\d*\.?\d+)(deg|rad|grad|turn)?[,\s]+(-?\d*\.?\d+)%?[,\s]+(-?\d*\.?\d+)%?,?\s*[/\s]*(-?\d*\.?\d+)?(%)?\s*\)?/i.exec(e2);
      return r2 ? x2({ h: b2(r2[1], r2[2]), s: Number(r2[3]), l: Number(r2[4]), a: void 0 === r2[5] ? 1 : Number(r2[5]) / (r2[6] ? 100 : 1) }) : { h: 0, s: 0, v: 0, a: 1 };
    };
    var C = _2;
    var x2 = function(e2) {
      var r2 = e2.s, t2 = e2.l;
      return { h: e2.h, s: (r2 *= (t2 < 50 ? t2 : 100 - t2) / 100) > 0 ? 2 * r2 / (t2 + r2) * 100 : 0, v: t2 + r2, a: e2.a };
    };
    var E = function(e2) {
      return I(N(e2));
    };
    var H = function(e2) {
      var r2 = e2.s, t2 = e2.v, o2 = e2.a, n2 = (200 - r2) * t2 / 100;
      return { h: h2(e2.h), s: h2(n2 > 0 && n2 < 200 ? r2 * t2 / 100 / (n2 <= 100 ? n2 : 200 - n2) * 100 : 0), l: h2(n2 / 2), a: h2(o2, 2) };
    };
    var M2 = function(e2) {
      var r2 = H(e2);
      return "hsl(" + r2.h + ", " + r2.s + "%, " + r2.l + "%)";
    };
    var k2 = function(e2) {
      var r2 = H(e2);
      return "hsla(" + r2.h + ", " + r2.s + "%, " + r2.l + "%, " + r2.a + ")";
    };
    var N = function(e2) {
      var r2 = e2.h, t2 = e2.s, o2 = e2.v, n2 = e2.a;
      r2 = r2 / 360 * 6, t2 /= 100, o2 /= 100;
      var a3 = Math.floor(r2), l2 = o2 * (1 - t2), u2 = o2 * (1 - (r2 - a3) * t2), c3 = o2 * (1 - (1 - r2 + a3) * t2), s3 = a3 % 6;
      return { r: h2(255 * [o2, u2, l2, l2, c3, o2][s3]), g: h2(255 * [c3, o2, o2, u2, l2, l2][s3]), b: h2(255 * [l2, l2, c3, o2, o2, u2][s3]), a: h2(n2, 2) };
    };
    var w = function(e2) {
      var r2 = /hsva?\(?\s*(-?\d*\.?\d+)(deg|rad|grad|turn)?[,\s]+(-?\d*\.?\d+)%?[,\s]+(-?\d*\.?\d+)%?,?\s*[/\s]*(-?\d*\.?\d+)?(%)?\s*\)?/i.exec(e2);
      return r2 ? O({ h: b2(r2[1], r2[2]), s: Number(r2[3]), v: Number(r2[4]), a: void 0 === r2[5] ? 1 : Number(r2[5]) / (r2[6] ? 100 : 1) }) : { h: 0, s: 0, v: 0, a: 1 };
    };
    var y2 = w;
    var q = function(e2) {
      var r2 = /rgba?\(?\s*(-?\d*\.?\d+)(%)?[,\s]+(-?\d*\.?\d+)(%)?[,\s]+(-?\d*\.?\d+)(%)?,?\s*[/\s]*(-?\d*\.?\d+)?(%)?\s*\)?/i.exec(e2);
      return r2 ? S({ r: Number(r2[1]) / (r2[2] ? 100 / 255 : 1), g: Number(r2[3]) / (r2[4] ? 100 / 255 : 1), b: Number(r2[5]) / (r2[6] ? 100 / 255 : 1), a: void 0 === r2[7] ? 1 : Number(r2[7]) / (r2[8] ? 100 : 1) }) : { h: 0, s: 0, v: 0, a: 1 };
    };
    var P2 = q;
    var R = function(e2) {
      var r2 = e2.toString(16);
      return r2.length < 2 ? "0" + r2 : r2;
    };
    var I = function(e2) {
      var r2 = e2.r, t2 = e2.g, o2 = e2.b, n2 = e2.a, a3 = n2 < 1 ? R(h2(255 * n2)) : "";
      return "#" + R(r2) + R(t2) + R(o2) + a3;
    };
    var S = function(e2) {
      var r2 = e2.r, t2 = e2.g, o2 = e2.b, n2 = e2.a, a3 = Math.max(r2, t2, o2), l2 = a3 - Math.min(r2, t2, o2), u2 = l2 ? a3 === r2 ? (t2 - o2) / l2 : a3 === t2 ? 2 + (o2 - r2) / l2 : 4 + (r2 - t2) / l2 : 0;
      return { h: h2(60 * (u2 < 0 ? u2 + 6 : u2)), s: h2(a3 ? l2 / a3 * 100 : 0), v: h2(a3 / 255 * 100), a: n2 };
    };
    var O = function(e2) {
      return { h: h2(e2.h), s: h2(e2.s), v: h2(e2.v), a: h2(e2.a, 2) };
    };
    var j2 = t.default.memo(function(e2) {
      var r2 = e2.hue, o2 = e2.onChange, n2 = d(["react-colorful__hue", e2.className]);
      return t.default.createElement("div", { className: n2 }, t.default.createElement(i2, { onMove: function(e3) {
        o2({ h: 360 * e3.left });
      }, onKey: function(e3) {
        o2({ h: l(r2 + 360 * e3.left, 0, 360) });
      }, "aria-label": "Hue", "aria-valuenow": h2(r2), "aria-valuemax": "360", "aria-valuemin": "0" }, t.default.createElement(v, { className: "react-colorful__hue-pointer", left: r2 / 360, color: M2({ h: r2, s: 100, v: 100, a: 1 }) })));
    });
    var z = t.default.memo(function(e2) {
      var r2 = e2.hsva, o2 = e2.onChange, n2 = { backgroundColor: M2({ h: r2.h, s: 100, v: 100, a: 1 }) };
      return t.default.createElement("div", { className: "react-colorful__saturation", style: n2 }, t.default.createElement(i2, { onMove: function(e3) {
        o2({ s: 100 * e3.left, v: 100 - 100 * e3.top });
      }, onKey: function(e3) {
        o2({ s: l(r2.s + 100 * e3.left, 0, 100), v: l(r2.v - 100 * e3.top, 0, 100) });
      }, "aria-label": "Color", "aria-valuetext": "Saturation " + h2(r2.s) + "%, Brightness " + h2(r2.v) + "%" }, t.default.createElement(v, { className: "react-colorful__saturation-pointer", top: 1 - r2.v / 100, left: r2.s / 100, color: M2(r2) })));
    });
    var B = function(e2, r2) {
      if (e2 === r2)
        return true;
      for (var t2 in e2)
        if (e2[t2] !== r2[t2])
          return false;
      return true;
    };
    var D = function(e2, r2) {
      return e2.replace(/\s/g, "") === r2.replace(/\s/g, "");
    };
    var K = function(e2, r2) {
      return e2.toLowerCase() === r2.toLowerCase() || B(p(e2), p(r2));
    };
    function L(r2, t2, o2) {
      var n2 = a2(o2), l2 = e.useState(function() {
        return r2.toHsva(t2);
      }), u2 = l2[0], c3 = l2[1], s3 = e.useRef({ color: t2, hsva: u2 });
      e.useEffect(function() {
        if (!r2.equal(t2, s3.current.color)) {
          var e2 = r2.toHsva(t2);
          s3.current = { hsva: e2, color: t2 }, c3(e2);
        }
      }, [t2, r2]), e.useEffect(function() {
        var e2;
        B(u2, s3.current.hsva) || r2.equal(e2 = r2.fromHsva(u2), s3.current.color) || (s3.current = { hsva: u2, color: e2 }, n2(e2));
      }, [u2, r2, n2]);
      var f3 = e.useCallback(function(e2) {
        c3(function(r3) {
          return Object.assign({}, r3, e2);
        });
      }, []);
      return [u2, f3];
    }
    var A3;
    var T2 = "undefined" != typeof window ? e.useLayoutEffect : e.useEffect;
    var F = function() {
      return A3 || ("undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : void 0);
    };
    var X = /* @__PURE__ */ new Map();
    var Y2 = function(e2) {
      T2(function() {
        var r2 = e2.current ? e2.current.ownerDocument : document;
        if (void 0 !== r2 && !X.has(r2)) {
          var t2 = r2.createElement("style");
          t2.innerHTML = `.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}`, X.set(r2, t2);
          var o2 = F();
          o2 && t2.setAttribute("nonce", o2), r2.head.appendChild(t2);
        }
      }, []);
    };
    var V = function(r2) {
      var a3 = r2.className, l2 = r2.colorModel, u2 = r2.color, c3 = void 0 === u2 ? l2.defaultColor : u2, s3 = r2.onChange, f3 = n(r2, ["className", "colorModel", "color", "onChange"]), i3 = e.useRef(null);
      Y2(i3);
      var v2 = L(l2, c3, s3), h3 = v2[0], g2 = v2[1], m3 = d(["react-colorful", a3]);
      return t.default.createElement("div", o({}, f3, { ref: i3, className: m3 }), t.default.createElement(z, { hsva: h3, onChange: g2 }), t.default.createElement(j2, { hue: h3.h, onChange: g2, className: "react-colorful__last-control" }));
    };
    var $ = { defaultColor: "000", toHsva: m2, fromHsva: function(e2) {
      return E({ h: e2.h, s: e2.s, v: e2.v, a: 1 });
    }, equal: K };
    var G = function(e2) {
      var r2 = e2.className, o2 = e2.hsva, n2 = e2.onChange, a3 = { backgroundImage: "linear-gradient(90deg, " + k2(Object.assign({}, o2, { a: 0 })) + ", " + k2(Object.assign({}, o2, { a: 1 })) + ")" }, u2 = d(["react-colorful__alpha", r2]), c3 = h2(100 * o2.a);
      return t.default.createElement("div", { className: u2 }, t.default.createElement("div", { className: "react-colorful__alpha-gradient", style: a3 }), t.default.createElement(i2, { onMove: function(e3) {
        n2({ a: e3.left });
      }, onKey: function(e3) {
        n2({ a: l(o2.a + e3.left) });
      }, "aria-label": "Alpha", "aria-valuetext": c3 + "%", "aria-valuenow": c3, "aria-valuemin": "0", "aria-valuemax": "100" }, t.default.createElement(v, { className: "react-colorful__alpha-pointer", left: o2.a, color: k2(o2) })));
    };
    var J = function(r2) {
      var a3 = r2.className, l2 = r2.colorModel, u2 = r2.color, c3 = void 0 === u2 ? l2.defaultColor : u2, s3 = r2.onChange, f3 = n(r2, ["className", "colorModel", "color", "onChange"]), i3 = e.useRef(null);
      Y2(i3);
      var v2 = L(l2, c3, s3), h3 = v2[0], g2 = v2[1], m3 = d(["react-colorful", a3]);
      return t.default.createElement("div", o({}, f3, { ref: i3, className: m3 }), t.default.createElement(z, { hsva: h3, onChange: g2 }), t.default.createElement(j2, { hue: h3.h, onChange: g2 }), t.default.createElement(G, { hsva: h3, onChange: g2, className: "react-colorful__last-control" }));
    };
    var Q = { defaultColor: "0001", toHsva: m2, fromHsva: E, equal: K };
    var U = { defaultColor: { h: 0, s: 0, l: 0, a: 1 }, toHsva: x2, fromHsva: H, equal: B };
    var W2 = { defaultColor: "hsla(0, 0%, 0%, 1)", toHsva: _2, fromHsva: k2, equal: D };
    var Z = { defaultColor: { h: 0, s: 0, l: 0 }, toHsva: function(e2) {
      return x2({ h: e2.h, s: e2.s, l: e2.l, a: 1 });
    }, fromHsva: function(e2) {
      return { h: (r2 = H(e2)).h, s: r2.s, l: r2.l };
      var r2;
    }, equal: B };
    var ee = { defaultColor: "hsl(0, 0%, 0%)", toHsva: C, fromHsva: M2, equal: D };
    var re = { defaultColor: { h: 0, s: 0, v: 0, a: 1 }, toHsva: function(e2) {
      return e2;
    }, fromHsva: O, equal: B };
    var te = { defaultColor: "hsva(0, 0%, 0%, 1)", toHsva: w, fromHsva: function(e2) {
      var r2 = O(e2);
      return "hsva(" + r2.h + ", " + r2.s + "%, " + r2.v + "%, " + r2.a + ")";
    }, equal: D };
    var oe = { defaultColor: { h: 0, s: 0, v: 0 }, toHsva: function(e2) {
      return { h: e2.h, s: e2.s, v: e2.v, a: 1 };
    }, fromHsva: function(e2) {
      var r2 = O(e2);
      return { h: r2.h, s: r2.s, v: r2.v };
    }, equal: B };
    var ne = { defaultColor: "hsv(0, 0%, 0%)", toHsva: y2, fromHsva: function(e2) {
      var r2 = O(e2);
      return "hsv(" + r2.h + ", " + r2.s + "%, " + r2.v + "%)";
    }, equal: D };
    var ae = { defaultColor: { r: 0, g: 0, b: 0, a: 1 }, toHsva: S, fromHsva: N, equal: B };
    var le = { defaultColor: "rgba(0, 0, 0, 1)", toHsva: q, fromHsva: function(e2) {
      var r2 = N(e2);
      return "rgba(" + r2.r + ", " + r2.g + ", " + r2.b + ", " + r2.a + ")";
    }, equal: D };
    var ue = { defaultColor: { r: 0, g: 0, b: 0 }, toHsva: function(e2) {
      return S({ r: e2.r, g: e2.g, b: e2.b, a: 1 });
    }, fromHsva: function(e2) {
      return { r: (r2 = N(e2)).r, g: r2.g, b: r2.b };
      var r2;
    }, equal: B };
    var ce = { defaultColor: "rgb(0, 0, 0)", toHsva: P2, fromHsva: function(e2) {
      var r2 = N(e2);
      return "rgb(" + r2.r + ", " + r2.g + ", " + r2.b + ")";
    }, equal: D };
    var se = /^#?([0-9A-F]{3,8})$/i;
    var fe = function(r2) {
      var l2 = r2.color, u2 = void 0 === l2 ? "" : l2, c3 = r2.onChange, s3 = r2.onBlur, f3 = r2.escape, i3 = r2.validate, d2 = r2.format, v2 = r2.process, h3 = n(r2, ["color", "onChange", "onBlur", "escape", "validate", "format", "process"]), g2 = e.useState(function() {
        return f3(u2);
      }), m3 = g2[0], p2 = g2[1], b3 = a2(c3), _3 = a2(s3), C2 = e.useCallback(function(e2) {
        var r3 = f3(e2.target.value);
        p2(r3), i3(r3) && b3(v2 ? v2(r3) : r3);
      }, [f3, v2, i3, b3]), x3 = e.useCallback(function(e2) {
        i3(e2.target.value) || p2(f3(u2)), _3(e2);
      }, [u2, f3, i3, _3]);
      return e.useEffect(function() {
        p2(f3(u2));
      }, [u2, f3]), t.default.createElement("input", o({}, h3, { value: d2 ? d2(m3) : m3, spellCheck: "false", onChange: C2, onBlur: x3 }));
    };
    var ie = function(e2) {
      return "#" + e2;
    };
    exports.HexAlphaColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: Q }));
    }, exports.HexColorInput = function(r2) {
      var a3 = r2.prefixed, l2 = r2.alpha, u2 = n(r2, ["prefixed", "alpha"]), c3 = e.useCallback(function(e2) {
        return e2.replace(/([^0-9A-F]+)/gi, "").substring(0, l2 ? 8 : 6);
      }, [l2]), s3 = e.useCallback(function(e2) {
        return function(e3, r3) {
          var t2 = se.exec(e3), o2 = t2 ? t2[1].length : 0;
          return 3 === o2 || 6 === o2 || !!r3 && 4 === o2 || !!r3 && 8 === o2;
        }(e2, l2);
      }, [l2]);
      return t.default.createElement(fe, o({}, u2, { escape: c3, format: a3 ? ie : void 0, process: ie, validate: s3 }));
    }, exports.HexColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: $ }));
    }, exports.HslColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: Z }));
    }, exports.HslStringColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: ee }));
    }, exports.HslaColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: U }));
    }, exports.HslaStringColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: W2 }));
    }, exports.HsvColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: oe }));
    }, exports.HsvStringColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: ne }));
    }, exports.HsvaColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: re }));
    }, exports.HsvaStringColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: te }));
    }, exports.RgbColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: ue }));
    }, exports.RgbStringColorPicker = function(e2) {
      return t.default.createElement(V, o({}, e2, { colorModel: ce }));
    }, exports.RgbaColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: ae }));
    }, exports.RgbaStringColorPicker = function(e2) {
      return t.default.createElement(J, o({}, e2, { colorModel: le }));
    }, exports.setNonce = function(e2) {
      A3 = e2;
    };
  }
});

// node_modules/color-name/index.js
var require_color_name = __commonJS({
  "node_modules/color-name/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    module.exports = {
      "aliceblue": [240, 248, 255],
      "antiquewhite": [250, 235, 215],
      "aqua": [0, 255, 255],
      "aquamarine": [127, 255, 212],
      "azure": [240, 255, 255],
      "beige": [245, 245, 220],
      "bisque": [255, 228, 196],
      "black": [0, 0, 0],
      "blanchedalmond": [255, 235, 205],
      "blue": [0, 0, 255],
      "blueviolet": [138, 43, 226],
      "brown": [165, 42, 42],
      "burlywood": [222, 184, 135],
      "cadetblue": [95, 158, 160],
      "chartreuse": [127, 255, 0],
      "chocolate": [210, 105, 30],
      "coral": [255, 127, 80],
      "cornflowerblue": [100, 149, 237],
      "cornsilk": [255, 248, 220],
      "crimson": [220, 20, 60],
      "cyan": [0, 255, 255],
      "darkblue": [0, 0, 139],
      "darkcyan": [0, 139, 139],
      "darkgoldenrod": [184, 134, 11],
      "darkgray": [169, 169, 169],
      "darkgreen": [0, 100, 0],
      "darkgrey": [169, 169, 169],
      "darkkhaki": [189, 183, 107],
      "darkmagenta": [139, 0, 139],
      "darkolivegreen": [85, 107, 47],
      "darkorange": [255, 140, 0],
      "darkorchid": [153, 50, 204],
      "darkred": [139, 0, 0],
      "darksalmon": [233, 150, 122],
      "darkseagreen": [143, 188, 143],
      "darkslateblue": [72, 61, 139],
      "darkslategray": [47, 79, 79],
      "darkslategrey": [47, 79, 79],
      "darkturquoise": [0, 206, 209],
      "darkviolet": [148, 0, 211],
      "deeppink": [255, 20, 147],
      "deepskyblue": [0, 191, 255],
      "dimgray": [105, 105, 105],
      "dimgrey": [105, 105, 105],
      "dodgerblue": [30, 144, 255],
      "firebrick": [178, 34, 34],
      "floralwhite": [255, 250, 240],
      "forestgreen": [34, 139, 34],
      "fuchsia": [255, 0, 255],
      "gainsboro": [220, 220, 220],
      "ghostwhite": [248, 248, 255],
      "gold": [255, 215, 0],
      "goldenrod": [218, 165, 32],
      "gray": [128, 128, 128],
      "green": [0, 128, 0],
      "greenyellow": [173, 255, 47],
      "grey": [128, 128, 128],
      "honeydew": [240, 255, 240],
      "hotpink": [255, 105, 180],
      "indianred": [205, 92, 92],
      "indigo": [75, 0, 130],
      "ivory": [255, 255, 240],
      "khaki": [240, 230, 140],
      "lavender": [230, 230, 250],
      "lavenderblush": [255, 240, 245],
      "lawngreen": [124, 252, 0],
      "lemonchiffon": [255, 250, 205],
      "lightblue": [173, 216, 230],
      "lightcoral": [240, 128, 128],
      "lightcyan": [224, 255, 255],
      "lightgoldenrodyellow": [250, 250, 210],
      "lightgray": [211, 211, 211],
      "lightgreen": [144, 238, 144],
      "lightgrey": [211, 211, 211],
      "lightpink": [255, 182, 193],
      "lightsalmon": [255, 160, 122],
      "lightseagreen": [32, 178, 170],
      "lightskyblue": [135, 206, 250],
      "lightslategray": [119, 136, 153],
      "lightslategrey": [119, 136, 153],
      "lightsteelblue": [176, 196, 222],
      "lightyellow": [255, 255, 224],
      "lime": [0, 255, 0],
      "limegreen": [50, 205, 50],
      "linen": [250, 240, 230],
      "magenta": [255, 0, 255],
      "maroon": [128, 0, 0],
      "mediumaquamarine": [102, 205, 170],
      "mediumblue": [0, 0, 205],
      "mediumorchid": [186, 85, 211],
      "mediumpurple": [147, 112, 219],
      "mediumseagreen": [60, 179, 113],
      "mediumslateblue": [123, 104, 238],
      "mediumspringgreen": [0, 250, 154],
      "mediumturquoise": [72, 209, 204],
      "mediumvioletred": [199, 21, 133],
      "midnightblue": [25, 25, 112],
      "mintcream": [245, 255, 250],
      "mistyrose": [255, 228, 225],
      "moccasin": [255, 228, 181],
      "navajowhite": [255, 222, 173],
      "navy": [0, 0, 128],
      "oldlace": [253, 245, 230],
      "olive": [128, 128, 0],
      "olivedrab": [107, 142, 35],
      "orange": [255, 165, 0],
      "orangered": [255, 69, 0],
      "orchid": [218, 112, 214],
      "palegoldenrod": [238, 232, 170],
      "palegreen": [152, 251, 152],
      "paleturquoise": [175, 238, 238],
      "palevioletred": [219, 112, 147],
      "papayawhip": [255, 239, 213],
      "peachpuff": [255, 218, 185],
      "peru": [205, 133, 63],
      "pink": [255, 192, 203],
      "plum": [221, 160, 221],
      "powderblue": [176, 224, 230],
      "purple": [128, 0, 128],
      "rebeccapurple": [102, 51, 153],
      "red": [255, 0, 0],
      "rosybrown": [188, 143, 143],
      "royalblue": [65, 105, 225],
      "saddlebrown": [139, 69, 19],
      "salmon": [250, 128, 114],
      "sandybrown": [244, 164, 96],
      "seagreen": [46, 139, 87],
      "seashell": [255, 245, 238],
      "sienna": [160, 82, 45],
      "silver": [192, 192, 192],
      "skyblue": [135, 206, 235],
      "slateblue": [106, 90, 205],
      "slategray": [112, 128, 144],
      "slategrey": [112, 128, 144],
      "snow": [255, 250, 250],
      "springgreen": [0, 255, 127],
      "steelblue": [70, 130, 180],
      "tan": [210, 180, 140],
      "teal": [0, 128, 128],
      "thistle": [216, 191, 216],
      "tomato": [255, 99, 71],
      "turquoise": [64, 224, 208],
      "violet": [238, 130, 238],
      "wheat": [245, 222, 179],
      "white": [255, 255, 255],
      "whitesmoke": [245, 245, 245],
      "yellow": [255, 255, 0],
      "yellowgreen": [154, 205, 50]
    };
  }
});

// node_modules/color-convert/conversions.js
var require_conversions = __commonJS({
  "node_modules/color-convert/conversions.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var cssKeywords = require_color_name();
    var reverseKeywords = {};
    for (const key of Object.keys(cssKeywords)) {
      reverseKeywords[cssKeywords[key]] = key;
    }
    var convert3 = {
      rgb: { channels: 3, labels: "rgb" },
      hsl: { channels: 3, labels: "hsl" },
      hsv: { channels: 3, labels: "hsv" },
      hwb: { channels: 3, labels: "hwb" },
      cmyk: { channels: 4, labels: "cmyk" },
      xyz: { channels: 3, labels: "xyz" },
      lab: { channels: 3, labels: "lab" },
      lch: { channels: 3, labels: "lch" },
      hex: { channels: 1, labels: ["hex"] },
      keyword: { channels: 1, labels: ["keyword"] },
      ansi16: { channels: 1, labels: ["ansi16"] },
      ansi256: { channels: 1, labels: ["ansi256"] },
      hcg: { channels: 3, labels: ["h", "c", "g"] },
      apple: { channels: 3, labels: ["r16", "g16", "b16"] },
      gray: { channels: 1, labels: ["gray"] }
    };
    module.exports = convert3;
    for (const model of Object.keys(convert3)) {
      if (!("channels" in convert3[model])) {
        throw new Error("missing channels property: " + model);
      }
      if (!("labels" in convert3[model])) {
        throw new Error("missing channel labels property: " + model);
      }
      if (convert3[model].labels.length !== convert3[model].channels) {
        throw new Error("channel and label counts mismatch: " + model);
      }
      const { channels, labels } = convert3[model];
      delete convert3[model].channels;
      delete convert3[model].labels;
      Object.defineProperty(convert3[model], "channels", { value: channels });
      Object.defineProperty(convert3[model], "labels", { value: labels });
    }
    convert3.rgb.hsl = function(rgb) {
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b2 = rgb[2] / 255;
      const min = Math.min(r, g, b2);
      const max = Math.max(r, g, b2);
      const delta = max - min;
      let h2;
      let s2;
      if (max === min) {
        h2 = 0;
      } else if (r === max) {
        h2 = (g - b2) / delta;
      } else if (g === max) {
        h2 = 2 + (b2 - r) / delta;
      } else if (b2 === max) {
        h2 = 4 + (r - g) / delta;
      }
      h2 = Math.min(h2 * 60, 360);
      if (h2 < 0) {
        h2 += 360;
      }
      const l = (min + max) / 2;
      if (max === min) {
        s2 = 0;
      } else if (l <= 0.5) {
        s2 = delta / (max + min);
      } else {
        s2 = delta / (2 - max - min);
      }
      return [h2, s2 * 100, l * 100];
    };
    convert3.rgb.hsv = function(rgb) {
      let rdif;
      let gdif;
      let bdif;
      let h2;
      let s2;
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b2 = rgb[2] / 255;
      const v = Math.max(r, g, b2);
      const diff = v - Math.min(r, g, b2);
      const diffc = function(c2) {
        return (v - c2) / 6 / diff + 1 / 2;
      };
      if (diff === 0) {
        h2 = 0;
        s2 = 0;
      } else {
        s2 = diff / v;
        rdif = diffc(r);
        gdif = diffc(g);
        bdif = diffc(b2);
        if (r === v) {
          h2 = bdif - gdif;
        } else if (g === v) {
          h2 = 1 / 3 + rdif - bdif;
        } else if (b2 === v) {
          h2 = 2 / 3 + gdif - rdif;
        }
        if (h2 < 0) {
          h2 += 1;
        } else if (h2 > 1) {
          h2 -= 1;
        }
      }
      return [
        h2 * 360,
        s2 * 100,
        v * 100
      ];
    };
    convert3.rgb.hwb = function(rgb) {
      const r = rgb[0];
      const g = rgb[1];
      let b2 = rgb[2];
      const h2 = convert3.rgb.hsl(rgb)[0];
      const w = 1 / 255 * Math.min(r, Math.min(g, b2));
      b2 = 1 - 1 / 255 * Math.max(r, Math.max(g, b2));
      return [h2, w * 100, b2 * 100];
    };
    convert3.rgb.cmyk = function(rgb) {
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b2 = rgb[2] / 255;
      const k2 = Math.min(1 - r, 1 - g, 1 - b2);
      const c2 = (1 - r - k2) / (1 - k2) || 0;
      const m2 = (1 - g - k2) / (1 - k2) || 0;
      const y2 = (1 - b2 - k2) / (1 - k2) || 0;
      return [c2 * 100, m2 * 100, y2 * 100, k2 * 100];
    };
    function comparativeDistance(x2, y2) {
      return (x2[0] - y2[0]) ** 2 + (x2[1] - y2[1]) ** 2 + (x2[2] - y2[2]) ** 2;
    }
    convert3.rgb.keyword = function(rgb) {
      const reversed = reverseKeywords[rgb];
      if (reversed) {
        return reversed;
      }
      let currentClosestDistance = Infinity;
      let currentClosestKeyword;
      for (const keyword of Object.keys(cssKeywords)) {
        const value = cssKeywords[keyword];
        const distance = comparativeDistance(rgb, value);
        if (distance < currentClosestDistance) {
          currentClosestDistance = distance;
          currentClosestKeyword = keyword;
        }
      }
      return currentClosestKeyword;
    };
    convert3.keyword.rgb = function(keyword) {
      return cssKeywords[keyword];
    };
    convert3.rgb.xyz = function(rgb) {
      let r = rgb[0] / 255;
      let g = rgb[1] / 255;
      let b2 = rgb[2] / 255;
      r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
      g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
      b2 = b2 > 0.04045 ? ((b2 + 0.055) / 1.055) ** 2.4 : b2 / 12.92;
      const x2 = r * 0.4124 + g * 0.3576 + b2 * 0.1805;
      const y2 = r * 0.2126 + g * 0.7152 + b2 * 0.0722;
      const z = r * 0.0193 + g * 0.1192 + b2 * 0.9505;
      return [x2 * 100, y2 * 100, z * 100];
    };
    convert3.rgb.lab = function(rgb) {
      const xyz = convert3.rgb.xyz(rgb);
      let x2 = xyz[0];
      let y2 = xyz[1];
      let z = xyz[2];
      x2 /= 95.047;
      y2 /= 100;
      z /= 108.883;
      x2 = x2 > 8856e-6 ? x2 ** (1 / 3) : 7.787 * x2 + 16 / 116;
      y2 = y2 > 8856e-6 ? y2 ** (1 / 3) : 7.787 * y2 + 16 / 116;
      z = z > 8856e-6 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
      const l = 116 * y2 - 16;
      const a2 = 500 * (x2 - y2);
      const b2 = 200 * (y2 - z);
      return [l, a2, b2];
    };
    convert3.hsl.rgb = function(hsl) {
      const h2 = hsl[0] / 360;
      const s2 = hsl[1] / 100;
      const l = hsl[2] / 100;
      let t2;
      let t3;
      let val;
      if (s2 === 0) {
        val = l * 255;
        return [val, val, val];
      }
      if (l < 0.5) {
        t2 = l * (1 + s2);
      } else {
        t2 = l + s2 - l * s2;
      }
      const t1 = 2 * l - t2;
      const rgb = [0, 0, 0];
      for (let i2 = 0; i2 < 3; i2++) {
        t3 = h2 + 1 / 3 * -(i2 - 1);
        if (t3 < 0) {
          t3++;
        }
        if (t3 > 1) {
          t3--;
        }
        if (6 * t3 < 1) {
          val = t1 + (t2 - t1) * 6 * t3;
        } else if (2 * t3 < 1) {
          val = t2;
        } else if (3 * t3 < 2) {
          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        } else {
          val = t1;
        }
        rgb[i2] = val * 255;
      }
      return rgb;
    };
    convert3.hsl.hsv = function(hsl) {
      const h2 = hsl[0];
      let s2 = hsl[1] / 100;
      let l = hsl[2] / 100;
      let smin = s2;
      const lmin = Math.max(l, 0.01);
      l *= 2;
      s2 *= l <= 1 ? l : 2 - l;
      smin *= lmin <= 1 ? lmin : 2 - lmin;
      const v = (l + s2) / 2;
      const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s2 / (l + s2);
      return [h2, sv * 100, v * 100];
    };
    convert3.hsv.rgb = function(hsv) {
      const h2 = hsv[0] / 60;
      const s2 = hsv[1] / 100;
      let v = hsv[2] / 100;
      const hi = Math.floor(h2) % 6;
      const f2 = h2 - Math.floor(h2);
      const p = 255 * v * (1 - s2);
      const q = 255 * v * (1 - s2 * f2);
      const t = 255 * v * (1 - s2 * (1 - f2));
      v *= 255;
      switch (hi) {
        case 0:
          return [v, t, p];
        case 1:
          return [q, v, p];
        case 2:
          return [p, v, t];
        case 3:
          return [p, q, v];
        case 4:
          return [t, p, v];
        case 5:
          return [v, p, q];
      }
    };
    convert3.hsv.hsl = function(hsv) {
      const h2 = hsv[0];
      const s2 = hsv[1] / 100;
      const v = hsv[2] / 100;
      const vmin = Math.max(v, 0.01);
      let sl;
      let l;
      l = (2 - s2) * v;
      const lmin = (2 - s2) * vmin;
      sl = s2 * vmin;
      sl /= lmin <= 1 ? lmin : 2 - lmin;
      sl = sl || 0;
      l /= 2;
      return [h2, sl * 100, l * 100];
    };
    convert3.hwb.rgb = function(hwb) {
      const h2 = hwb[0] / 360;
      let wh = hwb[1] / 100;
      let bl = hwb[2] / 100;
      const ratio = wh + bl;
      let f2;
      if (ratio > 1) {
        wh /= ratio;
        bl /= ratio;
      }
      const i2 = Math.floor(6 * h2);
      const v = 1 - bl;
      f2 = 6 * h2 - i2;
      if ((i2 & 1) !== 0) {
        f2 = 1 - f2;
      }
      const n = wh + f2 * (v - wh);
      let r;
      let g;
      let b2;
      switch (i2) {
        default:
        case 6:
        case 0:
          r = v;
          g = n;
          b2 = wh;
          break;
        case 1:
          r = n;
          g = v;
          b2 = wh;
          break;
        case 2:
          r = wh;
          g = v;
          b2 = n;
          break;
        case 3:
          r = wh;
          g = n;
          b2 = v;
          break;
        case 4:
          r = n;
          g = wh;
          b2 = v;
          break;
        case 5:
          r = v;
          g = wh;
          b2 = n;
          break;
      }
      return [r * 255, g * 255, b2 * 255];
    };
    convert3.cmyk.rgb = function(cmyk) {
      const c2 = cmyk[0] / 100;
      const m2 = cmyk[1] / 100;
      const y2 = cmyk[2] / 100;
      const k2 = cmyk[3] / 100;
      const r = 1 - Math.min(1, c2 * (1 - k2) + k2);
      const g = 1 - Math.min(1, m2 * (1 - k2) + k2);
      const b2 = 1 - Math.min(1, y2 * (1 - k2) + k2);
      return [r * 255, g * 255, b2 * 255];
    };
    convert3.xyz.rgb = function(xyz) {
      const x2 = xyz[0] / 100;
      const y2 = xyz[1] / 100;
      const z = xyz[2] / 100;
      let r;
      let g;
      let b2;
      r = x2 * 3.2406 + y2 * -1.5372 + z * -0.4986;
      g = x2 * -0.9689 + y2 * 1.8758 + z * 0.0415;
      b2 = x2 * 0.0557 + y2 * -0.204 + z * 1.057;
      r = r > 31308e-7 ? 1.055 * r ** (1 / 2.4) - 0.055 : r * 12.92;
      g = g > 31308e-7 ? 1.055 * g ** (1 / 2.4) - 0.055 : g * 12.92;
      b2 = b2 > 31308e-7 ? 1.055 * b2 ** (1 / 2.4) - 0.055 : b2 * 12.92;
      r = Math.min(Math.max(0, r), 1);
      g = Math.min(Math.max(0, g), 1);
      b2 = Math.min(Math.max(0, b2), 1);
      return [r * 255, g * 255, b2 * 255];
    };
    convert3.xyz.lab = function(xyz) {
      let x2 = xyz[0];
      let y2 = xyz[1];
      let z = xyz[2];
      x2 /= 95.047;
      y2 /= 100;
      z /= 108.883;
      x2 = x2 > 8856e-6 ? x2 ** (1 / 3) : 7.787 * x2 + 16 / 116;
      y2 = y2 > 8856e-6 ? y2 ** (1 / 3) : 7.787 * y2 + 16 / 116;
      z = z > 8856e-6 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
      const l = 116 * y2 - 16;
      const a2 = 500 * (x2 - y2);
      const b2 = 200 * (y2 - z);
      return [l, a2, b2];
    };
    convert3.lab.xyz = function(lab) {
      const l = lab[0];
      const a2 = lab[1];
      const b2 = lab[2];
      let x2;
      let y2;
      let z;
      y2 = (l + 16) / 116;
      x2 = a2 / 500 + y2;
      z = y2 - b2 / 200;
      const y22 = y2 ** 3;
      const x22 = x2 ** 3;
      const z2 = z ** 3;
      y2 = y22 > 8856e-6 ? y22 : (y2 - 16 / 116) / 7.787;
      x2 = x22 > 8856e-6 ? x22 : (x2 - 16 / 116) / 7.787;
      z = z2 > 8856e-6 ? z2 : (z - 16 / 116) / 7.787;
      x2 *= 95.047;
      y2 *= 100;
      z *= 108.883;
      return [x2, y2, z];
    };
    convert3.lab.lch = function(lab) {
      const l = lab[0];
      const a2 = lab[1];
      const b2 = lab[2];
      let h2;
      const hr = Math.atan2(b2, a2);
      h2 = hr * 360 / 2 / Math.PI;
      if (h2 < 0) {
        h2 += 360;
      }
      const c2 = Math.sqrt(a2 * a2 + b2 * b2);
      return [l, c2, h2];
    };
    convert3.lch.lab = function(lch) {
      const l = lch[0];
      const c2 = lch[1];
      const h2 = lch[2];
      const hr = h2 / 360 * 2 * Math.PI;
      const a2 = c2 * Math.cos(hr);
      const b2 = c2 * Math.sin(hr);
      return [l, a2, b2];
    };
    convert3.rgb.ansi16 = function(args, saturation = null) {
      const [r, g, b2] = args;
      let value = saturation === null ? convert3.rgb.hsv(args)[2] : saturation;
      value = Math.round(value / 50);
      if (value === 0) {
        return 30;
      }
      let ansi = 30 + (Math.round(b2 / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
      if (value === 2) {
        ansi += 60;
      }
      return ansi;
    };
    convert3.hsv.ansi16 = function(args) {
      return convert3.rgb.ansi16(convert3.hsv.rgb(args), args[2]);
    };
    convert3.rgb.ansi256 = function(args) {
      const r = args[0];
      const g = args[1];
      const b2 = args[2];
      if (r === g && g === b2) {
        if (r < 8) {
          return 16;
        }
        if (r > 248) {
          return 231;
        }
        return Math.round((r - 8) / 247 * 24) + 232;
      }
      const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b2 / 255 * 5);
      return ansi;
    };
    convert3.ansi16.rgb = function(args) {
      let color2 = args % 10;
      if (color2 === 0 || color2 === 7) {
        if (args > 50) {
          color2 += 3.5;
        }
        color2 = color2 / 10.5 * 255;
        return [color2, color2, color2];
      }
      const mult = (~~(args > 50) + 1) * 0.5;
      const r = (color2 & 1) * mult * 255;
      const g = (color2 >> 1 & 1) * mult * 255;
      const b2 = (color2 >> 2 & 1) * mult * 255;
      return [r, g, b2];
    };
    convert3.ansi256.rgb = function(args) {
      if (args >= 232) {
        const c2 = (args - 232) * 10 + 8;
        return [c2, c2, c2];
      }
      args -= 16;
      let rem;
      const r = Math.floor(args / 36) / 5 * 255;
      const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
      const b2 = rem % 6 / 5 * 255;
      return [r, g, b2];
    };
    convert3.rgb.hex = function(args) {
      const integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
      const string = integer.toString(16).toUpperCase();
      return "000000".substring(string.length) + string;
    };
    convert3.hex.rgb = function(args) {
      const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
      if (!match) {
        return [0, 0, 0];
      }
      let colorString = match[0];
      if (match[0].length === 3) {
        colorString = colorString.split("").map((char) => {
          return char + char;
        }).join("");
      }
      const integer = parseInt(colorString, 16);
      const r = integer >> 16 & 255;
      const g = integer >> 8 & 255;
      const b2 = integer & 255;
      return [r, g, b2];
    };
    convert3.rgb.hcg = function(rgb) {
      const r = rgb[0] / 255;
      const g = rgb[1] / 255;
      const b2 = rgb[2] / 255;
      const max = Math.max(Math.max(r, g), b2);
      const min = Math.min(Math.min(r, g), b2);
      const chroma = max - min;
      let grayscale;
      let hue;
      if (chroma < 1) {
        grayscale = min / (1 - chroma);
      } else {
        grayscale = 0;
      }
      if (chroma <= 0) {
        hue = 0;
      } else if (max === r) {
        hue = (g - b2) / chroma % 6;
      } else if (max === g) {
        hue = 2 + (b2 - r) / chroma;
      } else {
        hue = 4 + (r - g) / chroma;
      }
      hue /= 6;
      hue %= 1;
      return [hue * 360, chroma * 100, grayscale * 100];
    };
    convert3.hsl.hcg = function(hsl) {
      const s2 = hsl[1] / 100;
      const l = hsl[2] / 100;
      const c2 = l < 0.5 ? 2 * s2 * l : 2 * s2 * (1 - l);
      let f2 = 0;
      if (c2 < 1) {
        f2 = (l - 0.5 * c2) / (1 - c2);
      }
      return [hsl[0], c2 * 100, f2 * 100];
    };
    convert3.hsv.hcg = function(hsv) {
      const s2 = hsv[1] / 100;
      const v = hsv[2] / 100;
      const c2 = s2 * v;
      let f2 = 0;
      if (c2 < 1) {
        f2 = (v - c2) / (1 - c2);
      }
      return [hsv[0], c2 * 100, f2 * 100];
    };
    convert3.hcg.rgb = function(hcg) {
      const h2 = hcg[0] / 360;
      const c2 = hcg[1] / 100;
      const g = hcg[2] / 100;
      if (c2 === 0) {
        return [g * 255, g * 255, g * 255];
      }
      const pure = [0, 0, 0];
      const hi = h2 % 1 * 6;
      const v = hi % 1;
      const w = 1 - v;
      let mg = 0;
      switch (Math.floor(hi)) {
        case 0:
          pure[0] = 1;
          pure[1] = v;
          pure[2] = 0;
          break;
        case 1:
          pure[0] = w;
          pure[1] = 1;
          pure[2] = 0;
          break;
        case 2:
          pure[0] = 0;
          pure[1] = 1;
          pure[2] = v;
          break;
        case 3:
          pure[0] = 0;
          pure[1] = w;
          pure[2] = 1;
          break;
        case 4:
          pure[0] = v;
          pure[1] = 0;
          pure[2] = 1;
          break;
        default:
          pure[0] = 1;
          pure[1] = 0;
          pure[2] = w;
      }
      mg = (1 - c2) * g;
      return [
        (c2 * pure[0] + mg) * 255,
        (c2 * pure[1] + mg) * 255,
        (c2 * pure[2] + mg) * 255
      ];
    };
    convert3.hcg.hsv = function(hcg) {
      const c2 = hcg[1] / 100;
      const g = hcg[2] / 100;
      const v = c2 + g * (1 - c2);
      let f2 = 0;
      if (v > 0) {
        f2 = c2 / v;
      }
      return [hcg[0], f2 * 100, v * 100];
    };
    convert3.hcg.hsl = function(hcg) {
      const c2 = hcg[1] / 100;
      const g = hcg[2] / 100;
      const l = g * (1 - c2) + 0.5 * c2;
      let s2 = 0;
      if (l > 0 && l < 0.5) {
        s2 = c2 / (2 * l);
      } else if (l >= 0.5 && l < 1) {
        s2 = c2 / (2 * (1 - l));
      }
      return [hcg[0], s2 * 100, l * 100];
    };
    convert3.hcg.hwb = function(hcg) {
      const c2 = hcg[1] / 100;
      const g = hcg[2] / 100;
      const v = c2 + g * (1 - c2);
      return [hcg[0], (v - c2) * 100, (1 - v) * 100];
    };
    convert3.hwb.hcg = function(hwb) {
      const w = hwb[1] / 100;
      const b2 = hwb[2] / 100;
      const v = 1 - b2;
      const c2 = v - w;
      let g = 0;
      if (c2 < 1) {
        g = (v - c2) / (1 - c2);
      }
      return [hwb[0], c2 * 100, g * 100];
    };
    convert3.apple.rgb = function(apple) {
      return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
    };
    convert3.rgb.apple = function(rgb) {
      return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
    };
    convert3.gray.rgb = function(args) {
      return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
    };
    convert3.gray.hsl = function(args) {
      return [0, 0, args[0]];
    };
    convert3.gray.hsv = convert3.gray.hsl;
    convert3.gray.hwb = function(gray) {
      return [0, 100, gray[0]];
    };
    convert3.gray.cmyk = function(gray) {
      return [0, 0, 0, gray[0]];
    };
    convert3.gray.lab = function(gray) {
      return [gray[0], 0, 0];
    };
    convert3.gray.hex = function(gray) {
      const val = Math.round(gray[0] / 100 * 255) & 255;
      const integer = (val << 16) + (val << 8) + val;
      const string = integer.toString(16).toUpperCase();
      return "000000".substring(string.length) + string;
    };
    convert3.rgb.gray = function(rgb) {
      const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
      return [val / 255 * 100];
    };
  }
});

// node_modules/color-convert/route.js
var require_route = __commonJS({
  "node_modules/color-convert/route.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var conversions = require_conversions();
    function buildGraph() {
      const graph = {};
      const models = Object.keys(conversions);
      for (let len = models.length, i2 = 0; i2 < len; i2++) {
        graph[models[i2]] = {
          distance: -1,
          parent: null
        };
      }
      return graph;
    }
    function deriveBFS(fromModel) {
      const graph = buildGraph();
      const queue = [fromModel];
      graph[fromModel].distance = 0;
      while (queue.length) {
        const current = queue.pop();
        const adjacents = Object.keys(conversions[current]);
        for (let len = adjacents.length, i2 = 0; i2 < len; i2++) {
          const adjacent = adjacents[i2];
          const node = graph[adjacent];
          if (node.distance === -1) {
            node.distance = graph[current].distance + 1;
            node.parent = current;
            queue.unshift(adjacent);
          }
        }
      }
      return graph;
    }
    function link(from, to) {
      return function(args) {
        return to(from(args));
      };
    }
    function wrapConversion(toModel, graph) {
      const path = [graph[toModel].parent, toModel];
      let fn = conversions[graph[toModel].parent][toModel];
      let cur = graph[toModel].parent;
      while (graph[cur].parent) {
        path.unshift(graph[cur].parent);
        fn = link(conversions[graph[cur].parent][cur], fn);
        cur = graph[cur].parent;
      }
      fn.conversion = path;
      return fn;
    }
    module.exports = function(fromModel) {
      const graph = deriveBFS(fromModel);
      const conversion = {};
      const models = Object.keys(graph);
      for (let len = models.length, i2 = 0; i2 < len; i2++) {
        const toModel = models[i2];
        const node = graph[toModel];
        if (node.parent === null) {
          continue;
        }
        conversion[toModel] = wrapConversion(toModel, graph);
      }
      return conversion;
    };
  }
});

// node_modules/color-convert/index.js
var require_color_convert = __commonJS({
  "node_modules/color-convert/index.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var conversions = require_conversions();
    var route = require_route();
    var convert3 = {};
    var models = Object.keys(conversions);
    function wrapRaw(fn) {
      const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === void 0 || arg0 === null) {
          return arg0;
        }
        if (arg0.length > 1) {
          args = arg0;
        }
        return fn(args);
      };
      if ("conversion" in fn) {
        wrappedFn.conversion = fn.conversion;
      }
      return wrappedFn;
    }
    function wrapRounded(fn) {
      const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === void 0 || arg0 === null) {
          return arg0;
        }
        if (arg0.length > 1) {
          args = arg0;
        }
        const result = fn(args);
        if (typeof result === "object") {
          for (let len = result.length, i2 = 0; i2 < len; i2++) {
            result[i2] = Math.round(result[i2]);
          }
        }
        return result;
      };
      if ("conversion" in fn) {
        wrappedFn.conversion = fn.conversion;
      }
      return wrappedFn;
    }
    models.forEach((fromModel) => {
      convert3[fromModel] = {};
      Object.defineProperty(convert3[fromModel], "channels", { value: conversions[fromModel].channels });
      Object.defineProperty(convert3[fromModel], "labels", { value: conversions[fromModel].labels });
      const routes = route(fromModel);
      const routeModels = Object.keys(routes);
      routeModels.forEach((toModel) => {
        const fn = routes[toModel];
        convert3[fromModel][toModel] = wrapRounded(fn);
        convert3[fromModel][toModel].raw = wrapRaw(fn);
      });
    });
    module.exports = convert3;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var freeGlobal = typeof window == "object" && window && window.Object === Object && window;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce;
  }
});

// node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "node_modules/lodash/throttle.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var debounce = require_debounce();
    var isObject = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle;
  }
});

// global-externals:@storybook/theming
var theming_exports = {};
__export(theming_exports, {
  CacheProvider: () => CacheProvider,
  ClassNames: () => ClassNames,
  Global: () => Global,
  ThemeProvider: () => ThemeProvider,
  background: () => background,
  color: () => color,
  convert: () => convert2,
  create: () => create,
  createCache: () => createCache,
  createGlobal: () => createGlobal,
  createReset: () => createReset,
  css: () => css,
  darken: () => darken,
  default: () => theming_default,
  ensure: () => ensure,
  ignoreSsrWarning: () => ignoreSsrWarning,
  isPropValid: () => isPropValid,
  jsx: () => jsx,
  keyframes: () => keyframes,
  lighten: () => lighten,
  styled: () => styled,
  themes: () => themes,
  typography: () => typography,
  useTheme: () => useTheme,
  withTheme: () => withTheme
});
var theming_default, CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert2, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme;
var init_theming = __esm({
  "global-externals:@storybook/theming"() {
    init_define_module();
    init_define_process_env();
    theming_default = __STORYBOOKTHEMING__;
    ({ CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert: convert2, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme } = __STORYBOOKTHEMING__);
  }
});

// node_modules/@babel/runtime/helpers/extends.js
var require_extends = __commonJS({
  "node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _extends() {
      module.exports = _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _extends.apply(this, arguments);
    }
    module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/assertThisInitialized.js
var require_assertThisInitialized = __commonJS({
  "node_modules/@babel/runtime/helpers/assertThisInitialized.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/setPrototypeOf.js
var require_setPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/setPrototypeOf.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _setPrototypeOf(o, p) {
      module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _setPrototypeOf(o, p);
    }
    module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/inheritsLoose.js
var require_inheritsLoose = __commonJS({
  "node_modules/@babel/runtime/helpers/inheritsLoose.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var setPrototypeOf = require_setPrototypeOf();
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      setPrototypeOf(subClass, superClass);
    }
    module.exports = _inheritsLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/getPrototypeOf.js
var require_getPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/getPrototypeOf.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _getPrototypeOf(o) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _getPrototypeOf(o);
    }
    module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/isNativeFunction.js
var require_isNativeFunction = __commonJS({
  "node_modules/@babel/runtime/helpers/isNativeFunction.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _isNativeFunction(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js
var require_isNativeReflectConstruct = __commonJS({
  "node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/construct.js
var require_construct = __commonJS({
  "node_modules/@babel/runtime/helpers/construct.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var setPrototypeOf = require_setPrototypeOf();
    var isNativeReflectConstruct = require_isNativeReflectConstruct();
    function _construct(Parent, args, Class) {
      if (isNativeReflectConstruct()) {
        module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
      } else {
        module.exports = _construct = function _construct2(Parent2, args2, Class2) {
          var a2 = [null];
          a2.push.apply(a2, args2);
          var Constructor = Function.bind.apply(Parent2, a2);
          var instance = new Constructor();
          if (Class2)
            setPrototypeOf(instance, Class2.prototype);
          return instance;
        }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      }
      return _construct.apply(null, arguments);
    }
    module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/wrapNativeSuper.js
var require_wrapNativeSuper = __commonJS({
  "node_modules/@babel/runtime/helpers/wrapNativeSuper.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getPrototypeOf = require_getPrototypeOf();
    var setPrototypeOf = require_setPrototypeOf();
    var isNativeFunction = require_isNativeFunction();
    var construct = require_construct();
    function _wrapNativeSuper(Class) {
      var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
      module.exports = _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
        if (Class2 === null || !isNativeFunction(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper2);
        }
        function Wrapper2() {
          return construct(Class2, arguments, getPrototypeOf(this).constructor);
        }
        Wrapper2.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper2,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return setPrototypeOf(Wrapper2, Class2);
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _wrapNativeSuper(Class);
    }
    module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js
var require_taggedTemplateLiteralLoose = __commonJS({
  "node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function _taggedTemplateLiteralLoose(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      strings.raw = raw;
      return strings;
    }
    module.exports = _taggedTemplateLiteralLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/polished/dist/polished.cjs.js
var require_polished_cjs = __commonJS({
  "node_modules/polished/dist/polished.cjs.js"(exports) {
    "use strict";
    init_define_module();
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var _extends = require_extends();
    var _assertThisInitialized = require_assertThisInitialized();
    var _inheritsLoose = require_inheritsLoose();
    var _wrapNativeSuper = require_wrapNativeSuper();
    var _taggedTemplateLiteralLoose = require_taggedTemplateLiteralLoose();
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var _extends__default = /* @__PURE__ */ _interopDefaultLegacy(_extends);
    var _assertThisInitialized__default = /* @__PURE__ */ _interopDefaultLegacy(_assertThisInitialized);
    var _inheritsLoose__default = /* @__PURE__ */ _interopDefaultLegacy(_inheritsLoose);
    var _wrapNativeSuper__default = /* @__PURE__ */ _interopDefaultLegacy(_wrapNativeSuper);
    var _taggedTemplateLiteralLoose__default = /* @__PURE__ */ _interopDefaultLegacy(_taggedTemplateLiteralLoose);
    function last() {
      var _ref;
      return _ref = arguments.length - 1, _ref < 0 || arguments.length <= _ref ? void 0 : arguments[_ref];
    }
    function negation(a2) {
      return -a2;
    }
    function addition(a2, b2) {
      return a2 + b2;
    }
    function subtraction(a2, b2) {
      return a2 - b2;
    }
    function multiplication(a2, b2) {
      return a2 * b2;
    }
    function division(a2, b2) {
      return a2 / b2;
    }
    function max() {
      return Math.max.apply(Math, arguments);
    }
    function min() {
      return Math.min.apply(Math, arguments);
    }
    function comma() {
      return Array.of.apply(Array, arguments);
    }
    var defaultSymbols = {
      symbols: {
        "*": {
          infix: {
            symbol: "*",
            f: multiplication,
            notation: "infix",
            precedence: 4,
            rightToLeft: 0,
            argCount: 2
          },
          symbol: "*",
          regSymbol: "\\*"
        },
        "/": {
          infix: {
            symbol: "/",
            f: division,
            notation: "infix",
            precedence: 4,
            rightToLeft: 0,
            argCount: 2
          },
          symbol: "/",
          regSymbol: "/"
        },
        "+": {
          infix: {
            symbol: "+",
            f: addition,
            notation: "infix",
            precedence: 2,
            rightToLeft: 0,
            argCount: 2
          },
          prefix: {
            symbol: "+",
            f: last,
            notation: "prefix",
            precedence: 3,
            rightToLeft: 0,
            argCount: 1
          },
          symbol: "+",
          regSymbol: "\\+"
        },
        "-": {
          infix: {
            symbol: "-",
            f: subtraction,
            notation: "infix",
            precedence: 2,
            rightToLeft: 0,
            argCount: 2
          },
          prefix: {
            symbol: "-",
            f: negation,
            notation: "prefix",
            precedence: 3,
            rightToLeft: 0,
            argCount: 1
          },
          symbol: "-",
          regSymbol: "-"
        },
        ",": {
          infix: {
            symbol: ",",
            f: comma,
            notation: "infix",
            precedence: 1,
            rightToLeft: 0,
            argCount: 2
          },
          symbol: ",",
          regSymbol: ","
        },
        "(": {
          prefix: {
            symbol: "(",
            f: last,
            notation: "prefix",
            precedence: 0,
            rightToLeft: 0,
            argCount: 1
          },
          symbol: "(",
          regSymbol: "\\("
        },
        ")": {
          postfix: {
            symbol: ")",
            f: void 0,
            notation: "postfix",
            precedence: 0,
            rightToLeft: 0,
            argCount: 1
          },
          symbol: ")",
          regSymbol: "\\)"
        },
        min: {
          func: {
            symbol: "min",
            f: min,
            notation: "func",
            precedence: 0,
            rightToLeft: 0,
            argCount: 1
          },
          symbol: "min",
          regSymbol: "min\\b"
        },
        max: {
          func: {
            symbol: "max",
            f: max,
            notation: "func",
            precedence: 0,
            rightToLeft: 0,
            argCount: 1
          },
          symbol: "max",
          regSymbol: "max\\b"
        }
      }
    };
    var defaultSymbolMap = defaultSymbols;
    var PolishedError = /* @__PURE__ */ function(_Error) {
      _inheritsLoose__default["default"](PolishedError2, _Error);
      function PolishedError2(code) {
        var _this;
        if (true) {
          _this = _Error.call(this, "An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#" + code + " for more information.") || this;
        } else {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }
          _this = _Error.call(this, format2.apply(void 0, [ERRORS[code]].concat(args))) || this;
        }
        return _assertThisInitialized__default["default"](_this);
      }
      return PolishedError2;
    }(/* @__PURE__ */ _wrapNativeSuper__default["default"](Error));
    var unitRegExp = /((?!\w)a|na|hc|mc|dg|me[r]?|xe|ni(?![a-zA-Z])|mm|cp|tp|xp|q(?!s)|hv|xamv|nimv|wv|sm|s(?!\D|$)|ged|darg?|nrut)/g;
    function mergeSymbolMaps(additionalSymbols) {
      var symbolMap = {};
      symbolMap.symbols = additionalSymbols ? _extends__default["default"]({}, defaultSymbolMap.symbols, additionalSymbols.symbols) : _extends__default["default"]({}, defaultSymbolMap.symbols);
      return symbolMap;
    }
    function exec(operators, values) {
      var _ref;
      var op = operators.pop();
      values.push(op.f.apply(op, (_ref = []).concat.apply(_ref, values.splice(-op.argCount))));
      return op.precedence;
    }
    function calculate(expression, additionalSymbols) {
      var symbolMap = mergeSymbolMaps(additionalSymbols);
      var match;
      var operators = [symbolMap.symbols["("].prefix];
      var values = [];
      var pattern = new RegExp(
        "\\d+(?:\\.\\d+)?|" + Object.keys(symbolMap.symbols).map(function(key) {
          return symbolMap.symbols[key];
        }).sort(function(a2, b2) {
          return b2.symbol.length - a2.symbol.length;
        }).map(function(val) {
          return val.regSymbol;
        }).join("|") + "|(\\S)",
        "g"
      );
      pattern.lastIndex = 0;
      var afterValue = false;
      do {
        match = pattern.exec(expression);
        var _ref2 = match || [")", void 0], token = _ref2[0], bad = _ref2[1];
        var notNumber = symbolMap.symbols[token];
        var notNewValue = notNumber && !notNumber.prefix && !notNumber.func;
        var notAfterValue = !notNumber || !notNumber.postfix && !notNumber.infix;
        if (bad || (afterValue ? notAfterValue : notNewValue)) {
          throw new PolishedError(37, match ? match.index : expression.length, expression);
        }
        if (afterValue) {
          var curr = notNumber.postfix || notNumber.infix;
          do {
            var prev = operators[operators.length - 1];
            if ((curr.precedence - prev.precedence || prev.rightToLeft) > 0)
              break;
          } while (exec(operators, values));
          afterValue = curr.notation === "postfix";
          if (curr.symbol !== ")") {
            operators.push(curr);
            if (afterValue)
              exec(operators, values);
          }
        } else if (notNumber) {
          operators.push(notNumber.prefix || notNumber.func);
          if (notNumber.func) {
            match = pattern.exec(expression);
            if (!match || match[0] !== "(") {
              throw new PolishedError(38, match ? match.index : expression.length, expression);
            }
          }
        } else {
          values.push(+token);
          afterValue = true;
        }
      } while (match && operators.length);
      if (operators.length) {
        throw new PolishedError(39, match ? match.index : expression.length, expression);
      } else if (match) {
        throw new PolishedError(40, match ? match.index : expression.length, expression);
      } else {
        return values.pop();
      }
    }
    function reverseString(str2) {
      return str2.split("").reverse().join("");
    }
    function math(formula, additionalSymbols) {
      var reversedFormula = reverseString(formula);
      var formulaMatch = reversedFormula.match(unitRegExp);
      if (formulaMatch && !formulaMatch.every(function(unit) {
        return unit === formulaMatch[0];
      })) {
        throw new PolishedError(41);
      }
      var cleanFormula = reverseString(reversedFormula.replace(unitRegExp, ""));
      return "" + calculate(cleanFormula, additionalSymbols) + (formulaMatch ? reverseString(formulaMatch[0]) : "");
    }
    var cssVariableRegex = /--[\S]*/g;
    function cssVar(cssVariable, defaultValue) {
      if (!cssVariable || !cssVariable.match(cssVariableRegex)) {
        throw new PolishedError(73);
      }
      var variableValue;
      if (typeof document !== "undefined" && document.documentElement !== null) {
        variableValue = getComputedStyle(document.documentElement).getPropertyValue(cssVariable);
      }
      if (variableValue) {
        return variableValue.trim();
      } else if (defaultValue) {
        return defaultValue;
      }
      throw new PolishedError(74);
    }
    function capitalizeString(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    }
    var positionMap$1 = ["Top", "Right", "Bottom", "Left"];
    function generateProperty(property, position2) {
      if (!property)
        return position2.toLowerCase();
      var splitProperty = property.split("-");
      if (splitProperty.length > 1) {
        splitProperty.splice(1, 0, position2);
        return splitProperty.reduce(function(acc, val) {
          return "" + acc + capitalizeString(val);
        });
      }
      var joinedProperty = property.replace(/([a-z])([A-Z])/g, "$1" + position2 + "$2");
      return property === joinedProperty ? "" + property + position2 : joinedProperty;
    }
    function generateStyles(property, valuesWithDefaults) {
      var styles = {};
      for (var i2 = 0; i2 < valuesWithDefaults.length; i2 += 1) {
        if (valuesWithDefaults[i2] || valuesWithDefaults[i2] === 0) {
          styles[generateProperty(property, positionMap$1[i2])] = valuesWithDefaults[i2];
        }
      }
      return styles;
    }
    function directionalProperty(property) {
      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        values[_key - 1] = arguments[_key];
      }
      var firstValue = values[0], _values$ = values[1], secondValue = _values$ === void 0 ? firstValue : _values$, _values$2 = values[2], thirdValue = _values$2 === void 0 ? firstValue : _values$2, _values$3 = values[3], fourthValue = _values$3 === void 0 ? secondValue : _values$3;
      var valuesWithDefaults = [firstValue, secondValue, thirdValue, fourthValue];
      return generateStyles(property, valuesWithDefaults);
    }
    function endsWith(string, suffix) {
      return string.substr(-suffix.length) === suffix;
    }
    var cssRegex$1 = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
    function stripUnit(value) {
      if (typeof value !== "string")
        return value;
      var matchedValue = value.match(cssRegex$1);
      return matchedValue ? parseFloat(value) : value;
    }
    var pxtoFactory = function pxtoFactory2(to) {
      return function(pxval, base) {
        if (base === void 0) {
          base = "16px";
        }
        var newPxval = pxval;
        var newBase = base;
        if (typeof pxval === "string") {
          if (!endsWith(pxval, "px")) {
            throw new PolishedError(69, to, pxval);
          }
          newPxval = stripUnit(pxval);
        }
        if (typeof base === "string") {
          if (!endsWith(base, "px")) {
            throw new PolishedError(70, to, base);
          }
          newBase = stripUnit(base);
        }
        if (typeof newPxval === "string") {
          throw new PolishedError(71, pxval, to);
        }
        if (typeof newBase === "string") {
          throw new PolishedError(72, base, to);
        }
        return "" + newPxval / newBase + to;
      };
    };
    var pixelsto = pxtoFactory;
    var em = /* @__PURE__ */ pixelsto("em");
    var em$1 = em;
    var cssRegex = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
    function getValueAndUnit(value) {
      if (typeof value !== "string")
        return [value, ""];
      var matchedValue = value.match(cssRegex);
      if (matchedValue)
        return [parseFloat(value), matchedValue[2]];
      return [value, void 0];
    }
    function important(styleBlock, rules) {
      if (typeof styleBlock !== "object" || styleBlock === null) {
        throw new PolishedError(75, typeof styleBlock);
      }
      var newStyleBlock = {};
      Object.keys(styleBlock).forEach(function(key) {
        if (typeof styleBlock[key] === "object" && styleBlock[key] !== null) {
          newStyleBlock[key] = important(styleBlock[key], rules);
        } else if (!rules || rules && (rules === key || rules.indexOf(key) >= 0)) {
          newStyleBlock[key] = styleBlock[key] + " !important";
        } else {
          newStyleBlock[key] = styleBlock[key];
        }
      });
      return newStyleBlock;
    }
    var ratioNames = {
      minorSecond: 1.067,
      majorSecond: 1.125,
      minorThird: 1.2,
      majorThird: 1.25,
      perfectFourth: 1.333,
      augFourth: 1.414,
      perfectFifth: 1.5,
      minorSixth: 1.6,
      goldenSection: 1.618,
      majorSixth: 1.667,
      minorSeventh: 1.778,
      majorSeventh: 1.875,
      octave: 2,
      majorTenth: 2.5,
      majorEleventh: 2.667,
      majorTwelfth: 3,
      doubleOctave: 4
    };
    function getRatio(ratioName) {
      return ratioNames[ratioName];
    }
    function modularScale(steps, base, ratio) {
      if (base === void 0) {
        base = "1em";
      }
      if (ratio === void 0) {
        ratio = 1.333;
      }
      if (typeof steps !== "number") {
        throw new PolishedError(42);
      }
      if (typeof ratio === "string" && !ratioNames[ratio]) {
        throw new PolishedError(43);
      }
      var _ref = typeof base === "string" ? getValueAndUnit(base) : [base, ""], realBase = _ref[0], unit = _ref[1];
      var realRatio = typeof ratio === "string" ? getRatio(ratio) : ratio;
      if (typeof realBase === "string") {
        throw new PolishedError(44, base);
      }
      return "" + realBase * Math.pow(realRatio, steps) + (unit || "");
    }
    var rem = /* @__PURE__ */ pixelsto("rem");
    var rem$1 = rem;
    var defaultFontSize = 16;
    function convertBase(base) {
      var deconstructedValue = getValueAndUnit(base);
      if (deconstructedValue[1] === "px") {
        return parseFloat(base);
      }
      if (deconstructedValue[1] === "%") {
        return parseFloat(base) / 100 * defaultFontSize;
      }
      throw new PolishedError(78, deconstructedValue[1]);
    }
    function getBaseFromDoc() {
      if (typeof document !== "undefined" && document.documentElement !== null) {
        var rootFontSize = getComputedStyle(document.documentElement).fontSize;
        return rootFontSize ? convertBase(rootFontSize) : defaultFontSize;
      }
      return defaultFontSize;
    }
    function remToPx(value, base) {
      var deconstructedValue = getValueAndUnit(value);
      if (deconstructedValue[1] !== "rem" && deconstructedValue[1] !== "") {
        throw new PolishedError(77, deconstructedValue[1]);
      }
      var newBase = base ? convertBase(base) : getBaseFromDoc();
      return deconstructedValue[0] * newBase + "px";
    }
    var functionsMap$3 = {
      back: "cubic-bezier(0.600, -0.280, 0.735, 0.045)",
      circ: "cubic-bezier(0.600,  0.040, 0.980, 0.335)",
      cubic: "cubic-bezier(0.550,  0.055, 0.675, 0.190)",
      expo: "cubic-bezier(0.950,  0.050, 0.795, 0.035)",
      quad: "cubic-bezier(0.550,  0.085, 0.680, 0.530)",
      quart: "cubic-bezier(0.895,  0.030, 0.685, 0.220)",
      quint: "cubic-bezier(0.755,  0.050, 0.855, 0.060)",
      sine: "cubic-bezier(0.470,  0.000, 0.745, 0.715)"
    };
    function easeIn(functionName) {
      return functionsMap$3[functionName.toLowerCase().trim()];
    }
    var functionsMap$2 = {
      back: "cubic-bezier(0.680, -0.550, 0.265, 1.550)",
      circ: "cubic-bezier(0.785,  0.135, 0.150, 0.860)",
      cubic: "cubic-bezier(0.645,  0.045, 0.355, 1.000)",
      expo: "cubic-bezier(1.000,  0.000, 0.000, 1.000)",
      quad: "cubic-bezier(0.455,  0.030, 0.515, 0.955)",
      quart: "cubic-bezier(0.770,  0.000, 0.175, 1.000)",
      quint: "cubic-bezier(0.860,  0.000, 0.070, 1.000)",
      sine: "cubic-bezier(0.445,  0.050, 0.550, 0.950)"
    };
    function easeInOut(functionName) {
      return functionsMap$2[functionName.toLowerCase().trim()];
    }
    var functionsMap$1 = {
      back: "cubic-bezier(0.175,  0.885, 0.320, 1.275)",
      cubic: "cubic-bezier(0.215,  0.610, 0.355, 1.000)",
      circ: "cubic-bezier(0.075,  0.820, 0.165, 1.000)",
      expo: "cubic-bezier(0.190,  1.000, 0.220, 1.000)",
      quad: "cubic-bezier(0.250,  0.460, 0.450, 0.940)",
      quart: "cubic-bezier(0.165,  0.840, 0.440, 1.000)",
      quint: "cubic-bezier(0.230,  1.000, 0.320, 1.000)",
      sine: "cubic-bezier(0.390,  0.575, 0.565, 1.000)"
    };
    function easeOut(functionName) {
      return functionsMap$1[functionName.toLowerCase().trim()];
    }
    function between(fromSize, toSize, minScreen, maxScreen) {
      if (minScreen === void 0) {
        minScreen = "320px";
      }
      if (maxScreen === void 0) {
        maxScreen = "1200px";
      }
      var _getValueAndUnit = getValueAndUnit(fromSize), unitlessFromSize = _getValueAndUnit[0], fromSizeUnit = _getValueAndUnit[1];
      var _getValueAndUnit2 = getValueAndUnit(toSize), unitlessToSize = _getValueAndUnit2[0], toSizeUnit = _getValueAndUnit2[1];
      var _getValueAndUnit3 = getValueAndUnit(minScreen), unitlessMinScreen = _getValueAndUnit3[0], minScreenUnit = _getValueAndUnit3[1];
      var _getValueAndUnit4 = getValueAndUnit(maxScreen), unitlessMaxScreen = _getValueAndUnit4[0], maxScreenUnit = _getValueAndUnit4[1];
      if (typeof unitlessMinScreen !== "number" || typeof unitlessMaxScreen !== "number" || !minScreenUnit || !maxScreenUnit || minScreenUnit !== maxScreenUnit) {
        throw new PolishedError(47);
      }
      if (typeof unitlessFromSize !== "number" || typeof unitlessToSize !== "number" || fromSizeUnit !== toSizeUnit) {
        throw new PolishedError(48);
      }
      if (fromSizeUnit !== minScreenUnit || toSizeUnit !== maxScreenUnit) {
        throw new PolishedError(76);
      }
      var slope = (unitlessFromSize - unitlessToSize) / (unitlessMinScreen - unitlessMaxScreen);
      var base = unitlessToSize - slope * unitlessMaxScreen;
      return "calc(" + base.toFixed(2) + (fromSizeUnit || "") + " + " + (100 * slope).toFixed(2) + "vw)";
    }
    function clearFix(parent) {
      var _ref;
      if (parent === void 0) {
        parent = "&";
      }
      var pseudoSelector = parent + "::after";
      return _ref = {}, _ref[pseudoSelector] = {
        clear: "both",
        content: '""',
        display: "table"
      }, _ref;
    }
    function cover(offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return {
        position: "absolute",
        top: offset,
        right: offset,
        bottom: offset,
        left: offset
      };
    }
    function ellipsis(width, lines) {
      if (lines === void 0) {
        lines = 1;
      }
      var styles = {
        display: "inline-block",
        maxWidth: width || "100%",
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap",
        wordWrap: "normal"
      };
      return lines > 1 ? _extends__default["default"]({}, styles, {
        WebkitBoxOrient: "vertical",
        WebkitLineClamp: lines,
        display: "-webkit-box",
        whiteSpace: "normal"
      }) : styles;
    }
    function _createForOfIteratorHelperLoose(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (it)
        return (it = it.call(o)).next.bind(it);
      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it)
          o = it;
        var i2 = 0;
        return function() {
          if (i2 >= o.length)
            return { done: true };
          return { done: false, value: o[i2++] };
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
        arr2[i2] = arr[i2];
      }
      return arr2;
    }
    function fluidRange(cssProp, minScreen, maxScreen) {
      if (minScreen === void 0) {
        minScreen = "320px";
      }
      if (maxScreen === void 0) {
        maxScreen = "1200px";
      }
      if (!Array.isArray(cssProp) && typeof cssProp !== "object" || cssProp === null) {
        throw new PolishedError(49);
      }
      if (Array.isArray(cssProp)) {
        var mediaQueries = {};
        var fallbacks = {};
        for (var _iterator = _createForOfIteratorHelperLoose(cssProp), _step; !(_step = _iterator()).done; ) {
          var _extends2, _extends3;
          var obj = _step.value;
          if (!obj.prop || !obj.fromSize || !obj.toSize) {
            throw new PolishedError(50);
          }
          fallbacks[obj.prop] = obj.fromSize;
          mediaQueries["@media (min-width: " + minScreen + ")"] = _extends__default["default"]({}, mediaQueries["@media (min-width: " + minScreen + ")"], (_extends2 = {}, _extends2[obj.prop] = between(obj.fromSize, obj.toSize, minScreen, maxScreen), _extends2));
          mediaQueries["@media (min-width: " + maxScreen + ")"] = _extends__default["default"]({}, mediaQueries["@media (min-width: " + maxScreen + ")"], (_extends3 = {}, _extends3[obj.prop] = obj.toSize, _extends3));
        }
        return _extends__default["default"]({}, fallbacks, mediaQueries);
      } else {
        var _ref, _ref2, _ref3;
        if (!cssProp.prop || !cssProp.fromSize || !cssProp.toSize) {
          throw new PolishedError(51);
        }
        return _ref3 = {}, _ref3[cssProp.prop] = cssProp.fromSize, _ref3["@media (min-width: " + minScreen + ")"] = (_ref = {}, _ref[cssProp.prop] = between(cssProp.fromSize, cssProp.toSize, minScreen, maxScreen), _ref), _ref3["@media (min-width: " + maxScreen + ")"] = (_ref2 = {}, _ref2[cssProp.prop] = cssProp.toSize, _ref2), _ref3;
      }
    }
    var dataURIRegex = /^\s*data:([a-z]+\/[a-z-]+(;[a-z-]+=[a-z-]+)?)?(;charset=[a-z0-9-]+)?(;base64)?,[a-z0-9!$&',()*+,;=\-._~:@/?%\s]*\s*$/i;
    var formatHintMap = {
      woff: "woff",
      woff2: "woff2",
      ttf: "truetype",
      otf: "opentype",
      eot: "embedded-opentype",
      svg: "svg",
      svgz: "svg"
    };
    function generateFormatHint(format3, formatHint) {
      if (!formatHint)
        return "";
      return ' format("' + formatHintMap[format3] + '")';
    }
    function isDataURI(fontFilePath) {
      return !!fontFilePath.replace(/\s+/g, " ").match(dataURIRegex);
    }
    function generateFileReferences(fontFilePath, fileFormats, formatHint) {
      if (isDataURI(fontFilePath)) {
        return 'url("' + fontFilePath + '")' + generateFormatHint(fileFormats[0], formatHint);
      }
      var fileFontReferences = fileFormats.map(function(format3) {
        return 'url("' + fontFilePath + "." + format3 + '")' + generateFormatHint(format3, formatHint);
      });
      return fileFontReferences.join(", ");
    }
    function generateLocalReferences(localFonts) {
      var localFontReferences = localFonts.map(function(font) {
        return 'local("' + font + '")';
      });
      return localFontReferences.join(", ");
    }
    function generateSources(fontFilePath, localFonts, fileFormats, formatHint) {
      var fontReferences = [];
      if (localFonts)
        fontReferences.push(generateLocalReferences(localFonts));
      if (fontFilePath) {
        fontReferences.push(generateFileReferences(fontFilePath, fileFormats, formatHint));
      }
      return fontReferences.join(", ");
    }
    function fontFace(_ref) {
      var fontFamily = _ref.fontFamily, fontFilePath = _ref.fontFilePath, fontStretch = _ref.fontStretch, fontStyle = _ref.fontStyle, fontVariant = _ref.fontVariant, fontWeight = _ref.fontWeight, _ref$fileFormats = _ref.fileFormats, fileFormats = _ref$fileFormats === void 0 ? ["eot", "woff2", "woff", "ttf", "svg"] : _ref$fileFormats, _ref$formatHint = _ref.formatHint, formatHint = _ref$formatHint === void 0 ? false : _ref$formatHint, _ref$localFonts = _ref.localFonts, localFonts = _ref$localFonts === void 0 ? [fontFamily] : _ref$localFonts, unicodeRange = _ref.unicodeRange, fontDisplay = _ref.fontDisplay, fontVariationSettings = _ref.fontVariationSettings, fontFeatureSettings = _ref.fontFeatureSettings;
      if (!fontFamily)
        throw new PolishedError(55);
      if (!fontFilePath && !localFonts) {
        throw new PolishedError(52);
      }
      if (localFonts && !Array.isArray(localFonts)) {
        throw new PolishedError(53);
      }
      if (!Array.isArray(fileFormats)) {
        throw new PolishedError(54);
      }
      var fontFaceDeclaration = {
        "@font-face": {
          fontFamily,
          src: generateSources(fontFilePath, localFonts, fileFormats, formatHint),
          unicodeRange,
          fontStretch,
          fontStyle,
          fontVariant,
          fontWeight,
          fontDisplay,
          fontVariationSettings,
          fontFeatureSettings
        }
      };
      return JSON.parse(JSON.stringify(fontFaceDeclaration));
    }
    function hideText() {
      return {
        textIndent: "101%",
        overflow: "hidden",
        whiteSpace: "nowrap"
      };
    }
    function hideVisually() {
      return {
        border: "0",
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: "0",
        position: "absolute",
        whiteSpace: "nowrap",
        width: "1px"
      };
    }
    function hiDPI(ratio) {
      if (ratio === void 0) {
        ratio = 1.3;
      }
      return "\n    @media only screen and (-webkit-min-device-pixel-ratio: " + ratio + "),\n    only screen and (min--moz-device-pixel-ratio: " + ratio + "),\n    only screen and (-o-min-device-pixel-ratio: " + ratio + "/1),\n    only screen and (min-resolution: " + Math.round(ratio * 96) + "dpi),\n    only screen and (min-resolution: " + ratio + "dppx)\n  ";
    }
    function constructGradientValue(literals) {
      var template2 = "";
      for (var _len = arguments.length, substitutions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        substitutions[_key - 1] = arguments[_key];
      }
      for (var i2 = 0; i2 < literals.length; i2 += 1) {
        template2 += literals[i2];
        if (i2 === substitutions.length - 1 && substitutions[i2]) {
          var definedValues = substitutions.filter(function(substitute) {
            return !!substitute;
          });
          if (definedValues.length > 1) {
            template2 = template2.slice(0, -1);
            template2 += ", " + substitutions[i2];
          } else if (definedValues.length === 1) {
            template2 += "" + substitutions[i2];
          }
        } else if (substitutions[i2]) {
          template2 += substitutions[i2] + " ";
        }
      }
      return template2.trim();
    }
    var _templateObject$1;
    function linearGradient(_ref) {
      var colorStops = _ref.colorStops, fallback = _ref.fallback, _ref$toDirection = _ref.toDirection, toDirection = _ref$toDirection === void 0 ? "" : _ref$toDirection;
      if (!colorStops || colorStops.length < 2) {
        throw new PolishedError(56);
      }
      return {
        backgroundColor: fallback || colorStops[0].replace(/,\s+/g, ",").split(" ")[0].replace(/,(?=\S)/g, ", "),
        backgroundImage: constructGradientValue(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteralLoose__default["default"](["linear-gradient(", "", ")"])), toDirection, colorStops.join(", ").replace(/,(?=\S)/g, ", "))
      };
    }
    function normalize() {
      var _ref;
      return [(_ref = {
        html: {
          lineHeight: "1.15",
          textSizeAdjust: "100%"
        },
        body: {
          margin: "0"
        },
        main: {
          display: "block"
        },
        h1: {
          fontSize: "2em",
          margin: "0.67em 0"
        },
        hr: {
          boxSizing: "content-box",
          height: "0",
          overflow: "visible"
        },
        pre: {
          fontFamily: "monospace, monospace",
          fontSize: "1em"
        },
        a: {
          backgroundColor: "transparent"
        },
        "abbr[title]": {
          borderBottom: "none",
          textDecoration: "underline"
        }
      }, _ref["b,\n    strong"] = {
        fontWeight: "bolder"
      }, _ref["code,\n    kbd,\n    samp"] = {
        fontFamily: "monospace, monospace",
        fontSize: "1em"
      }, _ref.small = {
        fontSize: "80%"
      }, _ref["sub,\n    sup"] = {
        fontSize: "75%",
        lineHeight: "0",
        position: "relative",
        verticalAlign: "baseline"
      }, _ref.sub = {
        bottom: "-0.25em"
      }, _ref.sup = {
        top: "-0.5em"
      }, _ref.img = {
        borderStyle: "none"
      }, _ref["button,\n    input,\n    optgroup,\n    select,\n    textarea"] = {
        fontFamily: "inherit",
        fontSize: "100%",
        lineHeight: "1.15",
        margin: "0"
      }, _ref["button,\n    input"] = {
        overflow: "visible"
      }, _ref["button,\n    select"] = {
        textTransform: "none"
      }, _ref['button,\n    html [type="button"],\n    [type="reset"],\n    [type="submit"]'] = {
        WebkitAppearance: "button"
      }, _ref['button::-moz-focus-inner,\n    [type="button"]::-moz-focus-inner,\n    [type="reset"]::-moz-focus-inner,\n    [type="submit"]::-moz-focus-inner'] = {
        borderStyle: "none",
        padding: "0"
      }, _ref['button:-moz-focusring,\n    [type="button"]:-moz-focusring,\n    [type="reset"]:-moz-focusring,\n    [type="submit"]:-moz-focusring'] = {
        outline: "1px dotted ButtonText"
      }, _ref.fieldset = {
        padding: "0.35em 0.625em 0.75em"
      }, _ref.legend = {
        boxSizing: "border-box",
        color: "inherit",
        display: "table",
        maxWidth: "100%",
        padding: "0",
        whiteSpace: "normal"
      }, _ref.progress = {
        verticalAlign: "baseline"
      }, _ref.textarea = {
        overflow: "auto"
      }, _ref['[type="checkbox"],\n    [type="radio"]'] = {
        boxSizing: "border-box",
        padding: "0"
      }, _ref['[type="number"]::-webkit-inner-spin-button,\n    [type="number"]::-webkit-outer-spin-button'] = {
        height: "auto"
      }, _ref['[type="search"]'] = {
        WebkitAppearance: "textfield",
        outlineOffset: "-2px"
      }, _ref['[type="search"]::-webkit-search-decoration'] = {
        WebkitAppearance: "none"
      }, _ref["::-webkit-file-upload-button"] = {
        WebkitAppearance: "button",
        font: "inherit"
      }, _ref.details = {
        display: "block"
      }, _ref.summary = {
        display: "list-item"
      }, _ref.template = {
        display: "none"
      }, _ref["[hidden]"] = {
        display: "none"
      }, _ref), {
        "abbr[title]": {
          textDecoration: "underline dotted"
        }
      }];
    }
    var _templateObject;
    function radialGradient(_ref) {
      var colorStops = _ref.colorStops, _ref$extent = _ref.extent, extent = _ref$extent === void 0 ? "" : _ref$extent, fallback = _ref.fallback, _ref$position = _ref.position, position2 = _ref$position === void 0 ? "" : _ref$position, _ref$shape = _ref.shape, shape = _ref$shape === void 0 ? "" : _ref$shape;
      if (!colorStops || colorStops.length < 2) {
        throw new PolishedError(57);
      }
      return {
        backgroundColor: fallback || colorStops[0].split(" ")[0],
        backgroundImage: constructGradientValue(_templateObject || (_templateObject = _taggedTemplateLiteralLoose__default["default"](["radial-gradient(", "", "", "", ")"])), position2, shape, extent, colorStops.join(", "))
      };
    }
    function retinaImage(filename, backgroundSize, extension, retinaFilename, retinaSuffix) {
      var _ref;
      if (extension === void 0) {
        extension = "png";
      }
      if (retinaSuffix === void 0) {
        retinaSuffix = "_2x";
      }
      if (!filename) {
        throw new PolishedError(58);
      }
      var ext = extension.replace(/^\./, "");
      var rFilename = retinaFilename ? retinaFilename + "." + ext : "" + filename + retinaSuffix + "." + ext;
      return _ref = {
        backgroundImage: "url(" + filename + "." + ext + ")"
      }, _ref[hiDPI()] = _extends__default["default"]({
        backgroundImage: "url(" + rFilename + ")"
      }, backgroundSize ? {
        backgroundSize
      } : {}), _ref;
    }
    var functionsMap = {
      easeInBack: "cubic-bezier(0.600, -0.280, 0.735, 0.045)",
      easeInCirc: "cubic-bezier(0.600,  0.040, 0.980, 0.335)",
      easeInCubic: "cubic-bezier(0.550,  0.055, 0.675, 0.190)",
      easeInExpo: "cubic-bezier(0.950,  0.050, 0.795, 0.035)",
      easeInQuad: "cubic-bezier(0.550,  0.085, 0.680, 0.530)",
      easeInQuart: "cubic-bezier(0.895,  0.030, 0.685, 0.220)",
      easeInQuint: "cubic-bezier(0.755,  0.050, 0.855, 0.060)",
      easeInSine: "cubic-bezier(0.470,  0.000, 0.745, 0.715)",
      easeOutBack: "cubic-bezier(0.175,  0.885, 0.320, 1.275)",
      easeOutCubic: "cubic-bezier(0.215,  0.610, 0.355, 1.000)",
      easeOutCirc: "cubic-bezier(0.075,  0.820, 0.165, 1.000)",
      easeOutExpo: "cubic-bezier(0.190,  1.000, 0.220, 1.000)",
      easeOutQuad: "cubic-bezier(0.250,  0.460, 0.450, 0.940)",
      easeOutQuart: "cubic-bezier(0.165,  0.840, 0.440, 1.000)",
      easeOutQuint: "cubic-bezier(0.230,  1.000, 0.320, 1.000)",
      easeOutSine: "cubic-bezier(0.390,  0.575, 0.565, 1.000)",
      easeInOutBack: "cubic-bezier(0.680, -0.550, 0.265, 1.550)",
      easeInOutCirc: "cubic-bezier(0.785,  0.135, 0.150, 0.860)",
      easeInOutCubic: "cubic-bezier(0.645,  0.045, 0.355, 1.000)",
      easeInOutExpo: "cubic-bezier(1.000,  0.000, 0.000, 1.000)",
      easeInOutQuad: "cubic-bezier(0.455,  0.030, 0.515, 0.955)",
      easeInOutQuart: "cubic-bezier(0.770,  0.000, 0.175, 1.000)",
      easeInOutQuint: "cubic-bezier(0.860,  0.000, 0.070, 1.000)",
      easeInOutSine: "cubic-bezier(0.445,  0.050, 0.550, 0.950)"
    };
    function getTimingFunction(functionName) {
      return functionsMap[functionName];
    }
    function timingFunctions(timingFunction) {
      return getTimingFunction(timingFunction);
    }
    var getBorderWidth = function getBorderWidth2(pointingDirection, height, width) {
      var fullWidth = "" + width[0] + (width[1] || "");
      var halfWidth = "" + width[0] / 2 + (width[1] || "");
      var fullHeight = "" + height[0] + (height[1] || "");
      var halfHeight = "" + height[0] / 2 + (height[1] || "");
      switch (pointingDirection) {
        case "top":
          return "0 " + halfWidth + " " + fullHeight + " " + halfWidth;
        case "topLeft":
          return fullWidth + " " + fullHeight + " 0 0";
        case "left":
          return halfHeight + " " + fullWidth + " " + halfHeight + " 0";
        case "bottomLeft":
          return fullWidth + " 0 0 " + fullHeight;
        case "bottom":
          return fullHeight + " " + halfWidth + " 0 " + halfWidth;
        case "bottomRight":
          return "0 0 " + fullWidth + " " + fullHeight;
        case "right":
          return halfHeight + " 0 " + halfHeight + " " + fullWidth;
        case "topRight":
        default:
          return "0 " + fullWidth + " " + fullHeight + " 0";
      }
    };
    var getBorderColor = function getBorderColor2(pointingDirection, foregroundColor) {
      switch (pointingDirection) {
        case "top":
        case "bottomRight":
          return {
            borderBottomColor: foregroundColor
          };
        case "right":
        case "bottomLeft":
          return {
            borderLeftColor: foregroundColor
          };
        case "bottom":
        case "topLeft":
          return {
            borderTopColor: foregroundColor
          };
        case "left":
        case "topRight":
          return {
            borderRightColor: foregroundColor
          };
        default:
          throw new PolishedError(59);
      }
    };
    function triangle(_ref) {
      var pointingDirection = _ref.pointingDirection, height = _ref.height, width = _ref.width, foregroundColor = _ref.foregroundColor, _ref$backgroundColor = _ref.backgroundColor, backgroundColor = _ref$backgroundColor === void 0 ? "transparent" : _ref$backgroundColor;
      var widthAndUnit = getValueAndUnit(width);
      var heightAndUnit = getValueAndUnit(height);
      if (isNaN(heightAndUnit[0]) || isNaN(widthAndUnit[0])) {
        throw new PolishedError(60);
      }
      return _extends__default["default"]({
        width: "0",
        height: "0",
        borderColor: backgroundColor
      }, getBorderColor(pointingDirection, foregroundColor), {
        borderStyle: "solid",
        borderWidth: getBorderWidth(pointingDirection, heightAndUnit, widthAndUnit)
      });
    }
    function wordWrap(wrap) {
      if (wrap === void 0) {
        wrap = "break-word";
      }
      var wordBreak = wrap === "break-word" ? "break-all" : wrap;
      return {
        overflowWrap: wrap,
        wordWrap: wrap,
        wordBreak
      };
    }
    function colorToInt(color2) {
      return Math.round(color2 * 255);
    }
    function convertToInt(red, green, blue) {
      return colorToInt(red) + "," + colorToInt(green) + "," + colorToInt(blue);
    }
    function hslToRgb(hue, saturation, lightness, convert3) {
      if (convert3 === void 0) {
        convert3 = convertToInt;
      }
      if (saturation === 0) {
        return convert3(lightness, lightness, lightness);
      }
      var huePrime = (hue % 360 + 360) % 360 / 60;
      var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
      var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));
      var red = 0;
      var green = 0;
      var blue = 0;
      if (huePrime >= 0 && huePrime < 1) {
        red = chroma;
        green = secondComponent;
      } else if (huePrime >= 1 && huePrime < 2) {
        red = secondComponent;
        green = chroma;
      } else if (huePrime >= 2 && huePrime < 3) {
        green = chroma;
        blue = secondComponent;
      } else if (huePrime >= 3 && huePrime < 4) {
        green = secondComponent;
        blue = chroma;
      } else if (huePrime >= 4 && huePrime < 5) {
        red = secondComponent;
        blue = chroma;
      } else if (huePrime >= 5 && huePrime < 6) {
        red = chroma;
        blue = secondComponent;
      }
      var lightnessModification = lightness - chroma / 2;
      var finalRed = red + lightnessModification;
      var finalGreen = green + lightnessModification;
      var finalBlue = blue + lightnessModification;
      return convert3(finalRed, finalGreen, finalBlue);
    }
    var namedColorMap = {
      aliceblue: "f0f8ff",
      antiquewhite: "faebd7",
      aqua: "00ffff",
      aquamarine: "7fffd4",
      azure: "f0ffff",
      beige: "f5f5dc",
      bisque: "ffe4c4",
      black: "000",
      blanchedalmond: "ffebcd",
      blue: "0000ff",
      blueviolet: "8a2be2",
      brown: "a52a2a",
      burlywood: "deb887",
      cadetblue: "5f9ea0",
      chartreuse: "7fff00",
      chocolate: "d2691e",
      coral: "ff7f50",
      cornflowerblue: "6495ed",
      cornsilk: "fff8dc",
      crimson: "dc143c",
      cyan: "00ffff",
      darkblue: "00008b",
      darkcyan: "008b8b",
      darkgoldenrod: "b8860b",
      darkgray: "a9a9a9",
      darkgreen: "006400",
      darkgrey: "a9a9a9",
      darkkhaki: "bdb76b",
      darkmagenta: "8b008b",
      darkolivegreen: "556b2f",
      darkorange: "ff8c00",
      darkorchid: "9932cc",
      darkred: "8b0000",
      darksalmon: "e9967a",
      darkseagreen: "8fbc8f",
      darkslateblue: "483d8b",
      darkslategray: "2f4f4f",
      darkslategrey: "2f4f4f",
      darkturquoise: "00ced1",
      darkviolet: "9400d3",
      deeppink: "ff1493",
      deepskyblue: "00bfff",
      dimgray: "696969",
      dimgrey: "696969",
      dodgerblue: "1e90ff",
      firebrick: "b22222",
      floralwhite: "fffaf0",
      forestgreen: "228b22",
      fuchsia: "ff00ff",
      gainsboro: "dcdcdc",
      ghostwhite: "f8f8ff",
      gold: "ffd700",
      goldenrod: "daa520",
      gray: "808080",
      green: "008000",
      greenyellow: "adff2f",
      grey: "808080",
      honeydew: "f0fff0",
      hotpink: "ff69b4",
      indianred: "cd5c5c",
      indigo: "4b0082",
      ivory: "fffff0",
      khaki: "f0e68c",
      lavender: "e6e6fa",
      lavenderblush: "fff0f5",
      lawngreen: "7cfc00",
      lemonchiffon: "fffacd",
      lightblue: "add8e6",
      lightcoral: "f08080",
      lightcyan: "e0ffff",
      lightgoldenrodyellow: "fafad2",
      lightgray: "d3d3d3",
      lightgreen: "90ee90",
      lightgrey: "d3d3d3",
      lightpink: "ffb6c1",
      lightsalmon: "ffa07a",
      lightseagreen: "20b2aa",
      lightskyblue: "87cefa",
      lightslategray: "789",
      lightslategrey: "789",
      lightsteelblue: "b0c4de",
      lightyellow: "ffffe0",
      lime: "0f0",
      limegreen: "32cd32",
      linen: "faf0e6",
      magenta: "f0f",
      maroon: "800000",
      mediumaquamarine: "66cdaa",
      mediumblue: "0000cd",
      mediumorchid: "ba55d3",
      mediumpurple: "9370db",
      mediumseagreen: "3cb371",
      mediumslateblue: "7b68ee",
      mediumspringgreen: "00fa9a",
      mediumturquoise: "48d1cc",
      mediumvioletred: "c71585",
      midnightblue: "191970",
      mintcream: "f5fffa",
      mistyrose: "ffe4e1",
      moccasin: "ffe4b5",
      navajowhite: "ffdead",
      navy: "000080",
      oldlace: "fdf5e6",
      olive: "808000",
      olivedrab: "6b8e23",
      orange: "ffa500",
      orangered: "ff4500",
      orchid: "da70d6",
      palegoldenrod: "eee8aa",
      palegreen: "98fb98",
      paleturquoise: "afeeee",
      palevioletred: "db7093",
      papayawhip: "ffefd5",
      peachpuff: "ffdab9",
      peru: "cd853f",
      pink: "ffc0cb",
      plum: "dda0dd",
      powderblue: "b0e0e6",
      purple: "800080",
      rebeccapurple: "639",
      red: "f00",
      rosybrown: "bc8f8f",
      royalblue: "4169e1",
      saddlebrown: "8b4513",
      salmon: "fa8072",
      sandybrown: "f4a460",
      seagreen: "2e8b57",
      seashell: "fff5ee",
      sienna: "a0522d",
      silver: "c0c0c0",
      skyblue: "87ceeb",
      slateblue: "6a5acd",
      slategray: "708090",
      slategrey: "708090",
      snow: "fffafa",
      springgreen: "00ff7f",
      steelblue: "4682b4",
      tan: "d2b48c",
      teal: "008080",
      thistle: "d8bfd8",
      tomato: "ff6347",
      turquoise: "40e0d0",
      violet: "ee82ee",
      wheat: "f5deb3",
      white: "fff",
      whitesmoke: "f5f5f5",
      yellow: "ff0",
      yellowgreen: "9acd32"
    };
    function nameToHex(color2) {
      if (typeof color2 !== "string")
        return color2;
      var normalizedColorName = color2.toLowerCase();
      return namedColorMap[normalizedColorName] ? "#" + namedColorMap[normalizedColorName] : color2;
    }
    var hexRegex = /^#[a-fA-F0-9]{6}$/;
    var hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;
    var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
    var reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;
    var rgbRegex = /^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i;
    var rgbaRegex = /^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
    var hslRegex = /^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i;
    var hslaRegex = /^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
    function parseToRgb(color2) {
      if (typeof color2 !== "string") {
        throw new PolishedError(3);
      }
      var normalizedColor = nameToHex(color2);
      if (normalizedColor.match(hexRegex)) {
        return {
          red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
          green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
          blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16)
        };
      }
      if (normalizedColor.match(hexRgbaRegex)) {
        var alpha = parseFloat((parseInt("" + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2));
        return {
          red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
          green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
          blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16),
          alpha
        };
      }
      if (normalizedColor.match(reducedHexRegex)) {
        return {
          red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
          green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
          blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16)
        };
      }
      if (normalizedColor.match(reducedRgbaHexRegex)) {
        var _alpha = parseFloat((parseInt("" + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2));
        return {
          red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
          green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
          blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16),
          alpha: _alpha
        };
      }
      var rgbMatched = rgbRegex.exec(normalizedColor);
      if (rgbMatched) {
        return {
          red: parseInt("" + rgbMatched[1], 10),
          green: parseInt("" + rgbMatched[2], 10),
          blue: parseInt("" + rgbMatched[3], 10)
        };
      }
      var rgbaMatched = rgbaRegex.exec(normalizedColor.substring(0, 50));
      if (rgbaMatched) {
        return {
          red: parseInt("" + rgbaMatched[1], 10),
          green: parseInt("" + rgbaMatched[2], 10),
          blue: parseInt("" + rgbaMatched[3], 10),
          alpha: parseFloat("" + rgbaMatched[4]) > 1 ? parseFloat("" + rgbaMatched[4]) / 100 : parseFloat("" + rgbaMatched[4])
        };
      }
      var hslMatched = hslRegex.exec(normalizedColor);
      if (hslMatched) {
        var hue = parseInt("" + hslMatched[1], 10);
        var saturation = parseInt("" + hslMatched[2], 10) / 100;
        var lightness = parseInt("" + hslMatched[3], 10) / 100;
        var rgbColorString = "rgb(" + hslToRgb(hue, saturation, lightness) + ")";
        var hslRgbMatched = rgbRegex.exec(rgbColorString);
        if (!hslRgbMatched) {
          throw new PolishedError(4, normalizedColor, rgbColorString);
        }
        return {
          red: parseInt("" + hslRgbMatched[1], 10),
          green: parseInt("" + hslRgbMatched[2], 10),
          blue: parseInt("" + hslRgbMatched[3], 10)
        };
      }
      var hslaMatched = hslaRegex.exec(normalizedColor.substring(0, 50));
      if (hslaMatched) {
        var _hue = parseInt("" + hslaMatched[1], 10);
        var _saturation = parseInt("" + hslaMatched[2], 10) / 100;
        var _lightness = parseInt("" + hslaMatched[3], 10) / 100;
        var _rgbColorString = "rgb(" + hslToRgb(_hue, _saturation, _lightness) + ")";
        var _hslRgbMatched = rgbRegex.exec(_rgbColorString);
        if (!_hslRgbMatched) {
          throw new PolishedError(4, normalizedColor, _rgbColorString);
        }
        return {
          red: parseInt("" + _hslRgbMatched[1], 10),
          green: parseInt("" + _hslRgbMatched[2], 10),
          blue: parseInt("" + _hslRgbMatched[3], 10),
          alpha: parseFloat("" + hslaMatched[4]) > 1 ? parseFloat("" + hslaMatched[4]) / 100 : parseFloat("" + hslaMatched[4])
        };
      }
      throw new PolishedError(5);
    }
    function rgbToHsl(color2) {
      var red = color2.red / 255;
      var green = color2.green / 255;
      var blue = color2.blue / 255;
      var max2 = Math.max(red, green, blue);
      var min2 = Math.min(red, green, blue);
      var lightness = (max2 + min2) / 2;
      if (max2 === min2) {
        if (color2.alpha !== void 0) {
          return {
            hue: 0,
            saturation: 0,
            lightness,
            alpha: color2.alpha
          };
        } else {
          return {
            hue: 0,
            saturation: 0,
            lightness
          };
        }
      }
      var hue;
      var delta = max2 - min2;
      var saturation = lightness > 0.5 ? delta / (2 - max2 - min2) : delta / (max2 + min2);
      switch (max2) {
        case red:
          hue = (green - blue) / delta + (green < blue ? 6 : 0);
          break;
        case green:
          hue = (blue - red) / delta + 2;
          break;
        default:
          hue = (red - green) / delta + 4;
          break;
      }
      hue *= 60;
      if (color2.alpha !== void 0) {
        return {
          hue,
          saturation,
          lightness,
          alpha: color2.alpha
        };
      }
      return {
        hue,
        saturation,
        lightness
      };
    }
    function parseToHsl(color2) {
      return rgbToHsl(parseToRgb(color2));
    }
    var reduceHexValue = function reduceHexValue2(value) {
      if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {
        return "#" + value[1] + value[3] + value[5];
      }
      return value;
    };
    var reduceHexValue$1 = reduceHexValue;
    function numberToHex(value) {
      var hex = value.toString(16);
      return hex.length === 1 ? "0" + hex : hex;
    }
    function colorToHex(color2) {
      return numberToHex(Math.round(color2 * 255));
    }
    function convertToHex(red, green, blue) {
      return reduceHexValue$1("#" + colorToHex(red) + colorToHex(green) + colorToHex(blue));
    }
    function hslToHex(hue, saturation, lightness) {
      return hslToRgb(hue, saturation, lightness, convertToHex);
    }
    function hsl(value, saturation, lightness) {
      if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number") {
        return hslToHex(value, saturation, lightness);
      } else if (typeof value === "object" && saturation === void 0 && lightness === void 0) {
        return hslToHex(value.hue, value.saturation, value.lightness);
      }
      throw new PolishedError(1);
    }
    function hsla(value, saturation, lightness, alpha) {
      if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number" && typeof alpha === "number") {
        return alpha >= 1 ? hslToHex(value, saturation, lightness) : "rgba(" + hslToRgb(value, saturation, lightness) + "," + alpha + ")";
      } else if (typeof value === "object" && saturation === void 0 && lightness === void 0 && alpha === void 0) {
        return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : "rgba(" + hslToRgb(value.hue, value.saturation, value.lightness) + "," + value.alpha + ")";
      }
      throw new PolishedError(2);
    }
    function rgb(value, green, blue) {
      if (typeof value === "number" && typeof green === "number" && typeof blue === "number") {
        return reduceHexValue$1("#" + numberToHex(value) + numberToHex(green) + numberToHex(blue));
      } else if (typeof value === "object" && green === void 0 && blue === void 0) {
        return reduceHexValue$1("#" + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));
      }
      throw new PolishedError(6);
    }
    function rgba(firstValue, secondValue, thirdValue, fourthValue) {
      if (typeof firstValue === "string" && typeof secondValue === "number") {
        var rgbValue = parseToRgb(firstValue);
        return "rgba(" + rgbValue.red + "," + rgbValue.green + "," + rgbValue.blue + "," + secondValue + ")";
      } else if (typeof firstValue === "number" && typeof secondValue === "number" && typeof thirdValue === "number" && typeof fourthValue === "number") {
        return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : "rgba(" + firstValue + "," + secondValue + "," + thirdValue + "," + fourthValue + ")";
      } else if (typeof firstValue === "object" && secondValue === void 0 && thirdValue === void 0 && fourthValue === void 0) {
        return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : "rgba(" + firstValue.red + "," + firstValue.green + "," + firstValue.blue + "," + firstValue.alpha + ")";
      }
      throw new PolishedError(7);
    }
    var isRgb = function isRgb2(color2) {
      return typeof color2.red === "number" && typeof color2.green === "number" && typeof color2.blue === "number" && (typeof color2.alpha !== "number" || typeof color2.alpha === "undefined");
    };
    var isRgba = function isRgba2(color2) {
      return typeof color2.red === "number" && typeof color2.green === "number" && typeof color2.blue === "number" && typeof color2.alpha === "number";
    };
    var isHsl = function isHsl2(color2) {
      return typeof color2.hue === "number" && typeof color2.saturation === "number" && typeof color2.lightness === "number" && (typeof color2.alpha !== "number" || typeof color2.alpha === "undefined");
    };
    var isHsla = function isHsla2(color2) {
      return typeof color2.hue === "number" && typeof color2.saturation === "number" && typeof color2.lightness === "number" && typeof color2.alpha === "number";
    };
    function toColorString(color2) {
      if (typeof color2 !== "object")
        throw new PolishedError(8);
      if (isRgba(color2))
        return rgba(color2);
      if (isRgb(color2))
        return rgb(color2);
      if (isHsla(color2))
        return hsla(color2);
      if (isHsl(color2))
        return hsl(color2);
      throw new PolishedError(8);
    }
    function curried(f2, length, acc) {
      return function fn() {
        var combined = acc.concat(Array.prototype.slice.call(arguments));
        return combined.length >= length ? f2.apply(this, combined) : curried(f2, length, combined);
      };
    }
    function curry(f2) {
      return curried(f2, f2.length, []);
    }
    function adjustHue(degree, color2) {
      if (color2 === "transparent")
        return color2;
      var hslColor = parseToHsl(color2);
      return toColorString(_extends__default["default"]({}, hslColor, {
        hue: hslColor.hue + parseFloat(degree)
      }));
    }
    var curriedAdjustHue = /* @__PURE__ */ curry(adjustHue);
    var curriedAdjustHue$1 = curriedAdjustHue;
    function complement(color2) {
      if (color2 === "transparent")
        return color2;
      var hslColor = parseToHsl(color2);
      return toColorString(_extends__default["default"]({}, hslColor, {
        hue: (hslColor.hue + 180) % 360
      }));
    }
    function guard(lowerBoundary, upperBoundary, value) {
      return Math.max(lowerBoundary, Math.min(upperBoundary, value));
    }
    function darken2(amount, color2) {
      if (color2 === "transparent")
        return color2;
      var hslColor = parseToHsl(color2);
      return toColorString(_extends__default["default"]({}, hslColor, {
        lightness: guard(0, 1, hslColor.lightness - parseFloat(amount))
      }));
    }
    var curriedDarken = /* @__PURE__ */ curry(darken2);
    var curriedDarken$1 = curriedDarken;
    function desaturate(amount, color2) {
      if (color2 === "transparent")
        return color2;
      var hslColor = parseToHsl(color2);
      return toColorString(_extends__default["default"]({}, hslColor, {
        saturation: guard(0, 1, hslColor.saturation - parseFloat(amount))
      }));
    }
    var curriedDesaturate = /* @__PURE__ */ curry(desaturate);
    var curriedDesaturate$1 = curriedDesaturate;
    function getLuminance(color2) {
      if (color2 === "transparent")
        return 0;
      var rgbColor = parseToRgb(color2);
      var _Object$keys$map = Object.keys(rgbColor).map(function(key) {
        var channel = rgbColor[key] / 255;
        return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);
      }), r = _Object$keys$map[0], g = _Object$keys$map[1], b2 = _Object$keys$map[2];
      return parseFloat((0.2126 * r + 0.7152 * g + 0.0722 * b2).toFixed(3));
    }
    function getContrast(color1, color2) {
      var luminance1 = getLuminance(color1);
      var luminance2 = getLuminance(color2);
      return parseFloat((luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05)).toFixed(2));
    }
    function grayscale(color2) {
      if (color2 === "transparent")
        return color2;
      return toColorString(_extends__default["default"]({}, parseToHsl(color2), {
        saturation: 0
      }));
    }
    function hslToColorString(color2) {
      if (typeof color2 === "object" && typeof color2.hue === "number" && typeof color2.saturation === "number" && typeof color2.lightness === "number") {
        if (color2.alpha && typeof color2.alpha === "number") {
          return hsla({
            hue: color2.hue,
            saturation: color2.saturation,
            lightness: color2.lightness,
            alpha: color2.alpha
          });
        }
        return hsl({
          hue: color2.hue,
          saturation: color2.saturation,
          lightness: color2.lightness
        });
      }
      throw new PolishedError(45);
    }
    function invert(color2) {
      if (color2 === "transparent")
        return color2;
      var value = parseToRgb(color2);
      return toColorString(_extends__default["default"]({}, value, {
        red: 255 - value.red,
        green: 255 - value.green,
        blue: 255 - value.blue
      }));
    }
    function lighten2(amount, color2) {
      if (color2 === "transparent")
        return color2;
      var hslColor = parseToHsl(color2);
      return toColorString(_extends__default["default"]({}, hslColor, {
        lightness: guard(0, 1, hslColor.lightness + parseFloat(amount))
      }));
    }
    var curriedLighten = /* @__PURE__ */ curry(lighten2);
    var curriedLighten$1 = curriedLighten;
    function meetsContrastGuidelines(color1, color2) {
      var contrastRatio = getContrast(color1, color2);
      return {
        AA: contrastRatio >= 4.5,
        AALarge: contrastRatio >= 3,
        AAA: contrastRatio >= 7,
        AAALarge: contrastRatio >= 4.5
      };
    }
    function mix(weight, color2, otherColor) {
      if (color2 === "transparent")
        return otherColor;
      if (otherColor === "transparent")
        return color2;
      if (weight === 0)
        return otherColor;
      var parsedColor1 = parseToRgb(color2);
      var color1 = _extends__default["default"]({}, parsedColor1, {
        alpha: typeof parsedColor1.alpha === "number" ? parsedColor1.alpha : 1
      });
      var parsedColor2 = parseToRgb(otherColor);
      var color22 = _extends__default["default"]({}, parsedColor2, {
        alpha: typeof parsedColor2.alpha === "number" ? parsedColor2.alpha : 1
      });
      var alphaDelta = color1.alpha - color22.alpha;
      var x2 = parseFloat(weight) * 2 - 1;
      var y2 = x2 * alphaDelta === -1 ? x2 : x2 + alphaDelta;
      var z = 1 + x2 * alphaDelta;
      var weight1 = (y2 / z + 1) / 2;
      var weight2 = 1 - weight1;
      var mixedColor = {
        red: Math.floor(color1.red * weight1 + color22.red * weight2),
        green: Math.floor(color1.green * weight1 + color22.green * weight2),
        blue: Math.floor(color1.blue * weight1 + color22.blue * weight2),
        alpha: color1.alpha * parseFloat(weight) + color22.alpha * (1 - parseFloat(weight))
      };
      return rgba(mixedColor);
    }
    var curriedMix = /* @__PURE__ */ curry(mix);
    var mix$1 = curriedMix;
    function opacify(amount, color2) {
      if (color2 === "transparent")
        return color2;
      var parsedColor = parseToRgb(color2);
      var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
      var colorWithAlpha = _extends__default["default"]({}, parsedColor, {
        alpha: guard(0, 1, (alpha * 100 + parseFloat(amount) * 100) / 100)
      });
      return rgba(colorWithAlpha);
    }
    var curriedOpacify = /* @__PURE__ */ curry(opacify);
    var curriedOpacify$1 = curriedOpacify;
    var defaultReturnIfLightColor = "#000";
    var defaultReturnIfDarkColor = "#fff";
    function readableColor(color2, returnIfLightColor, returnIfDarkColor, strict) {
      if (returnIfLightColor === void 0) {
        returnIfLightColor = defaultReturnIfLightColor;
      }
      if (returnIfDarkColor === void 0) {
        returnIfDarkColor = defaultReturnIfDarkColor;
      }
      if (strict === void 0) {
        strict = true;
      }
      var isColorLight = getLuminance(color2) > 0.179;
      var preferredReturnColor = isColorLight ? returnIfLightColor : returnIfDarkColor;
      if (!strict || getContrast(color2, preferredReturnColor) >= 4.5) {
        return preferredReturnColor;
      }
      return isColorLight ? defaultReturnIfLightColor : defaultReturnIfDarkColor;
    }
    function rgbToColorString(color2) {
      if (typeof color2 === "object" && typeof color2.red === "number" && typeof color2.green === "number" && typeof color2.blue === "number") {
        if (typeof color2.alpha === "number") {
          return rgba({
            red: color2.red,
            green: color2.green,
            blue: color2.blue,
            alpha: color2.alpha
          });
        }
        return rgb({
          red: color2.red,
          green: color2.green,
          blue: color2.blue
        });
      }
      throw new PolishedError(46);
    }
    function saturate(amount, color2) {
      if (color2 === "transparent")
        return color2;
      var hslColor = parseToHsl(color2);
      return toColorString(_extends__default["default"]({}, hslColor, {
        saturation: guard(0, 1, hslColor.saturation + parseFloat(amount))
      }));
    }
    var curriedSaturate = /* @__PURE__ */ curry(saturate);
    var curriedSaturate$1 = curriedSaturate;
    function setHue(hue, color2) {
      if (color2 === "transparent")
        return color2;
      return toColorString(_extends__default["default"]({}, parseToHsl(color2), {
        hue: parseFloat(hue)
      }));
    }
    var curriedSetHue = /* @__PURE__ */ curry(setHue);
    var curriedSetHue$1 = curriedSetHue;
    function setLightness(lightness, color2) {
      if (color2 === "transparent")
        return color2;
      return toColorString(_extends__default["default"]({}, parseToHsl(color2), {
        lightness: parseFloat(lightness)
      }));
    }
    var curriedSetLightness = /* @__PURE__ */ curry(setLightness);
    var curriedSetLightness$1 = curriedSetLightness;
    function setSaturation(saturation, color2) {
      if (color2 === "transparent")
        return color2;
      return toColorString(_extends__default["default"]({}, parseToHsl(color2), {
        saturation: parseFloat(saturation)
      }));
    }
    var curriedSetSaturation = /* @__PURE__ */ curry(setSaturation);
    var curriedSetSaturation$1 = curriedSetSaturation;
    function shade(percentage, color2) {
      if (color2 === "transparent")
        return color2;
      return mix$1(parseFloat(percentage), "rgb(0, 0, 0)", color2);
    }
    var curriedShade = /* @__PURE__ */ curry(shade);
    var curriedShade$1 = curriedShade;
    function tint(percentage, color2) {
      if (color2 === "transparent")
        return color2;
      return mix$1(parseFloat(percentage), "rgb(255, 255, 255)", color2);
    }
    var curriedTint = /* @__PURE__ */ curry(tint);
    var curriedTint$1 = curriedTint;
    function transparentize(amount, color2) {
      if (color2 === "transparent")
        return color2;
      var parsedColor = parseToRgb(color2);
      var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
      var colorWithAlpha = _extends__default["default"]({}, parsedColor, {
        alpha: guard(0, 1, +(alpha * 100 - parseFloat(amount) * 100).toFixed(2) / 100)
      });
      return rgba(colorWithAlpha);
    }
    var curriedTransparentize = /* @__PURE__ */ curry(transparentize);
    var curriedTransparentize$1 = curriedTransparentize;
    function animation() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      var multiMode = Array.isArray(args[0]);
      if (!multiMode && args.length > 8) {
        throw new PolishedError(64);
      }
      var code = args.map(function(arg) {
        if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {
          throw new PolishedError(65);
        }
        if (Array.isArray(arg) && arg.length > 8) {
          throw new PolishedError(66);
        }
        return Array.isArray(arg) ? arg.join(" ") : arg;
      }).join(", ");
      return {
        animation: code
      };
    }
    function backgroundImages() {
      for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }
      return {
        backgroundImage: properties.join(", ")
      };
    }
    function backgrounds() {
      for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }
      return {
        background: properties.join(", ")
      };
    }
    var sideMap = ["top", "right", "bottom", "left"];
    function border(sideKeyword) {
      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        values[_key - 1] = arguments[_key];
      }
      if (typeof sideKeyword === "string" && sideMap.indexOf(sideKeyword) >= 0) {
        var _ref;
        return _ref = {}, _ref["border" + capitalizeString(sideKeyword) + "Width"] = values[0], _ref["border" + capitalizeString(sideKeyword) + "Style"] = values[1], _ref["border" + capitalizeString(sideKeyword) + "Color"] = values[2], _ref;
      } else {
        values.unshift(sideKeyword);
        return {
          borderWidth: values[0],
          borderStyle: values[1],
          borderColor: values[2]
        };
      }
    }
    function borderColor() {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      return directionalProperty.apply(void 0, ["borderColor"].concat(values));
    }
    function borderRadius(side, radius) {
      var uppercaseSide = capitalizeString(side);
      if (!radius && radius !== 0) {
        throw new PolishedError(62);
      }
      if (uppercaseSide === "Top" || uppercaseSide === "Bottom") {
        var _ref;
        return _ref = {}, _ref["border" + uppercaseSide + "RightRadius"] = radius, _ref["border" + uppercaseSide + "LeftRadius"] = radius, _ref;
      }
      if (uppercaseSide === "Left" || uppercaseSide === "Right") {
        var _ref2;
        return _ref2 = {}, _ref2["borderTop" + uppercaseSide + "Radius"] = radius, _ref2["borderBottom" + uppercaseSide + "Radius"] = radius, _ref2;
      }
      throw new PolishedError(63);
    }
    function borderStyle() {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      return directionalProperty.apply(void 0, ["borderStyle"].concat(values));
    }
    function borderWidth() {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      return directionalProperty.apply(void 0, ["borderWidth"].concat(values));
    }
    function generateSelectors(template2, state) {
      var stateSuffix = state ? ":" + state : "";
      return template2(stateSuffix);
    }
    function statefulSelectors(states, template2, stateMap2) {
      if (!template2)
        throw new PolishedError(67);
      if (states.length === 0)
        return generateSelectors(template2, null);
      var selectors = [];
      for (var i2 = 0; i2 < states.length; i2 += 1) {
        if (stateMap2 && stateMap2.indexOf(states[i2]) < 0) {
          throw new PolishedError(68);
        }
        selectors.push(generateSelectors(template2, states[i2]));
      }
      selectors = selectors.join(",");
      return selectors;
    }
    var stateMap$1 = [void 0, null, "active", "focus", "hover"];
    function template$1(state) {
      return "button" + state + ',\n  input[type="button"]' + state + ',\n  input[type="reset"]' + state + ',\n  input[type="submit"]' + state;
    }
    function buttons() {
      for (var _len = arguments.length, states = new Array(_len), _key = 0; _key < _len; _key++) {
        states[_key] = arguments[_key];
      }
      return statefulSelectors(states, template$1, stateMap$1);
    }
    function margin() {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      return directionalProperty.apply(void 0, ["margin"].concat(values));
    }
    function padding() {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      return directionalProperty.apply(void 0, ["padding"].concat(values));
    }
    var positionMap = ["absolute", "fixed", "relative", "static", "sticky"];
    function position(firstValue) {
      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        values[_key - 1] = arguments[_key];
      }
      if (positionMap.indexOf(firstValue) >= 0 && firstValue) {
        return _extends__default["default"]({}, directionalProperty.apply(void 0, [""].concat(values)), {
          position: firstValue
        });
      } else {
        return directionalProperty.apply(void 0, ["", firstValue].concat(values));
      }
    }
    function size(height, width) {
      if (width === void 0) {
        width = height;
      }
      return {
        height,
        width
      };
    }
    var stateMap = [void 0, null, "active", "focus", "hover"];
    function template(state) {
      return 'input[type="color"]' + state + ',\n    input[type="date"]' + state + ',\n    input[type="datetime"]' + state + ',\n    input[type="datetime-local"]' + state + ',\n    input[type="email"]' + state + ',\n    input[type="month"]' + state + ',\n    input[type="number"]' + state + ',\n    input[type="password"]' + state + ',\n    input[type="search"]' + state + ',\n    input[type="tel"]' + state + ',\n    input[type="text"]' + state + ',\n    input[type="time"]' + state + ',\n    input[type="url"]' + state + ',\n    input[type="week"]' + state + ",\n    input:not([type])" + state + ",\n    textarea" + state;
    }
    function textInputs() {
      for (var _len = arguments.length, states = new Array(_len), _key = 0; _key < _len; _key++) {
        states[_key] = arguments[_key];
      }
      return statefulSelectors(states, template, stateMap);
    }
    function transitions() {
      for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }
      if (Array.isArray(properties[0]) && properties.length === 2) {
        var value = properties[1];
        if (typeof value !== "string") {
          throw new PolishedError(61);
        }
        var transitionsString = properties[0].map(function(property) {
          return property + " " + value;
        }).join(", ");
        return {
          transition: transitionsString
        };
      } else {
        return {
          transition: properties.join(", ")
        };
      }
    }
    exports.adjustHue = curriedAdjustHue$1;
    exports.animation = animation;
    exports.backgroundImages = backgroundImages;
    exports.backgrounds = backgrounds;
    exports.between = between;
    exports.border = border;
    exports.borderColor = borderColor;
    exports.borderRadius = borderRadius;
    exports.borderStyle = borderStyle;
    exports.borderWidth = borderWidth;
    exports.buttons = buttons;
    exports.clearFix = clearFix;
    exports.complement = complement;
    exports.cover = cover;
    exports.cssVar = cssVar;
    exports.darken = curriedDarken$1;
    exports.desaturate = curriedDesaturate$1;
    exports.directionalProperty = directionalProperty;
    exports.easeIn = easeIn;
    exports.easeInOut = easeInOut;
    exports.easeOut = easeOut;
    exports.ellipsis = ellipsis;
    exports.em = em$1;
    exports.fluidRange = fluidRange;
    exports.fontFace = fontFace;
    exports.getContrast = getContrast;
    exports.getLuminance = getLuminance;
    exports.getValueAndUnit = getValueAndUnit;
    exports.grayscale = grayscale;
    exports.hiDPI = hiDPI;
    exports.hideText = hideText;
    exports.hideVisually = hideVisually;
    exports.hsl = hsl;
    exports.hslToColorString = hslToColorString;
    exports.hsla = hsla;
    exports.important = important;
    exports.invert = invert;
    exports.lighten = curriedLighten$1;
    exports.linearGradient = linearGradient;
    exports.margin = margin;
    exports.math = math;
    exports.meetsContrastGuidelines = meetsContrastGuidelines;
    exports.mix = mix$1;
    exports.modularScale = modularScale;
    exports.normalize = normalize;
    exports.opacify = curriedOpacify$1;
    exports.padding = padding;
    exports.parseToHsl = parseToHsl;
    exports.parseToRgb = parseToRgb;
    exports.position = position;
    exports.radialGradient = radialGradient;
    exports.readableColor = readableColor;
    exports.rem = rem$1;
    exports.remToPx = remToPx;
    exports.retinaImage = retinaImage;
    exports.rgb = rgb;
    exports.rgbToColorString = rgbToColorString;
    exports.rgba = rgba;
    exports.saturate = curriedSaturate$1;
    exports.setHue = curriedSetHue$1;
    exports.setLightness = curriedSetLightness$1;
    exports.setSaturation = curriedSetSaturation$1;
    exports.shade = curriedShade$1;
    exports.size = size;
    exports.stripUnit = stripUnit;
    exports.textInputs = textInputs;
    exports.timingFunctions = timingFunctions;
    exports.tint = curriedTint$1;
    exports.toColorString = toColorString;
    exports.transitions = transitions;
    exports.transparentize = curriedTransparentize$1;
    exports.triangle = triangle;
    exports.wordWrap = wordWrap;
  }
});

// node_modules/markdown-to-jsx/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/markdown-to-jsx/dist/index.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function n(n2) {
      if (n2 && n2.t)
        return n2;
      var t2 = /* @__PURE__ */ Object.create(null);
      return n2 && Object.keys(n2).forEach(function(r2) {
        if ("default" !== r2) {
          var e2 = Object.getOwnPropertyDescriptor(n2, r2);
          Object.defineProperty(t2, r2, e2.get ? e2 : { enumerable: true, get: function() {
            return n2[r2];
          } });
        }
      }), t2.default = n2, t2;
    }
    var t = /* @__PURE__ */ n((init_react(), __toCommonJS(react_exports)));
    function r() {
      return (r = Object.assign || function(n2) {
        for (var t2 = 1; t2 < arguments.length; t2++) {
          var r2 = arguments[t2];
          for (var e2 in r2)
            Object.prototype.hasOwnProperty.call(r2, e2) && (n2[e2] = r2[e2]);
        }
        return n2;
      }).apply(this, arguments);
    }
    var e = ["children", "options"];
    var u = ["allowFullScreen", "allowTransparency", "autoComplete", "autoFocus", "autoPlay", "cellPadding", "cellSpacing", "charSet", "className", "classId", "colSpan", "contentEditable", "contextMenu", "crossOrigin", "encType", "formAction", "formEncType", "formMethod", "formNoValidate", "formTarget", "frameBorder", "hrefLang", "inputMode", "keyParams", "keyType", "marginHeight", "marginWidth", "maxLength", "mediaGroup", "minLength", "noValidate", "radioGroup", "readOnly", "rowSpan", "spellCheck", "srcDoc", "srcLang", "srcSet", "tabIndex", "useMap"].reduce(function(n2, t2) {
      return n2[t2.toLowerCase()] = t2, n2;
    }, { for: "htmlFor" });
    var o = { amp: "&", apos: "'", gt: ">", lt: "<", nbsp: "\xA0", quot: "\u201C" };
    var a2 = ["style", "script"];
    var c2 = /([-A-Z0-9_:]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|(?:\{((?:\\.|{[^}]*?}|[^}])*)\})))?/gi;
    var i2 = /mailto:/i;
    var f2 = /\n{2,}$/;
    var l = /^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/;
    var s2 = /^ *> ?/gm;
    var _2 = /^ {2,}\n/;
    var d = /^(?:( *[-*_]) *){3,}(?:\n *)+\n/;
    var p = /^\s*(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n *)+\n?/;
    var g = /^(?: {4}[^\n]+\n*)+(?:\n *)+\n?/;
    var m2 = /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/;
    var v = /^(?:\n *)*\n/;
    var y2 = /\r\n?/g;
    var h2 = /^\[\^([^\]]+)](:.*)\n/;
    var k2 = /^\[\^([^\]]+)]/;
    var b2 = /\f/g;
    var x2 = /^\s*?\[(x|\s)\]/;
    var S = /^ *(#{1,6}) *([^\n]+?)(?: +#*)?(?:\n *)*(?:\n|$)/;
    var $ = /^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/;
    var w = /^ *(?!<[a-z][^ >/]* ?\/>)<([a-z][^ >/]*) ?([^>]*)\/{0}>\n?(\s*(?:<\1[^>]*?>[\s\S]*?<\/\1>|(?!<\1)[\s\S])*?)<\/\1>\n*/i;
    var z = /&([a-z]+);/g;
    var O = /^<!--[\s\S]*?(?:-->)/;
    var E = /^(data|aria|x)-[a-z_][a-z\d_.-]*$/;
    var j2 = /^ *<([a-z][a-z0-9:]*)(?:\s+((?:<.*?>|[^>])*))?\/?>(?!<\/\1>)(\s*\n)?/i;
    var A3 = /^\{.*\}$/;
    var R = /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/;
    var I = /^<([^ >]+@[^ >]+)>/;
    var M2 = /^<([^ >]+:\/[^ >]+)>/;
    var B = / *\n+$/;
    var L = /(?:^|\n)( *)$/;
    var T2 = /-([a-z])?/gi;
    var C = /^(.*\|?.*)\n *(\|? *[-:]+ *\|[-| :]*)\n((?:.*\|.*\n)*)\n?/;
    var D = /^\[([^\]]*)\]:\s*(\S+)\s*("([^"]*)")?/;
    var N = /^!\[([^\]]*)\] ?\[([^\]]*)\]/;
    var Z = /^\[([^\]]*)\] ?\[([^\]]*)\]/;
    var F = /(\[|\])/g;
    var P2 = /(\n|^[-*]\s|^#|^ {2,}|^-{2,}|^>\s)/;
    var q = /\t/g;
    var G = /^ *\| */;
    var H = /(^ *\||\| *$)/g;
    var U = / *$/;
    var V = /^ *:-+: *$/;
    var W2 = /^ *:-+ *$/;
    var Q = /^ *-+: *$/;
    var X = /^([*_])\1((?:\[.*?\][([].*?[)\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\1\1(?!\1)/;
    var J = /^([*_])((?:\[.*?\][([].*?[)\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\1(?!\1|\w)/;
    var K = /^~~((?:\[.*?\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/;
    var Y2 = /^\\([^0-9A-Za-z\s])/;
    var nn = /^[\s\S]+?(?=[^0-9A-Z\s\u00c0-\uffff&;.()'"]|\d+\.|\n\n| {2,}\n|\w+:\S|$)/i;
    var tn = /^\n+/;
    var rn = /^([ \t]*)/;
    var en = /\\([^0-9A-Z\s])/gi;
    var un = new RegExp("^( *)((?:[*+-]|\\d+\\.)) +");
    var on = new RegExp("^( *)((?:[*+-]|\\d+\\.)) +[^\\n]*(?:\\n(?!\\1(?:[*+-]|\\d+\\.) )[^\\n]*)*(\\n|$)", "gm");
    var an = new RegExp("^( *)((?:[*+-]|\\d+\\.)) [\\s\\S]+?(?:\\n{2,}(?! )(?!\\1(?:[*+-]|\\d+\\.) (?!(?:[*+-]|\\d+\\.) ))\\n*|\\s*\\n*$)");
    var cn = "(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*";
    var fn = new RegExp("^\\[(" + cn + `)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['"]([\\s\\S]*?)['"])?\\s*\\)`);
    var ln = new RegExp("^!\\[(" + cn + `)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['"]([\\s\\S]*?)['"])?\\s*\\)`);
    var sn = [l, g, p, S, $, O, on, an, C];
    var _n = [].concat(sn, [/^[^\n]+(?:  \n|\n{2,})/, w, j2]);
    function dn(n2) {
      return n2.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, "a").replace(/[çÇ]/g, "c").replace(/[ðÐ]/g, "d").replace(/[ÈÉÊËéèêë]/g, "e").replace(/[ÏïÎîÍíÌì]/g, "i").replace(/[Ññ]/g, "n").replace(/[øØœŒÕõÔôÓóÒò]/g, "o").replace(/[ÜüÛûÚúÙù]/g, "u").replace(/[ŸÿÝý]/g, "y").replace(/[^a-z0-9- ]/gi, "").replace(/ /gi, "-").toLowerCase();
    }
    function pn(n2) {
      return Q.test(n2) ? "right" : V.test(n2) ? "center" : W2.test(n2) ? "left" : null;
    }
    function gn(n2, t2, r2) {
      var e2 = r2.u;
      r2.u = true;
      var u2 = t2(n2.trim(), r2);
      r2.u = e2;
      var o2 = [[]];
      return u2.forEach(function(n3, t3) {
        "tableSeparator" === n3.type ? 0 !== t3 && t3 !== u2.length - 1 && o2.push([]) : ("text" !== n3.type || null != u2[t3 + 1] && "tableSeparator" !== u2[t3 + 1].type || (n3.content = n3.content.replace(U, "")), o2[o2.length - 1].push(n3));
      }), o2;
    }
    function mn(n2, t2, r2) {
      r2.o = true;
      var e2 = gn(n2[1], t2, r2), u2 = n2[2].replace(H, "").split("|").map(pn), o2 = function(n3, t3, r3) {
        return n3.trim().split("\n").map(function(n4) {
          return gn(n4, t3, r3);
        });
      }(n2[3], t2, r2);
      return r2.o = false, { align: u2, cells: o2, header: e2, type: "table" };
    }
    function vn(n2, t2) {
      return null == n2.align[t2] ? {} : { textAlign: n2.align[t2] };
    }
    function yn(n2) {
      return function(t2, r2) {
        return r2.o ? n2.exec(t2) : null;
      };
    }
    function hn(n2) {
      return function(t2, r2) {
        return r2.o || r2.i ? n2.exec(t2) : null;
      };
    }
    function kn(n2) {
      return function(t2, r2) {
        return r2.o || r2.i ? null : n2.exec(t2);
      };
    }
    function bn(n2) {
      return function(t2) {
        return n2.exec(t2);
      };
    }
    function xn(n2, t2, r2) {
      if (t2.o || t2.i)
        return null;
      if (r2 && !r2.endsWith("\n"))
        return null;
      var e2 = "";
      n2.split("\n").every(function(n3) {
        return !sn.some(function(t3) {
          return t3.test(n3);
        }) && (e2 += n3 + "\n", n3.trim());
      });
      var u2 = e2.trimEnd();
      return "" == u2 ? null : [e2, u2];
    }
    function Sn(n2) {
      try {
        if (decodeURIComponent(n2).replace(/[^A-Za-z0-9/:]/g, "").match(/^\s*(javascript|vbscript|data):/i))
          return null;
      } catch (n3) {
        return null;
      }
      return n2;
    }
    function $n(n2) {
      return n2.replace(en, "$1");
    }
    function wn(n2, t2, r2) {
      var e2 = r2.o || false, u2 = r2.i || false;
      r2.o = true, r2.i = true;
      var o2 = n2(t2, r2);
      return r2.o = e2, r2.i = u2, o2;
    }
    function zn(n2, t2, r2) {
      var e2 = r2.o || false, u2 = r2.i || false;
      r2.o = false, r2.i = true;
      var o2 = n2(t2, r2);
      return r2.o = e2, r2.i = u2, o2;
    }
    function On(n2, t2, r2) {
      return r2.o = false, n2(t2 + "\n\n", r2);
    }
    var En;
    var jn = function(n2, t2, r2) {
      return { content: wn(t2, n2[1], r2) };
    };
    function An() {
      return {};
    }
    function Rn() {
      return null;
    }
    function In() {
      return [].slice.call(arguments).filter(Boolean).join(" ");
    }
    function Mn(n2, t2, r2) {
      for (var e2 = n2, u2 = t2.split("."); u2.length && void 0 !== (e2 = e2[u2[0]]); )
        u2.shift();
      return e2 || r2;
    }
    function Bn(n2, t2) {
      var r2 = Mn(t2, n2);
      return r2 ? "function" == typeof r2 || "object" == typeof r2 && "render" in r2 ? r2 : Mn(t2, n2 + ".component", n2) : n2;
    }
    function Ln(n2, e2) {
      void 0 === e2 && (e2 = {}), e2.overrides = e2.overrides || {}, e2.slugify = e2.slugify || dn, e2.namedCodesToUnicode = e2.namedCodesToUnicode ? r({}, o, e2.namedCodesToUnicode) : o;
      var H7 = e2.createElement || t.createElement;
      function U2(n3, t2) {
        var u2 = Mn(e2.overrides, n3 + ".props", {});
        return H7.apply(void 0, [Bn(n3, e2.overrides), r({}, t2, u2, { className: In(null == t2 ? void 0 : t2.className, u2.className) || void 0 })].concat([].slice.call(arguments, 2)));
      }
      function V2(n3) {
        var r2 = false;
        e2.forceInline ? r2 = true : e2.forceBlock || (r2 = false === P2.test(n3));
        for (var u2 = gn2(pn2(r2 ? n3 : n3.trimEnd().replace(tn, "") + "\n\n", { o: r2 })); "string" == typeof u2[u2.length - 1] && !u2[u2.length - 1].trim(); )
          u2.pop();
        if (null === e2.wrapper)
          return u2;
        var o2, a3 = e2.wrapper || (r2 ? "span" : "div");
        if (u2.length > 1 || e2.forceWrapper)
          o2 = u2;
        else {
          if (1 === u2.length)
            return "string" == typeof (o2 = u2[0]) ? U2("span", { key: "outer" }, o2) : o2;
          o2 = null;
        }
        return t.createElement(a3, { key: "outer" }, o2);
      }
      function W3(n3) {
        var r2 = n3.match(c2);
        return r2 ? r2.reduce(function(n4, r3, e3) {
          var o2 = r3.indexOf("=");
          if (-1 !== o2) {
            var a3 = function(n5) {
              return -1 !== n5.indexOf("-") && null === n5.match(E) && (n5 = n5.replace(T2, function(n6, t2) {
                return t2.toUpperCase();
              })), n5;
            }(r3.slice(0, o2)).trim(), c3 = function(n5) {
              var t2 = n5[0];
              return ('"' === t2 || "'" === t2) && n5.length >= 2 && n5[n5.length - 1] === t2 ? n5.slice(1, -1) : n5;
            }(r3.slice(o2 + 1).trim()), i3 = u[a3] || a3, f3 = n4[i3] = function(n5, t2) {
              return "style" === n5 ? t2.split(/;\s?/).reduce(function(n6, t3) {
                var r4 = t3.slice(0, t3.indexOf(":"));
                return n6[r4.replace(/(-[a-z])/g, function(n7) {
                  return n7[1].toUpperCase();
                })] = t3.slice(r4.length + 1).trim(), n6;
              }, {}) : "href" === n5 ? Sn(t2) : (t2.match(A3) && (t2 = t2.slice(1, t2.length - 1)), "true" === t2 || "false" !== t2 && t2);
            }(a3, c3);
            "string" == typeof f3 && (w.test(f3) || j2.test(f3)) && (n4[i3] = t.cloneElement(V2(f3.trim()), { key: e3 }));
          } else
            "style" !== r3 && (n4[u[r3] || r3] = true);
          return n4;
        }, {}) : void 0;
      }
      var Q2 = [], en2 = {}, cn2 = { blockQuote: { l: kn(l), _: En.HIGH, p: function(n3, t2, r2) {
        return { content: t2(n3[0].replace(s2, ""), r2) };
      }, g: function(n3, t2, r2) {
        return U2("blockquote", { key: r2.m }, t2(n3.content, r2));
      } }, breakLine: { l: bn(_2), _: En.HIGH, p: An, g: function(n3, t2, r2) {
        return U2("br", { key: r2.m });
      } }, breakThematic: { l: kn(d), _: En.HIGH, p: An, g: function(n3, t2, r2) {
        return U2("hr", { key: r2.m });
      } }, codeBlock: { l: kn(g), _: En.MAX, p: function(n3) {
        return { content: n3[0].replace(/^ {4}/gm, "").replace(/\n+$/, ""), lang: void 0 };
      }, g: function(n3, t2, r2) {
        return U2("pre", { key: r2.m }, U2("code", { className: n3.lang ? "lang-" + n3.lang : "" }, n3.content));
      } }, codeFenced: { l: kn(p), _: En.MAX, p: function(n3) {
        return { content: n3[3], lang: n3[2] || void 0, type: "codeBlock" };
      } }, codeInline: { l: hn(m2), _: En.LOW, p: function(n3) {
        return { content: n3[2] };
      }, g: function(n3, t2, r2) {
        return U2("code", { key: r2.m }, n3.content);
      } }, footnote: { l: kn(h2), _: En.MAX, p: function(n3) {
        return Q2.push({ footnote: n3[2], identifier: n3[1] }), {};
      }, g: Rn }, footnoteReference: { l: yn(k2), _: En.HIGH, p: function(n3) {
        return { content: n3[1], target: "#" + e2.slugify(n3[1]) };
      }, g: function(n3, t2, r2) {
        return U2("a", { key: r2.m, href: Sn(n3.target) }, U2("sup", { key: r2.m }, n3.content));
      } }, gfmTask: { l: yn(x2), _: En.HIGH, p: function(n3) {
        return { completed: "x" === n3[1].toLowerCase() };
      }, g: function(n3, t2, r2) {
        return U2("input", { checked: n3.completed, key: r2.m, readOnly: true, type: "checkbox" });
      } }, heading: { l: kn(S), _: En.HIGH, p: function(n3, t2, r2) {
        return { content: wn(t2, n3[2], r2), id: e2.slugify(n3[2]), level: n3[1].length };
      }, g: function(n3, t2, r2) {
        return n3.tag = "h" + n3.level, U2(n3.tag, { id: n3.id, key: r2.m }, t2(n3.content, r2));
      } }, headingSetext: { l: kn($), _: En.MAX, p: function(n3, t2, r2) {
        return { content: wn(t2, n3[1], r2), level: "=" === n3[2] ? 1 : 2, type: "heading" };
      } }, htmlComment: { l: bn(O), _: En.HIGH, p: function() {
        return {};
      }, g: Rn }, image: { l: hn(ln), _: En.HIGH, p: function(n3) {
        return { alt: n3[1], target: $n(n3[2]), title: n3[3] };
      }, g: function(n3, t2, r2) {
        return U2("img", { key: r2.m, alt: n3.alt || void 0, title: n3.title || void 0, src: Sn(n3.target) });
      } }, link: { l: yn(fn), _: En.LOW, p: function(n3, t2, r2) {
        return { content: zn(t2, n3[1], r2), target: $n(n3[2]), title: n3[3] };
      }, g: function(n3, t2, r2) {
        return U2("a", { key: r2.m, href: Sn(n3.target), title: n3.title }, t2(n3.content, r2));
      } }, linkAngleBraceStyleDetector: { l: yn(M2), _: En.MAX, p: function(n3) {
        return { content: [{ content: n3[1], type: "text" }], target: n3[1], type: "link" };
      } }, linkBareUrlDetector: { l: function(n3, t2) {
        return t2.v ? null : yn(R)(n3, t2);
      }, _: En.MAX, p: function(n3) {
        return { content: [{ content: n3[1], type: "text" }], target: n3[1], title: void 0, type: "link" };
      } }, linkMailtoDetector: { l: yn(I), _: En.MAX, p: function(n3) {
        var t2 = n3[1], r2 = n3[1];
        return i2.test(r2) || (r2 = "mailto:" + r2), { content: [{ content: t2.replace("mailto:", ""), type: "text" }], target: r2, type: "link" };
      } }, list: { l: function(n3, t2, r2) {
        var e3 = L.exec(r2);
        return !e3 || !t2.h && t2.o ? null : an.exec(n3 = e3[1] + n3);
      }, _: En.HIGH, p: function(n3, t2, r2) {
        var e3 = n3[2], u2 = e3.length > 1, o2 = u2 ? +e3 : void 0, a3 = n3[0].replace(f2, "\n").match(on), c3 = false;
        return { items: a3.map(function(n4, e4) {
          var u3 = un.exec(n4)[0].length, o3 = new RegExp("^ {1," + u3 + "}", "gm"), i3 = n4.replace(o3, "").replace(un, ""), f3 = e4 === a3.length - 1, l2 = -1 !== i3.indexOf("\n\n") || f3 && c3;
          c3 = l2;
          var s3, _3 = r2.o, d2 = r2.h;
          r2.h = true, l2 ? (r2.o = false, s3 = i3.replace(B, "\n\n")) : (r2.o = true, s3 = i3.replace(B, ""));
          var p2 = t2(s3, r2);
          return r2.o = _3, r2.h = d2, p2;
        }), ordered: u2, start: o2 };
      }, g: function(n3, t2, r2) {
        return U2(n3.ordered ? "ol" : "ul", { key: r2.m, start: n3.start }, n3.items.map(function(n4, e3) {
          return U2("li", { key: e3 }, t2(n4, r2));
        }));
      } }, newlineCoalescer: { l: kn(v), _: En.LOW, p: An, g: function() {
        return "\n";
      } }, paragraph: { l: xn, _: En.LOW, p: jn, g: function(n3, t2, r2) {
        return U2("p", { key: r2.m }, t2(n3.content, r2));
      } }, ref: { l: yn(D), _: En.MAX, p: function(n3) {
        return en2[n3[1]] = { target: n3[2], title: n3[4] }, {};
      }, g: Rn }, refImage: { l: hn(N), _: En.MAX, p: function(n3) {
        return { alt: n3[1] || void 0, ref: n3[2] };
      }, g: function(n3, t2, r2) {
        return U2("img", { key: r2.m, alt: n3.alt, src: Sn(en2[n3.ref].target), title: en2[n3.ref].title });
      } }, refLink: { l: yn(Z), _: En.MAX, p: function(n3, t2, r2) {
        return { content: t2(n3[1], r2), fallbackContent: t2(n3[0].replace(F, "\\$1"), r2), ref: n3[2] };
      }, g: function(n3, t2, r2) {
        return en2[n3.ref] ? U2("a", { key: r2.m, href: Sn(en2[n3.ref].target), title: en2[n3.ref].title }, t2(n3.content, r2)) : U2("span", { key: r2.m }, t2(n3.fallbackContent, r2));
      } }, table: { l: kn(C), _: En.HIGH, p: mn, g: function(n3, t2, r2) {
        return U2("table", { key: r2.m }, U2("thead", null, U2("tr", null, n3.header.map(function(e3, u2) {
          return U2("th", { key: u2, style: vn(n3, u2) }, t2(e3, r2));
        }))), U2("tbody", null, n3.cells.map(function(e3, u2) {
          return U2("tr", { key: u2 }, e3.map(function(e4, u3) {
            return U2("td", { key: u3, style: vn(n3, u3) }, t2(e4, r2));
          }));
        })));
      } }, tableSeparator: { l: function(n3, t2) {
        return t2.u ? G.exec(n3) : null;
      }, _: En.HIGH, p: function() {
        return { type: "tableSeparator" };
      }, g: function() {
        return " | ";
      } }, text: { l: bn(nn), _: En.MIN, p: function(n3) {
        return { content: n3[0].replace(z, function(n4, t2) {
          return e2.namedCodesToUnicode[t2] ? e2.namedCodesToUnicode[t2] : n4;
        }) };
      }, g: function(n3) {
        return n3.content;
      } }, textBolded: { l: hn(X), _: En.MED, p: function(n3, t2, r2) {
        return { content: t2(n3[2], r2) };
      }, g: function(n3, t2, r2) {
        return U2("strong", { key: r2.m }, t2(n3.content, r2));
      } }, textEmphasized: { l: hn(J), _: En.LOW, p: function(n3, t2, r2) {
        return { content: t2(n3[2], r2) };
      }, g: function(n3, t2, r2) {
        return U2("em", { key: r2.m }, t2(n3.content, r2));
      } }, textEscaped: { l: hn(Y2), _: En.HIGH, p: function(n3) {
        return { content: n3[1], type: "text" };
      } }, textStrikethroughed: { l: hn(K), _: En.LOW, p: jn, g: function(n3, t2, r2) {
        return U2("del", { key: r2.m }, t2(n3.content, r2));
      } } };
      true !== e2.disableParsingRawHTML && (cn2.htmlBlock = { l: bn(w), _: En.HIGH, p: function(n3, t2, r2) {
        var e3, u2 = n3[3].match(rn), o2 = new RegExp("^" + u2[1], "gm"), c3 = n3[3].replace(o2, ""), i3 = (e3 = c3, _n.some(function(n4) {
          return n4.test(e3);
        }) ? On : wn), f3 = n3[1].toLowerCase(), l2 = -1 !== a2.indexOf(f3);
        r2.v = r2.v || "a" === f3;
        var s3 = l2 ? n3[3] : i3(t2, c3, r2);
        return r2.v = false, { attrs: W3(n3[2]), content: s3, noInnerParse: l2, tag: l2 ? f3 : n3[1] };
      }, g: function(n3, t2, e3) {
        return U2(n3.tag, r({ key: e3.m }, n3.attrs), n3.noInnerParse ? n3.content : t2(n3.content, e3));
      } }, cn2.htmlSelfClosing = { l: bn(j2), _: En.HIGH, p: function(n3) {
        return { attrs: W3(n3[2] || ""), tag: n3[1] };
      }, g: function(n3, t2, e3) {
        return U2(n3.tag, r({}, n3.attrs, { key: e3.m }));
      } });
      var sn2, pn2 = function(n3) {
        var t2 = Object.keys(n3);
        function r2(e3, u2) {
          for (var o2 = [], a3 = ""; e3; )
            for (var c3 = 0; c3 < t2.length; ) {
              var i3 = t2[c3], f3 = n3[i3], l2 = f3.l(e3, u2, a3);
              if (l2) {
                var s3 = l2[0];
                e3 = e3.substring(s3.length);
                var _3 = f3.p(l2, r2, u2);
                null == _3.type && (_3.type = i3), o2.push(_3), a3 = s3;
                break;
              }
              c3++;
            }
          return o2;
        }
        return t2.sort(function(t3, r3) {
          var e3 = n3[t3]._, u2 = n3[r3]._;
          return e3 !== u2 ? e3 - u2 : t3 < r3 ? -1 : 1;
        }), function(n4, t3) {
          return r2(function(n5) {
            return n5.replace(y2, "\n").replace(b2, "").replace(q, "    ");
          }(n4), t3);
        };
      }(cn2), gn2 = (sn2 = function(n3) {
        return function(t2, r2, e3) {
          return n3[t2.type].g(t2, r2, e3);
        };
      }(cn2), function n3(t2, r2) {
        if (void 0 === r2 && (r2 = {}), Array.isArray(t2)) {
          for (var e3 = r2.m, u2 = [], o2 = false, a3 = 0; a3 < t2.length; a3++) {
            r2.m = a3;
            var c3 = n3(t2[a3], r2), i3 = "string" == typeof c3;
            i3 && o2 ? u2[u2.length - 1] += c3 : null !== c3 && u2.push(c3), o2 = i3;
          }
          return r2.m = e3, u2;
        }
        return sn2(t2, n3, r2);
      }), Ln2 = V2(n2);
      return Q2.length ? U2("div", null, Ln2, U2("footer", { key: "footer" }, Q2.map(function(n3) {
        return U2("div", { id: e2.slugify(n3.identifier), key: n3.identifier }, n3.identifier, gn2(pn2(n3.footnote, { o: true })));
      }))) : Ln2;
    }
    !function(n2) {
      n2[n2.MAX = 0] = "MAX", n2[n2.HIGH = 1] = "HIGH", n2[n2.MED = 2] = "MED", n2[n2.LOW = 3] = "LOW", n2[n2.MIN = 4] = "MIN";
    }(En || (En = {}));
    var Tn = function(n2) {
      var r2 = n2.children, u2 = n2.options, o2 = function(n3, t2) {
        if (null == n3)
          return {};
        var r3, e2, u3 = {}, o3 = Object.keys(n3);
        for (e2 = 0; e2 < o3.length; e2++)
          t2.indexOf(r3 = o3[e2]) >= 0 || (u3[r3] = n3[r3]);
        return u3;
      }(n2, e);
      return t.cloneElement(Ln(r2, u2), o2);
    };
    Object.assign(Tn, { compiler: Ln }), module.exports = Tn;
  }
});

// node_modules/global/window.js
var require_window = __commonJS({
  "node_modules/global/window.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var win;
    if (typeof window !== "undefined") {
      win = window;
    } else if (typeof window !== "undefined") {
      win = window;
    } else if (typeof self !== "undefined") {
      win = self;
    } else {
      win = {};
    }
    module.exports = win;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var root = require_root();
    var Uint8Array2 = root.Uint8Array;
    module.exports = Uint8Array2;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Symbol2 = require_Symbol();
    var Uint8Array2 = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert3 = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert3 || (convert3 = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert3(object), convert3(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types2 = freeModule && freeModule.require && freeModule.require("util").types;
        if (types2) {
          return types2;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module.exports = keys;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var root = require_root();
    var DataView2 = getNative(root, "DataView");
    module.exports = DataView2;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module.exports = Set2;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module.exports = WeakMap2;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var DataView2 = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e) {
      }
    }();
    module.exports = defineProperty;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var defineProperty = require_defineProperty();
    function baseAssignValue(object, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = __commonJS({
  "node_modules/lodash/_assignValue.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignValue;
  }
});

// node_modules/lodash/_baseSet.js
var require_baseSet = __commonJS({
  "node_modules/lodash/_baseSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var assignValue = require_assignValue();
    var castPath = require_castPath();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    var toKey = require_toKey();
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);
      var index = -1, length = path.length, lastIndex = length - 1, nested = object;
      while (nested != null && ++index < length) {
        var key = toKey(path[index]), newValue = value;
        if (key === "__proto__" || key === "constructor" || key === "prototype") {
          return object;
        }
        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : void 0;
          if (newValue === void 0) {
            newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }
    module.exports = baseSet;
  }
});

// node_modules/lodash/_basePickBy.js
var require_basePickBy = __commonJS({
  "node_modules/lodash/_basePickBy.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGet = require_baseGet();
    var baseSet = require_baseSet();
    var castPath = require_castPath();
    function basePickBy(object, paths, predicate) {
      var index = -1, length = paths.length, result = {};
      while (++index < length) {
        var path = paths[index], value = baseGet(object, path);
        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }
    module.exports = basePickBy;
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = __commonJS({
  "node_modules/lodash/_getPrototype.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = __commonJS({
  "node_modules/lodash/_nativeKeysIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = __commonJS({
  "node_modules/lodash/_baseKeysIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object), result = [];
      for (var key in object) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = __commonJS({
  "node_modules/lodash/keysIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    module.exports = keysIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/pickBy.js
var require_pickBy = __commonJS({
  "node_modules/lodash/pickBy.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayMap = require_arrayMap();
    var baseIteratee = require_baseIteratee();
    var basePickBy = require_basePickBy();
    var getAllKeysIn = require_getAllKeysIn();
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = baseIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }
    module.exports = pickBy;
  }
});

// node_modules/lodash/_arrayReduce.js
var require_arrayReduce = __commonJS({
  "node_modules/lodash/_arrayReduce.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1, length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    module.exports = arrayReduce;
  }
});

// node_modules/lodash/_basePropertyOf.js
var require_basePropertyOf = __commonJS({
  "node_modules/lodash/_basePropertyOf.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function basePropertyOf(object) {
      return function(key) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = basePropertyOf;
  }
});

// node_modules/lodash/_deburrLetter.js
var require_deburrLetter = __commonJS({
  "node_modules/lodash/_deburrLetter.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var basePropertyOf = require_basePropertyOf();
    var deburredLetters = {
      "\xC0": "A",
      "\xC1": "A",
      "\xC2": "A",
      "\xC3": "A",
      "\xC4": "A",
      "\xC5": "A",
      "\xE0": "a",
      "\xE1": "a",
      "\xE2": "a",
      "\xE3": "a",
      "\xE4": "a",
      "\xE5": "a",
      "\xC7": "C",
      "\xE7": "c",
      "\xD0": "D",
      "\xF0": "d",
      "\xC8": "E",
      "\xC9": "E",
      "\xCA": "E",
      "\xCB": "E",
      "\xE8": "e",
      "\xE9": "e",
      "\xEA": "e",
      "\xEB": "e",
      "\xCC": "I",
      "\xCD": "I",
      "\xCE": "I",
      "\xCF": "I",
      "\xEC": "i",
      "\xED": "i",
      "\xEE": "i",
      "\xEF": "i",
      "\xD1": "N",
      "\xF1": "n",
      "\xD2": "O",
      "\xD3": "O",
      "\xD4": "O",
      "\xD5": "O",
      "\xD6": "O",
      "\xD8": "O",
      "\xF2": "o",
      "\xF3": "o",
      "\xF4": "o",
      "\xF5": "o",
      "\xF6": "o",
      "\xF8": "o",
      "\xD9": "U",
      "\xDA": "U",
      "\xDB": "U",
      "\xDC": "U",
      "\xF9": "u",
      "\xFA": "u",
      "\xFB": "u",
      "\xFC": "u",
      "\xDD": "Y",
      "\xFD": "y",
      "\xFF": "y",
      "\xC6": "Ae",
      "\xE6": "ae",
      "\xDE": "Th",
      "\xFE": "th",
      "\xDF": "ss",
      "\u0100": "A",
      "\u0102": "A",
      "\u0104": "A",
      "\u0101": "a",
      "\u0103": "a",
      "\u0105": "a",
      "\u0106": "C",
      "\u0108": "C",
      "\u010A": "C",
      "\u010C": "C",
      "\u0107": "c",
      "\u0109": "c",
      "\u010B": "c",
      "\u010D": "c",
      "\u010E": "D",
      "\u0110": "D",
      "\u010F": "d",
      "\u0111": "d",
      "\u0112": "E",
      "\u0114": "E",
      "\u0116": "E",
      "\u0118": "E",
      "\u011A": "E",
      "\u0113": "e",
      "\u0115": "e",
      "\u0117": "e",
      "\u0119": "e",
      "\u011B": "e",
      "\u011C": "G",
      "\u011E": "G",
      "\u0120": "G",
      "\u0122": "G",
      "\u011D": "g",
      "\u011F": "g",
      "\u0121": "g",
      "\u0123": "g",
      "\u0124": "H",
      "\u0126": "H",
      "\u0125": "h",
      "\u0127": "h",
      "\u0128": "I",
      "\u012A": "I",
      "\u012C": "I",
      "\u012E": "I",
      "\u0130": "I",
      "\u0129": "i",
      "\u012B": "i",
      "\u012D": "i",
      "\u012F": "i",
      "\u0131": "i",
      "\u0134": "J",
      "\u0135": "j",
      "\u0136": "K",
      "\u0137": "k",
      "\u0138": "k",
      "\u0139": "L",
      "\u013B": "L",
      "\u013D": "L",
      "\u013F": "L",
      "\u0141": "L",
      "\u013A": "l",
      "\u013C": "l",
      "\u013E": "l",
      "\u0140": "l",
      "\u0142": "l",
      "\u0143": "N",
      "\u0145": "N",
      "\u0147": "N",
      "\u014A": "N",
      "\u0144": "n",
      "\u0146": "n",
      "\u0148": "n",
      "\u014B": "n",
      "\u014C": "O",
      "\u014E": "O",
      "\u0150": "O",
      "\u014D": "o",
      "\u014F": "o",
      "\u0151": "o",
      "\u0154": "R",
      "\u0156": "R",
      "\u0158": "R",
      "\u0155": "r",
      "\u0157": "r",
      "\u0159": "r",
      "\u015A": "S",
      "\u015C": "S",
      "\u015E": "S",
      "\u0160": "S",
      "\u015B": "s",
      "\u015D": "s",
      "\u015F": "s",
      "\u0161": "s",
      "\u0162": "T",
      "\u0164": "T",
      "\u0166": "T",
      "\u0163": "t",
      "\u0165": "t",
      "\u0167": "t",
      "\u0168": "U",
      "\u016A": "U",
      "\u016C": "U",
      "\u016E": "U",
      "\u0170": "U",
      "\u0172": "U",
      "\u0169": "u",
      "\u016B": "u",
      "\u016D": "u",
      "\u016F": "u",
      "\u0171": "u",
      "\u0173": "u",
      "\u0174": "W",
      "\u0175": "w",
      "\u0176": "Y",
      "\u0177": "y",
      "\u0178": "Y",
      "\u0179": "Z",
      "\u017B": "Z",
      "\u017D": "Z",
      "\u017A": "z",
      "\u017C": "z",
      "\u017E": "z",
      "\u0132": "IJ",
      "\u0133": "ij",
      "\u0152": "Oe",
      "\u0153": "oe",
      "\u0149": "'n",
      "\u017F": "s"
    };
    var deburrLetter = basePropertyOf(deburredLetters);
    module.exports = deburrLetter;
  }
});

// node_modules/lodash/deburr.js
var require_deburr = __commonJS({
  "node_modules/lodash/deburr.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var deburrLetter = require_deburrLetter();
    var toString = require_toString();
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsCombo = "[" + rsComboRange + "]";
    var reComboMark = RegExp(rsCombo, "g");
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
    }
    module.exports = deburr;
  }
});

// node_modules/lodash/_asciiWords.js
var require_asciiWords = __commonJS({
  "node_modules/lodash/_asciiWords.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    module.exports = asciiWords;
  }
});

// node_modules/lodash/_hasUnicodeWord.js
var require_hasUnicodeWord = __commonJS({
  "node_modules/lodash/_hasUnicodeWord.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    module.exports = hasUnicodeWord;
  }
});

// node_modules/lodash/_unicodeWords.js
var require_unicodeWords = __commonJS({
  "node_modules/lodash/_unicodeWords.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsDingbatRange = "\\u2700-\\u27bf";
    var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
    var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
    var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
    var rsPunctuationRange = "\\u2000-\\u206f";
    var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['\u2019]";
    var rsBreak = "[" + rsBreakRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsDigits = "\\d+";
    var rsDingbat = "[" + rsDingbatRange + "]";
    var rsLower = "[" + rsLowerRange + "]";
    var rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsUpper = "[" + rsUpperRange + "]";
    var rsZWJ = "\\u200d";
    var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
    var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
    var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
    var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
    var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
    var reUnicodeWord = RegExp([
      rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
      rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
      rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
      rsUpper + "+" + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join("|"), "g");
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    module.exports = unicodeWords;
  }
});

// node_modules/lodash/words.js
var require_words = __commonJS({
  "node_modules/lodash/words.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var asciiWords = require_asciiWords();
    var hasUnicodeWord = require_hasUnicodeWord();
    var toString = require_toString();
    var unicodeWords = require_unicodeWords();
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? void 0 : pattern;
      if (pattern === void 0) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }
    module.exports = words;
  }
});

// node_modules/lodash/_createCompounder.js
var require_createCompounder = __commonJS({
  "node_modules/lodash/_createCompounder.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayReduce = require_arrayReduce();
    var deburr = require_deburr();
    var words = require_words();
    var rsApos = "['\u2019]";
    var reApos = RegExp(rsApos, "g");
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
      };
    }
    module.exports = createCompounder;
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// node_modules/lodash/_castSlice.js
var require_castSlice = __commonJS({
  "node_modules/lodash/_castSlice.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseSlice = require_baseSlice();
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === void 0 ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }
    module.exports = castSlice;
  }
});

// node_modules/lodash/_hasUnicode.js
var require_hasUnicode = __commonJS({
  "node_modules/lodash/_hasUnicode.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsZWJ = "\\u200d";
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    module.exports = hasUnicode;
  }
});

// node_modules/lodash/_asciiToArray.js
var require_asciiToArray = __commonJS({
  "node_modules/lodash/_asciiToArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function asciiToArray(string) {
      return string.split("");
    }
    module.exports = asciiToArray;
  }
});

// node_modules/lodash/_unicodeToArray.js
var require_unicodeToArray = __commonJS({
  "node_modules/lodash/_unicodeToArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    module.exports = unicodeToArray;
  }
});

// node_modules/lodash/_stringToArray.js
var require_stringToArray = __commonJS({
  "node_modules/lodash/_stringToArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var asciiToArray = require_asciiToArray();
    var hasUnicode = require_hasUnicode();
    var unicodeToArray = require_unicodeToArray();
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    module.exports = stringToArray;
  }
});

// node_modules/lodash/_createCaseFirst.js
var require_createCaseFirst = __commonJS({
  "node_modules/lodash/_createCaseFirst.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var castSlice = require_castSlice();
    var hasUnicode = require_hasUnicode();
    var stringToArray = require_stringToArray();
    var toString = require_toString();
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
        return chr[methodName]() + trailing;
      };
    }
    module.exports = createCaseFirst;
  }
});

// node_modules/lodash/upperFirst.js
var require_upperFirst = __commonJS({
  "node_modules/lodash/upperFirst.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var createCaseFirst = require_createCaseFirst();
    var upperFirst = createCaseFirst("toUpperCase");
    module.exports = upperFirst;
  }
});

// node_modules/lodash/startCase.js
var require_startCase = __commonJS({
  "node_modules/lodash/startCase.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var createCompounder = require_createCompounder();
    var upperFirst = require_upperFirst();
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? " " : "") + upperFirst(word);
    });
    module.exports = startCase;
  }
});

// node_modules/lodash/isEqual.js
var require_isEqual = __commonJS({
  "node_modules/lodash/isEqual.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsEqual = require_baseIsEqual();
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    module.exports = isEqual;
  }
});

// node_modules/@storybook/csf/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/@storybook/csf/dist/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var __create = Object.create;
    var __defProp2 = Object.defineProperty;
    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames2 = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp2 = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames2(from))
          if (!__hasOwnProp2.call(to, key) && key !== except)
            __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps2(
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      includeConditionalArg: () => includeConditionalArg,
      isExportStory: () => isExportStory,
      parseKind: () => parseKind,
      sanitize: () => sanitize,
      storyNameFromExport: () => storyNameFromExport,
      toId: () => toId
    });
    module.exports = __toCommonJS2(src_exports);
    var import_startCase = __toESM(require_startCase());
    var import_isEqual = __toESM(require_isEqual());
    var count = (vals) => vals.map((v) => typeof v !== "undefined").filter(Boolean).length;
    var testValue = (cond, value) => {
      const { exists, eq, neq, truthy } = cond;
      if (count([exists, eq, neq, truthy]) > 1) {
        throw new Error(`Invalid conditional test ${JSON.stringify({ exists, eq, neq })}`);
      }
      if (typeof eq !== "undefined") {
        return (0, import_isEqual.default)(value, eq);
      }
      if (typeof neq !== "undefined") {
        return !(0, import_isEqual.default)(value, neq);
      }
      if (typeof exists !== "undefined") {
        const valueExists = typeof value !== "undefined";
        return exists ? valueExists : !valueExists;
      }
      const shouldBeTruthy = typeof truthy === "undefined" ? true : truthy;
      return shouldBeTruthy ? !!value : !value;
    };
    var includeConditionalArg = (argType, args, globals) => {
      if (!argType.if)
        return true;
      const { arg, global: global2 } = argType.if;
      if (count([arg, global2]) !== 1) {
        throw new Error(`Invalid conditional value ${JSON.stringify({ arg, global: global2 })}`);
      }
      const value = arg ? args[arg] : globals[global2];
      return testValue(argType.if, value);
    };
    var sanitize = (string) => {
      return string.toLowerCase().replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, "-").replace(/-+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
    };
    var sanitizeSafe = (string, part) => {
      const sanitized = sanitize(string);
      if (sanitized === "") {
        throw new Error(`Invalid ${part} '${string}', must include alphanumeric characters`);
      }
      return sanitized;
    };
    var toId = (kind, name) => `${sanitizeSafe(kind, "kind")}${name ? `--${sanitizeSafe(name, "name")}` : ""}`;
    var storyNameFromExport = (key) => (0, import_startCase.default)(key);
    function matches(storyKey, arrayOrRegex) {
      if (Array.isArray(arrayOrRegex)) {
        return arrayOrRegex.includes(storyKey);
      }
      return storyKey.match(arrayOrRegex);
    }
    function isExportStory(key, { includeStories, excludeStories }) {
      return key !== "__esModule" && (!includeStories || matches(key, includeStories)) && (!excludeStories || !matches(key, excludeStories));
    }
    var parseKind = (kind, { rootSeparator, groupSeparator }) => {
      const [root, remainder] = kind.split(rootSeparator, 2);
      const groups = (remainder || kind).split(groupSeparator).filter((i2) => !!i2);
      return {
        root: remainder ? root : null,
        groups
      };
    };
  }
});

// global-externals:@storybook/client-logger
var client_logger_exports = {};
__export(client_logger_exports, {
  default: () => client_logger_default,
  deprecate: () => deprecate,
  logger: () => logger,
  once: () => once,
  pretty: () => pretty
});
var client_logger_default, deprecate, logger, once, pretty;
var init_client_logger = __esm({
  "global-externals:@storybook/client-logger"() {
    init_define_module();
    init_define_process_env();
    client_logger_default = __STORYBOOKCLIENTLOGGER__;
    ({ deprecate, logger, once, pretty } = __STORYBOOKCLIENTLOGGER__);
  }
});

// node_modules/memoizerific/memoizerific.js
var require_memoizerific = __commonJS({
  "node_modules/memoizerific/memoizerific.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    (function(f2) {
      if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = f2();
      } else if (typeof define === "function" && define.amd) {
        define([], f2);
      } else {
        var g;
        if (typeof window !== "undefined") {
          g = window;
        } else if (typeof window !== "undefined") {
          g = window;
        } else if (typeof self !== "undefined") {
          g = self;
        } else {
          g = this;
        }
        g.memoizerific = f2();
      }
    })(function() {
      var define2, module2, exports2;
      return function e(t, n, r) {
        function s2(o2, u) {
          if (!n[o2]) {
            if (!t[o2]) {
              var a2 = typeof __require == "function" && __require;
              if (!u && a2)
                return a2(o2, true);
              if (i2)
                return i2(o2, true);
              var f2 = new Error("Cannot find module '" + o2 + "'");
              throw f2.code = "MODULE_NOT_FOUND", f2;
            }
            var l = n[o2] = { exports: {} };
            t[o2][0].call(l.exports, function(e2) {
              var n2 = t[o2][1][e2];
              return s2(n2 ? n2 : e2);
            }, l, l.exports, e, t, n, r);
          }
          return n[o2].exports;
        }
        var i2 = typeof __require == "function" && __require;
        for (var o = 0; o < r.length; o++)
          s2(r[o]);
        return s2;
      }({ 1: [function(_dereq_, module3, exports3) {
        module3.exports = function(forceSimilar) {
          if (typeof Map !== "function" || forceSimilar) {
            var Similar = _dereq_("./similar");
            return new Similar();
          } else {
            return /* @__PURE__ */ new Map();
          }
        };
      }, { "./similar": 2 }], 2: [function(_dereq_, module3, exports3) {
        function Similar() {
          this.list = [];
          this.lastItem = void 0;
          this.size = 0;
          return this;
        }
        Similar.prototype.get = function(key) {
          var index;
          if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
            return this.lastItem.val;
          }
          index = this.indexOf(key);
          if (index >= 0) {
            this.lastItem = this.list[index];
            return this.list[index].val;
          }
          return void 0;
        };
        Similar.prototype.set = function(key, val) {
          var index;
          if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
            this.lastItem.val = val;
            return this;
          }
          index = this.indexOf(key);
          if (index >= 0) {
            this.lastItem = this.list[index];
            this.list[index].val = val;
            return this;
          }
          this.lastItem = { key, val };
          this.list.push(this.lastItem);
          this.size++;
          return this;
        };
        Similar.prototype.delete = function(key) {
          var index;
          if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
            this.lastItem = void 0;
          }
          index = this.indexOf(key);
          if (index >= 0) {
            this.size--;
            return this.list.splice(index, 1)[0];
          }
          return void 0;
        };
        Similar.prototype.has = function(key) {
          var index;
          if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
            return true;
          }
          index = this.indexOf(key);
          if (index >= 0) {
            this.lastItem = this.list[index];
            return true;
          }
          return false;
        };
        Similar.prototype.forEach = function(callback, thisArg) {
          var i2;
          for (i2 = 0; i2 < this.size; i2++) {
            callback.call(thisArg || this, this.list[i2].val, this.list[i2].key, this);
          }
        };
        Similar.prototype.indexOf = function(key) {
          var i2;
          for (i2 = 0; i2 < this.size; i2++) {
            if (this.isEqual(this.list[i2].key, key)) {
              return i2;
            }
          }
          return -1;
        };
        Similar.prototype.isEqual = function(val1, val2) {
          return val1 === val2 || val1 !== val1 && val2 !== val2;
        };
        module3.exports = Similar;
      }, {}], 3: [function(_dereq_, module3, exports3) {
        var MapOrSimilar = _dereq_("map-or-similar");
        module3.exports = function(limit) {
          var cache = new MapOrSimilar(void 0 === "true"), lru = [];
          return function(fn) {
            var memoizerific = function() {
              var currentCache = cache, newMap, fnResult, argsLengthMinusOne = arguments.length - 1, lruPath = Array(argsLengthMinusOne + 1), isMemoized = true, i2;
              if ((memoizerific.numArgs || memoizerific.numArgs === 0) && memoizerific.numArgs !== argsLengthMinusOne + 1) {
                throw new Error("Memoizerific functions should always be called with the same number of arguments");
              }
              for (i2 = 0; i2 < argsLengthMinusOne; i2++) {
                lruPath[i2] = {
                  cacheItem: currentCache,
                  arg: arguments[i2]
                };
                if (currentCache.has(arguments[i2])) {
                  currentCache = currentCache.get(arguments[i2]);
                  continue;
                }
                isMemoized = false;
                newMap = new MapOrSimilar(void 0 === "true");
                currentCache.set(arguments[i2], newMap);
                currentCache = newMap;
              }
              if (isMemoized) {
                if (currentCache.has(arguments[argsLengthMinusOne])) {
                  fnResult = currentCache.get(arguments[argsLengthMinusOne]);
                } else {
                  isMemoized = false;
                }
              }
              if (!isMemoized) {
                fnResult = fn.apply(null, arguments);
                currentCache.set(arguments[argsLengthMinusOne], fnResult);
              }
              if (limit > 0) {
                lruPath[argsLengthMinusOne] = {
                  cacheItem: currentCache,
                  arg: arguments[argsLengthMinusOne]
                };
                if (isMemoized) {
                  moveToMostRecentLru(lru, lruPath);
                } else {
                  lru.push(lruPath);
                }
                if (lru.length > limit) {
                  removeCachedResult(lru.shift());
                }
              }
              memoizerific.wasMemoized = isMemoized;
              memoizerific.numArgs = argsLengthMinusOne + 1;
              return fnResult;
            };
            memoizerific.limit = limit;
            memoizerific.wasMemoized = false;
            memoizerific.cache = cache;
            memoizerific.lru = lru;
            return memoizerific;
          };
        };
        function moveToMostRecentLru(lru, lruPath) {
          var lruLen = lru.length, lruPathLen = lruPath.length, isMatch, i2, ii;
          for (i2 = 0; i2 < lruLen; i2++) {
            isMatch = true;
            for (ii = 0; ii < lruPathLen; ii++) {
              if (!isEqual(lru[i2][ii].arg, lruPath[ii].arg)) {
                isMatch = false;
                break;
              }
            }
            if (isMatch) {
              break;
            }
          }
          lru.push(lru.splice(i2, 1)[0]);
        }
        function removeCachedResult(removedLru) {
          var removedLruLen = removedLru.length, currentLru = removedLru[removedLruLen - 1], tmp, i2;
          currentLru.cacheItem.delete(currentLru.arg);
          for (i2 = removedLruLen - 2; i2 >= 0; i2--) {
            currentLru = removedLru[i2];
            tmp = currentLru.cacheItem.get(currentLru.arg);
            if (!tmp || !tmp.size) {
              currentLru.cacheItem.delete(currentLru.arg);
            } else {
              break;
            }
          }
        }
        function isEqual(val1, val2) {
          return val1 === val2 || val1 !== val1 && val2 !== val2;
        }
      }, { "map-or-similar": 1 }] }, {}, [3])(3);
    });
  }
});

// node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "node_modules/lodash/_baseFindIndex.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// node_modules/lodash/_baseIsNaN.js
var require_baseIsNaN = __commonJS({
  "node_modules/lodash/_baseIsNaN.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  }
});

// node_modules/lodash/_strictIndexOf.js
var require_strictIndexOf = __commonJS({
  "node_modules/lodash/_strictIndexOf.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  }
});

// node_modules/lodash/_baseIndexOf.js
var require_baseIndexOf = __commonJS({
  "node_modules/lodash/_baseIndexOf.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  }
});

// node_modules/lodash/_arrayIncludes.js
var require_arrayIncludes = __commonJS({
  "node_modules/lodash/_arrayIncludes.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIndexOf = require_baseIndexOf();
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    module.exports = arrayIncludes;
  }
});

// node_modules/lodash/_arrayIncludesWith.js
var require_arrayIncludesWith = __commonJS({
  "node_modules/lodash/_arrayIncludesWith.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    module.exports = arrayIncludesWith;
  }
});

// node_modules/lodash/noop.js
var require_noop = __commonJS({
  "node_modules/lodash/noop.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function noop() {
    }
    module.exports = noop;
  }
});

// node_modules/lodash/_createSet.js
var require_createSet = __commonJS({
  "node_modules/lodash/_createSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Set2 = require_Set();
    var noop = require_noop();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values) {
      return new Set2(values);
    };
    module.exports = createSet;
  }
});

// node_modules/lodash/_baseUniq.js
var require_baseUniq = __commonJS({
  "node_modules/lodash/_baseUniq.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  }
});

// node_modules/lodash/uniq.js
var require_uniq = __commonJS({
  "node_modules/lodash/uniq.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseUniq = require_baseUniq();
    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }
    module.exports = uniq;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = __commonJS({
  "node_modules/lodash/_copyObject.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1, length = props.length;
      while (++index < length) {
        var key = props[index];
        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }
    module.exports = copyObject;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = __commonJS({
  "node_modules/lodash/_cloneBuffer.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var root = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = __commonJS({
  "node_modules/lodash/_copyArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function copyArray(source, array) {
      var index = -1, length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    module.exports = copyArray;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = __commonJS({
  "node_modules/lodash/_cloneArrayBuffer.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Uint8Array2 = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = __commonJS({
  "node_modules/lodash/_cloneTypedArray.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = __commonJS({
  "node_modules/lodash/_baseCreate.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = function() {
      function object() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = __commonJS({
  "node_modules/lodash/_initCloneObject.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object) {
      return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    module.exports = initCloneObject;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/cloneDeep.js
var require_cloneDeep = __commonJS({
  "node_modules/lodash/cloneDeep.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseClone = require_baseClone();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_SYMBOLS_FLAG = 4;
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    module.exports = cloneDeep;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/mapValues.js
var require_mapValues = __commonJS({
  "node_modules/lodash/mapValues.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseAssignValue = require_baseAssignValue();
    var baseForOwn = require_baseForOwn();
    var baseIteratee = require_baseIteratee();
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = baseIteratee(iteratee, 3);
      baseForOwn(object, function(value, key, object2) {
        baseAssignValue(result, key, iteratee(value, key, object2));
      });
      return result;
    }
    module.exports = mapValues;
  }
});

// node_modules/lodash/_basePick.js
var require_basePick = __commonJS({
  "node_modules/lodash/_basePick.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var basePickBy = require_basePickBy();
    var hasIn = require_hasIn();
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }
    module.exports = basePick;
  }
});

// node_modules/lodash/_isFlattenable.js
var require_isFlattenable = __commonJS({
  "node_modules/lodash/_isFlattenable.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var Symbol2 = require_Symbol();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    module.exports = isFlattenable;
  }
});

// node_modules/lodash/_baseFlatten.js
var require_baseFlatten = __commonJS({
  "node_modules/lodash/_baseFlatten.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var arrayPush = require_arrayPush();
    var isFlattenable = require_isFlattenable();
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1, length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    module.exports = baseFlatten;
  }
});

// node_modules/lodash/flatten.js
var require_flatten = __commonJS({
  "node_modules/lodash/flatten.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseFlatten = require_baseFlatten();
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }
    module.exports = flatten;
  }
});

// node_modules/lodash/_apply.js
var require_apply = __commonJS({
  "node_modules/lodash/_apply.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = __commonJS({
  "node_modules/lodash/_overRest.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start, transform) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant = __commonJS({
  "node_modules/lodash/constant.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = __commonJS({
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var constant = require_constant();
    var defineProperty = require_defineProperty();
    var identity = require_identity();
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = __commonJS({
  "node_modules/lodash/_shortOut.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = __commonJS({
  "node_modules/lodash/_setToString.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_flatRest.js
var require_flatRest = __commonJS({
  "node_modules/lodash/_flatRest.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var flatten = require_flatten();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function flatRest(func) {
      return setToString(overRest(func, void 0, flatten), func + "");
    }
    module.exports = flatRest;
  }
});

// node_modules/lodash/pick.js
var require_pick = __commonJS({
  "node_modules/lodash/pick.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var basePick = require_basePick();
    var flatRest = require_flatRest();
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });
    module.exports = pick;
  }
});

// node_modules/synchronous-promise/index.js
var require_synchronous_promise = __commonJS({
  "node_modules/synchronous-promise/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    function makeArrayFrom(obj) {
      return Array.prototype.slice.apply(obj);
    }
    var PENDING = "pending";
    var RESOLVED = "resolved";
    var REJECTED = "rejected";
    function SynchronousPromise(handler) {
      this.status = PENDING;
      this._continuations = [];
      this._parent = null;
      this._paused = false;
      if (handler) {
        handler.call(
          this,
          this._continueWith.bind(this),
          this._failWith.bind(this)
        );
      }
    }
    function looksLikeAPromise(obj) {
      return obj && typeof obj.then === "function";
    }
    function passThrough(value) {
      return value;
    }
    SynchronousPromise.prototype = {
      then: function(nextFn, catchFn) {
        var next = SynchronousPromise.unresolved()._setParent(this);
        if (this._isRejected()) {
          if (this._paused) {
            this._continuations.push({
              promise: next,
              nextFn,
              catchFn
            });
            return next;
          }
          if (catchFn) {
            try {
              var catchResult = catchFn(this._error);
              if (looksLikeAPromise(catchResult)) {
                this._chainPromiseData(catchResult, next);
                return next;
              } else {
                return SynchronousPromise.resolve(catchResult)._setParent(this);
              }
            } catch (e) {
              return SynchronousPromise.reject(e)._setParent(this);
            }
          }
          return SynchronousPromise.reject(this._error)._setParent(this);
        }
        this._continuations.push({
          promise: next,
          nextFn,
          catchFn
        });
        this._runResolutions();
        return next;
      },
      catch: function(handler) {
        if (this._isResolved()) {
          return SynchronousPromise.resolve(this._data)._setParent(this);
        }
        var next = SynchronousPromise.unresolved()._setParent(this);
        this._continuations.push({
          promise: next,
          catchFn: handler
        });
        this._runRejections();
        return next;
      },
      finally: function(callback) {
        var ran = false;
        function runFinally(result, err) {
          if (!ran) {
            ran = true;
            if (!callback) {
              callback = passThrough;
            }
            var callbackResult = callback(result);
            if (looksLikeAPromise(callbackResult)) {
              return callbackResult.then(function() {
                if (err) {
                  throw err;
                }
                return result;
              });
            } else {
              return result;
            }
          }
        }
        return this.then(function(result) {
          return runFinally(result);
        }).catch(function(err) {
          return runFinally(null, err);
        });
      },
      pause: function() {
        this._paused = true;
        return this;
      },
      resume: function() {
        var firstPaused = this._findFirstPaused();
        if (firstPaused) {
          firstPaused._paused = false;
          firstPaused._runResolutions();
          firstPaused._runRejections();
        }
        return this;
      },
      _findAncestry: function() {
        return this._continuations.reduce(function(acc, cur) {
          if (cur.promise) {
            var node = {
              promise: cur.promise,
              children: cur.promise._findAncestry()
            };
            acc.push(node);
          }
          return acc;
        }, []);
      },
      _setParent: function(parent) {
        if (this._parent) {
          throw new Error("parent already set");
        }
        this._parent = parent;
        return this;
      },
      _continueWith: function(data) {
        var firstPending = this._findFirstPending();
        if (firstPending) {
          firstPending._data = data;
          firstPending._setResolved();
        }
      },
      _findFirstPending: function() {
        return this._findFirstAncestor(function(test) {
          return test._isPending && test._isPending();
        });
      },
      _findFirstPaused: function() {
        return this._findFirstAncestor(function(test) {
          return test._paused;
        });
      },
      _findFirstAncestor: function(matching) {
        var test = this;
        var result;
        while (test) {
          if (matching(test)) {
            result = test;
          }
          test = test._parent;
        }
        return result;
      },
      _failWith: function(error) {
        var firstRejected = this._findFirstPending();
        if (firstRejected) {
          firstRejected._error = error;
          firstRejected._setRejected();
        }
      },
      _takeContinuations: function() {
        return this._continuations.splice(0, this._continuations.length);
      },
      _runRejections: function() {
        if (this._paused || !this._isRejected()) {
          return;
        }
        var error = this._error, continuations = this._takeContinuations(), self2 = this;
        continuations.forEach(function(cont) {
          if (cont.catchFn) {
            try {
              var catchResult = cont.catchFn(error);
              self2._handleUserFunctionResult(catchResult, cont.promise);
            } catch (e) {
              cont.promise.reject(e);
            }
          } else {
            cont.promise.reject(error);
          }
        });
      },
      _runResolutions: function() {
        if (this._paused || !this._isResolved() || this._isPending()) {
          return;
        }
        var continuations = this._takeContinuations();
        if (looksLikeAPromise(this._data)) {
          return this._handleWhenResolvedDataIsPromise(this._data);
        }
        var data = this._data;
        var self2 = this;
        continuations.forEach(function(cont) {
          if (cont.nextFn) {
            try {
              var result = cont.nextFn(data);
              self2._handleUserFunctionResult(result, cont.promise);
            } catch (e) {
              self2._handleResolutionError(e, cont);
            }
          } else if (cont.promise) {
            cont.promise.resolve(data);
          }
        });
      },
      _handleResolutionError: function(e, continuation) {
        this._setRejected();
        if (continuation.catchFn) {
          try {
            continuation.catchFn(e);
            return;
          } catch (e2) {
            e = e2;
          }
        }
        if (continuation.promise) {
          continuation.promise.reject(e);
        }
      },
      _handleWhenResolvedDataIsPromise: function(data) {
        var self2 = this;
        return data.then(function(result) {
          self2._data = result;
          self2._runResolutions();
        }).catch(function(error) {
          self2._error = error;
          self2._setRejected();
          self2._runRejections();
        });
      },
      _handleUserFunctionResult: function(data, nextSynchronousPromise) {
        if (looksLikeAPromise(data)) {
          this._chainPromiseData(data, nextSynchronousPromise);
        } else {
          nextSynchronousPromise.resolve(data);
        }
      },
      _chainPromiseData: function(promiseData, nextSynchronousPromise) {
        promiseData.then(function(newData) {
          nextSynchronousPromise.resolve(newData);
        }).catch(function(newError) {
          nextSynchronousPromise.reject(newError);
        });
      },
      _setResolved: function() {
        this.status = RESOLVED;
        if (!this._paused) {
          this._runResolutions();
        }
      },
      _setRejected: function() {
        this.status = REJECTED;
        if (!this._paused) {
          this._runRejections();
        }
      },
      _isPending: function() {
        return this.status === PENDING;
      },
      _isResolved: function() {
        return this.status === RESOLVED;
      },
      _isRejected: function() {
        return this.status === REJECTED;
      }
    };
    SynchronousPromise.resolve = function(result) {
      return new SynchronousPromise(function(resolve, reject) {
        if (looksLikeAPromise(result)) {
          result.then(function(newResult) {
            resolve(newResult);
          }).catch(function(error) {
            reject(error);
          });
        } else {
          resolve(result);
        }
      });
    };
    SynchronousPromise.reject = function(result) {
      return new SynchronousPromise(function(resolve, reject) {
        reject(result);
      });
    };
    SynchronousPromise.unresolved = function() {
      return new SynchronousPromise(function(resolve, reject) {
        this.resolve = resolve;
        this.reject = reject;
      });
    };
    SynchronousPromise.all = function() {
      var args = makeArrayFrom(arguments);
      if (Array.isArray(args[0])) {
        args = args[0];
      }
      if (!args.length) {
        return SynchronousPromise.resolve([]);
      }
      return new SynchronousPromise(function(resolve, reject) {
        var allData = [], numResolved = 0, doResolve = function() {
          if (numResolved === args.length) {
            resolve(allData);
          }
        }, rejected = false, doReject = function(err) {
          if (rejected) {
            return;
          }
          rejected = true;
          reject(err);
        };
        args.forEach(function(arg, idx) {
          SynchronousPromise.resolve(arg).then(function(thisResult) {
            allData[idx] = thisResult;
            numResolved += 1;
            doResolve();
          }).catch(function(err) {
            doReject(err);
          });
        });
      });
    };
    function createAggregateErrorFrom(errors) {
      if (typeof window !== "undefined" && "AggregateError" in window) {
        return new window.AggregateError(errors);
      }
      return { errors };
    }
    SynchronousPromise.any = function() {
      var args = makeArrayFrom(arguments);
      if (Array.isArray(args[0])) {
        args = args[0];
      }
      if (!args.length) {
        return SynchronousPromise.reject(createAggregateErrorFrom([]));
      }
      return new SynchronousPromise(function(resolve, reject) {
        var allErrors = [], numRejected = 0, doReject = function() {
          if (numRejected === args.length) {
            reject(createAggregateErrorFrom(allErrors));
          }
        }, resolved = false, doResolve = function(result) {
          if (resolved) {
            return;
          }
          resolved = true;
          resolve(result);
        };
        args.forEach(function(arg, idx) {
          SynchronousPromise.resolve(arg).then(function(thisResult) {
            doResolve(thisResult);
          }).catch(function(err) {
            allErrors[idx] = err;
            numRejected += 1;
            doReject();
          });
        });
      });
    };
    SynchronousPromise.allSettled = function() {
      var args = makeArrayFrom(arguments);
      if (Array.isArray(args[0])) {
        args = args[0];
      }
      if (!args.length) {
        return SynchronousPromise.resolve([]);
      }
      return new SynchronousPromise(function(resolve) {
        var allData = [], numSettled = 0, doSettled = function() {
          numSettled += 1;
          if (numSettled === args.length) {
            resolve(allData);
          }
        };
        args.forEach(function(arg, idx) {
          SynchronousPromise.resolve(arg).then(function(thisResult) {
            allData[idx] = {
              status: "fulfilled",
              value: thisResult
            };
            doSettled();
          }).catch(function(err) {
            allData[idx] = {
              status: "rejected",
              reason: err
            };
            doSettled();
          });
        });
      });
    };
    if (Promise === SynchronousPromise) {
      throw new Error("Please use SynchronousPromise.installGlobally() to install globally");
    }
    var RealPromise = Promise;
    SynchronousPromise.installGlobally = function(__awaiter) {
      if (Promise === SynchronousPromise) {
        return __awaiter;
      }
      var result = patchAwaiterIfRequired(__awaiter);
      Promise = SynchronousPromise;
      return result;
    };
    SynchronousPromise.uninstallGlobally = function() {
      if (Promise === SynchronousPromise) {
        Promise = RealPromise;
      }
    };
    function patchAwaiterIfRequired(__awaiter) {
      if (typeof __awaiter === "undefined" || __awaiter.__patched) {
        return __awaiter;
      }
      var originalAwaiter = __awaiter;
      __awaiter = function() {
        var Promise2 = RealPromise;
        originalAwaiter.apply(this, makeArrayFrom(arguments));
      };
      __awaiter.__patched = true;
      return __awaiter;
    }
    module.exports = {
      SynchronousPromise
    };
  }
});

// node_modules/ts-dedent/dist/index.js
var require_dist4 = __commonJS({
  "node_modules/ts-dedent/dist/index.js"(exports) {
    "use strict";
    init_define_module();
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.dedent = void 0;
    function dedent(templ) {
      var values = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
      }
      var strings = Array.from(typeof templ === "string" ? [templ] : templ);
      strings[strings.length - 1] = strings[strings.length - 1].replace(/\r?\n([\t ]*)$/, "");
      var indentLengths = strings.reduce(function(arr, str2) {
        var matches = str2.match(/\n([\t ]+|(?!\s).)/g);
        if (matches) {
          return arr.concat(matches.map(function(match) {
            var _a, _b;
            return (_b = (_a = match.match(/[\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
          }));
        }
        return arr;
      }, []);
      if (indentLengths.length) {
        var pattern_1 = new RegExp("\n[	 ]{" + Math.min.apply(Math, indentLengths) + "}", "g");
        strings = strings.map(function(str2) {
          return str2.replace(pattern_1, "\n");
        });
      }
      strings[0] = strings[0].replace(/^\r?\n/, "");
      var string = strings[0];
      values.forEach(function(value, i2) {
        var endentations = string.match(/(?:^|\n)( *)$/);
        var endentation = endentations ? endentations[1] : "";
        var indentedValue = value;
        if (typeof value === "string" && value.includes("\n")) {
          indentedValue = String(value).split("\n").map(function(str2, i3) {
            return i3 === 0 ? str2 : "" + endentation + str2;
          }).join("\n");
        }
        string += indentedValue + strings[i2 + 1];
      });
      return string;
    }
    exports.dedent = dedent;
    exports.default = dedent;
  }
});

// node_modules/dequal/dist/index.js
var require_dist5 = __commonJS({
  "node_modules/dequal/dist/index.js"(exports) {
    init_define_module();
    init_define_process_env();
    var has = Object.prototype.hasOwnProperty;
    function find(iter, tar, key) {
      for (key of iter.keys()) {
        if (dequal(key, tar))
          return key;
      }
    }
    function dequal(foo, bar) {
      var ctor, len, tmp;
      if (foo === bar)
        return true;
      if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
        if (ctor === Date)
          return foo.getTime() === bar.getTime();
        if (ctor === RegExp)
          return foo.toString() === bar.toString();
        if (ctor === Array) {
          if ((len = foo.length) === bar.length) {
            while (len-- && dequal(foo[len], bar[len]))
              ;
          }
          return len === -1;
        }
        if (ctor === Set) {
          if (foo.size !== bar.size) {
            return false;
          }
          for (len of foo) {
            tmp = len;
            if (tmp && typeof tmp === "object") {
              tmp = find(bar, tmp);
              if (!tmp)
                return false;
            }
            if (!bar.has(tmp))
              return false;
          }
          return true;
        }
        if (ctor === Map) {
          if (foo.size !== bar.size) {
            return false;
          }
          for (len of foo) {
            tmp = len[0];
            if (tmp && typeof tmp === "object") {
              tmp = find(bar, tmp);
              if (!tmp)
                return false;
            }
            if (!dequal(len[1], bar.get(tmp))) {
              return false;
            }
          }
          return true;
        }
        if (ctor === ArrayBuffer) {
          foo = new Uint8Array(foo);
          bar = new Uint8Array(bar);
        } else if (ctor === DataView) {
          if ((len = foo.byteLength) === bar.byteLength) {
            while (len-- && foo.getInt8(len) === bar.getInt8(len))
              ;
          }
          return len === -1;
        }
        if (ArrayBuffer.isView(foo)) {
          if ((len = foo.byteLength) === bar.byteLength) {
            while (len-- && foo[len] === bar[len])
              ;
          }
          return len === -1;
        }
        if (!ctor || typeof foo === "object") {
          len = 0;
          for (ctor in foo) {
            if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))
              return false;
            if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor]))
              return false;
          }
          return Object.keys(bar).length === len;
        }
      }
      return foo !== foo && bar !== bar;
    }
    exports.dequal = dequal;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = __commonJS({
  "node_modules/lodash/isPlainObject.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  }
});

// node_modules/util-deprecate/browser.js
var require_browser = __commonJS({
  "node_modules/util-deprecate/browser.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    module.exports = deprecate2;
    function deprecate2(fn, msg) {
      if (config("noDeprecation")) {
        return fn;
      }
      var warned = false;
      function deprecated() {
        if (!warned) {
          if (config("throwDeprecation")) {
            throw new Error(msg);
          } else if (config("traceDeprecation")) {
            console.trace(msg);
          } else {
            console.warn(msg);
          }
          warned = true;
        }
        return fn.apply(this, arguments);
      }
      return deprecated;
    }
    function config(name) {
      try {
        if (!window.localStorage)
          return false;
      } catch (_2) {
        return false;
      }
      var val = window.localStorage[name];
      if (null == val)
        return false;
      return String(val).toLowerCase() === "true";
    }
  }
});

// global-externals:@storybook/core-events
var core_events_exports = {};
__export(core_events_exports, {
  CHANNEL_CREATED: () => CHANNEL_CREATED,
  CONFIG_ERROR: () => CONFIG_ERROR,
  CURRENT_STORY_WAS_SET: () => CURRENT_STORY_WAS_SET,
  DOCS_RENDERED: () => DOCS_RENDERED,
  FORCE_REMOUNT: () => FORCE_REMOUNT,
  FORCE_RE_RENDER: () => FORCE_RE_RENDER,
  GLOBALS_UPDATED: () => GLOBALS_UPDATED,
  IGNORED_EXCEPTION: () => IGNORED_EXCEPTION,
  NAVIGATE_URL: () => NAVIGATE_URL,
  PLAY_FUNCTION_THREW_EXCEPTION: () => PLAY_FUNCTION_THREW_EXCEPTION,
  PRELOAD_ENTRIES: () => PRELOAD_ENTRIES,
  PREVIEW_KEYDOWN: () => PREVIEW_KEYDOWN,
  REGISTER_SUBSCRIPTION: () => REGISTER_SUBSCRIPTION,
  RESET_STORY_ARGS: () => RESET_STORY_ARGS,
  SELECT_STORY: () => SELECT_STORY,
  SET_CONFIG: () => SET_CONFIG,
  SET_CURRENT_STORY: () => SET_CURRENT_STORY,
  SET_GLOBALS: () => SET_GLOBALS,
  SET_INDEX: () => SET_INDEX,
  SET_STORIES: () => SET_STORIES,
  SHARED_STATE_CHANGED: () => SHARED_STATE_CHANGED,
  SHARED_STATE_SET: () => SHARED_STATE_SET,
  STORIES_COLLAPSE_ALL: () => STORIES_COLLAPSE_ALL,
  STORIES_EXPAND_ALL: () => STORIES_EXPAND_ALL,
  STORY_ARGS_UPDATED: () => STORY_ARGS_UPDATED,
  STORY_CHANGED: () => STORY_CHANGED,
  STORY_ERRORED: () => STORY_ERRORED,
  STORY_INDEX_INVALIDATED: () => STORY_INDEX_INVALIDATED,
  STORY_MISSING: () => STORY_MISSING,
  STORY_PREPARED: () => STORY_PREPARED,
  STORY_RENDERED: () => STORY_RENDERED,
  STORY_RENDER_PHASE_CHANGED: () => STORY_RENDER_PHASE_CHANGED,
  STORY_SPECIFIED: () => STORY_SPECIFIED,
  STORY_THREW_EXCEPTION: () => STORY_THREW_EXCEPTION,
  STORY_UNCHANGED: () => STORY_UNCHANGED,
  UPDATE_GLOBALS: () => UPDATE_GLOBALS,
  UPDATE_QUERY_PARAMS: () => UPDATE_QUERY_PARAMS,
  UPDATE_STORY_ARGS: () => UPDATE_STORY_ARGS,
  default: () => core_events_default
});
var core_events_default, CHANNEL_CREATED, CONFIG_ERROR, CURRENT_STORY_WAS_SET, DOCS_RENDERED, FORCE_REMOUNT, FORCE_RE_RENDER, GLOBALS_UPDATED, IGNORED_EXCEPTION, NAVIGATE_URL, PLAY_FUNCTION_THREW_EXCEPTION, PRELOAD_ENTRIES, PREVIEW_KEYDOWN, REGISTER_SUBSCRIPTION, RESET_STORY_ARGS, SELECT_STORY, SET_CONFIG, SET_CURRENT_STORY, SET_GLOBALS, SET_INDEX, SET_STORIES, SHARED_STATE_CHANGED, SHARED_STATE_SET, STORIES_COLLAPSE_ALL, STORIES_EXPAND_ALL, STORY_ARGS_UPDATED, STORY_CHANGED, STORY_ERRORED, STORY_INDEX_INVALIDATED, STORY_MISSING, STORY_PREPARED, STORY_RENDERED, STORY_RENDER_PHASE_CHANGED, STORY_SPECIFIED, STORY_THREW_EXCEPTION, STORY_UNCHANGED, UPDATE_GLOBALS, UPDATE_QUERY_PARAMS, UPDATE_STORY_ARGS;
var init_core_events = __esm({
  "global-externals:@storybook/core-events"() {
    init_define_module();
    init_define_process_env();
    core_events_default = __STORYBOOKCOREEVENTS__;
    ({ CHANNEL_CREATED, CONFIG_ERROR, CURRENT_STORY_WAS_SET, DOCS_RENDERED, FORCE_REMOUNT, FORCE_RE_RENDER, GLOBALS_UPDATED, IGNORED_EXCEPTION, NAVIGATE_URL, PLAY_FUNCTION_THREW_EXCEPTION, PRELOAD_ENTRIES, PREVIEW_KEYDOWN, REGISTER_SUBSCRIPTION, RESET_STORY_ARGS, SELECT_STORY, SET_CONFIG, SET_CURRENT_STORY, SET_GLOBALS, SET_INDEX, SET_STORIES, SHARED_STATE_CHANGED, SHARED_STATE_SET, STORIES_COLLAPSE_ALL, STORIES_EXPAND_ALL, STORY_ARGS_UPDATED, STORY_CHANGED, STORY_ERRORED, STORY_INDEX_INVALIDATED, STORY_MISSING, STORY_PREPARED, STORY_RENDERED, STORY_RENDER_PHASE_CHANGED, STORY_SPECIFIED, STORY_THREW_EXCEPTION, STORY_UNCHANGED, UPDATE_GLOBALS, UPDATE_QUERY_PARAMS, UPDATE_STORY_ARGS } = __STORYBOOKCOREEVENTS__);
  }
});

// node_modules/slash/index.js
var require_slash = __commonJS({
  "node_modules/slash/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    module.exports = (path) => {
      const isExtendedLengthPath = /^\\\\\?\\/.test(path);
      const hasNonAscii = /[^\u0000-\u0080]+/.test(path);
      if (isExtendedLengthPath || hasNonAscii) {
        return path;
      }
      return path.replace(/\\/g, "/");
    };
  }
});

// node_modules/@storybook/store/dist/index.js
var require_dist6 = __commonJS({
  "node_modules/@storybook/store/dist/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var Fe = Object.create;
    var H = Object.defineProperty;
    var he = Object.getOwnPropertyDescriptor;
    var Ae = Object.getOwnPropertyNames;
    var Te = Object.getPrototypeOf;
    var be = Object.prototype.hasOwnProperty;
    var we = (e, r) => {
      for (var t in r)
        H(e, t, { get: r[t], enumerable: true });
    };
    var kr = (e, r, t, o) => {
      if (r && typeof r == "object" || typeof r == "function")
        for (let s2 of Ae(r))
          !be.call(e, s2) && s2 !== t && H(e, s2, { get: () => r[s2], enumerable: !(o = he(r, s2)) || o.enumerable });
      return e;
    };
    var f2 = (e, r, t) => (t = e != null ? Fe(Te(e)) : {}, kr(r || !e || !e.__esModule ? H(t, "default", { value: e, enumerable: true }) : t, e));
    var xe = (e) => kr(H({}, "__esModule", { value: true }), e);
    var Ye = {};
    we(Ye, { DEEPLY_EQUAL: () => b2, HooksContext: () => y2.HooksContext, NO_TARGET_NAME: () => G, StoryStore: () => or, applyHooks: () => y2.applyHooks, combineArgs: () => R, combineParameters: () => g, composeConfigs: () => gr, composeStepRunners: () => ur, composeStories: () => De, composeStory: () => Ge, decorateStory: () => Mr, deepDiff: () => k2, defaultDecorateStory: () => pr, filterArgTypes: () => rr, getArrayField: () => v, getField: () => E, getObjectField: () => W2, getSingletonField: () => er, getValuesFromArgTypes: () => C, groupArgsByTarget: () => Y2, inferControls: () => V, mapArgsToTypes: () => lr, noTargetArgs: () => ke, normalizeComponentAnnotations: () => M2, normalizeInputType: () => jr, normalizeInputTypes: () => w, normalizeProjectAnnotations: () => L, normalizeStory: () => D, prepareStory: () => $, processCSFFile: () => cr, sanitizeStoryContextUpdate: () => $r, setProjectAnnotations: () => Re, sortStoriesV6: () => Je, sortStoriesV7: () => Ue, useAddonState: () => Ve, useArgs: () => y2.useArgs, useCallback: () => y2.useCallback, useChannel: () => y2.useChannel, useEffect: () => y2.useEffect, useGlobals: () => y2.useGlobals, useMemo: () => y2.useMemo, useParameter: () => y2.useParameter, useReducer: () => y2.useReducer, useRef: () => y2.useRef, useSharedState: () => te, useState: () => y2.useState, useStoryContext: () => y2.useStoryContext, userOrAutoTitle: () => He, userOrAutoTitleFromSpecifier: () => ie, validateOptions: () => mr });
    module.exports = xe(Ye);
    var Fr = f2(require_memoizerific());
    var re = f2(require_mapValues());
    var hr = f2(require_pick());
    var tr = require_synchronous_promise();
    var ee = (init_addons(), __toCommonJS(addons_exports));
    var Cr = require_dist4();
    var Pr = f2(require_memoizerific());
    var _e = (0, Pr.default)(1)((e) => Object.values(e).reduce((r, t) => (r[t.importPath] = r[t.importPath] || t, r), {}));
    var U = class {
      constructor({ entries: r } = { v: 4, entries: {} }) {
        this.entries = r;
      }
      entryFromSpecifier(r) {
        let t = Object.values(this.entries);
        if (r === "*")
          return t[0];
        if (typeof r == "string")
          return this.entries[r] ? this.entries[r] : t.find((n) => n.id.startsWith(r));
        let { name: o, title: s2 } = r;
        return t.find((n) => n.name === o && n.title === s2);
      }
      storyIdToEntry(r) {
        let t = this.entries[r];
        if (!t)
          throw new Error(Cr.dedent`Couldn't find story matching '${r}' after HMR.
      - Did you remove it from your CSF file?
      - Are you sure a story with that id exists?
      - Please check your entries field of your main.js config.
      - Also check the browser console and terminal for error messages.`);
        return t;
      }
      importPathToEntry(r) {
        return _e(this.entries)[r];
      }
    };
    var Ir = require_dist5();
    var J = (init_client_logger(), __toCommonJS(client_logger_exports));
    var B = f2(require_isPlainObject());
    var ir = require_dist4();
    var I = Symbol("incompatible");
    var ar = (e, r) => {
      let t = r.type;
      if (e == null || !t || r.mapping)
        return e;
      switch (t.name) {
        case "string":
          return String(e);
        case "enum":
          return e;
        case "number":
          return Number(e);
        case "boolean":
          return e === "true";
        case "array":
          return !t.value || !Array.isArray(e) ? I : e.reduce((o, s2, n) => {
            let i2 = ar(s2, { type: t.value });
            return i2 !== I && (o[n] = i2), o;
          }, new Array(e.length));
        case "object":
          return typeof e == "string" || typeof e == "number" ? e : !t.value || typeof e != "object" ? I : Object.entries(e).reduce((o, [s2, n]) => {
            let i2 = ar(n, { type: t.value[s2] });
            return i2 === I ? o : Object.assign(o, { [s2]: i2 });
          }, {});
        default:
          return I;
      }
    };
    var lr = (e, r) => Object.entries(e).reduce((t, [o, s2]) => {
      if (!r[o])
        return t;
      let n = ar(s2, r[o]);
      return n === I ? t : Object.assign(t, { [o]: n });
    }, {});
    var R = (e, r) => Array.isArray(e) && Array.isArray(r) ? r.reduce((t, o, s2) => (t[s2] = R(e[s2], r[s2]), t), [...e]).filter((t) => t !== void 0) : !(0, B.default)(e) || !(0, B.default)(r) ? r : Object.keys({ ...e, ...r }).reduce((t, o) => {
      if (o in r) {
        let s2 = R(e[o], r[o]);
        s2 !== void 0 && (t[o] = s2);
      } else
        t[o] = e[o];
      return t;
    }, {});
    var mr = (e, r) => Object.entries(r).reduce((t, [o, { options: s2 }]) => {
      function n() {
        return o in e && (t[o] = e[o]), t;
      }
      if (!s2)
        return n();
      if (!Array.isArray(s2))
        return J.once.error(ir.dedent`
        Invalid argType: '${o}.options' should be an array.

        More info: https://storybook.js.org/docs/react/api/argtypes
      `), n();
      if (s2.some((c2) => c2 && ["object", "function"].includes(typeof c2)))
        return J.once.error(ir.dedent`
        Invalid argType: '${o}.options' should only contain primitives. Use a 'mapping' for complex values.

        More info: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values
      `), n();
      let i2 = Array.isArray(e[o]), l = i2 && e[o].findIndex((c2) => !s2.includes(c2)), a2 = i2 && l === -1;
      if (e[o] === void 0 || s2.includes(e[o]) || a2)
        return n();
      let m2 = i2 ? `${o}[${l}]` : o, d = s2.map((c2) => typeof c2 == "string" ? `'${c2}'` : String(c2)).join(", ");
      return J.once.warn(`Received illegal value for '${m2}'. Supported options: ${d}`), t;
    }, {});
    var b2 = Symbol("Deeply equal");
    var k2 = (e, r) => {
      if (typeof e != typeof r)
        return r;
      if ((0, Ir.dequal)(e, r))
        return b2;
      if (Array.isArray(e) && Array.isArray(r)) {
        let t = r.reduce((o, s2, n) => {
          let i2 = k2(e[n], s2);
          return i2 !== b2 && (o[n] = i2), o;
        }, new Array(r.length));
        return r.length >= e.length ? t : t.concat(new Array(e.length - r.length).fill(void 0));
      }
      return (0, B.default)(e) && (0, B.default)(r) ? Object.keys({ ...e, ...r }).reduce((t, o) => {
        let s2 = k2(e == null ? void 0 : e[o], r == null ? void 0 : r[o]);
        return s2 === b2 ? t : Object.assign(t, { [o]: s2 });
      }, {}) : r;
    };
    var G = "";
    function Y2({ args: e, argTypes: r }) {
      let t = {};
      return Object.entries(e).forEach(([o, s2]) => {
        let { target: n = G } = r[o] || {};
        t[n] = t[n] || {}, t[n][o] = s2;
      }), t;
    }
    function ke(e) {
      return Y2(e)[G];
    }
    function Ce(e) {
      return Object.keys(e).forEach((r) => e[r] === void 0 && delete e[r]), e;
    }
    var q = class {
      constructor() {
        this.initialArgsByStoryId = {};
        this.argsByStoryId = {};
      }
      get(r) {
        if (!(r in this.argsByStoryId))
          throw new Error(`No args known for ${r} -- has it been rendered yet?`);
        return this.argsByStoryId[r];
      }
      setInitial(r) {
        if (!this.initialArgsByStoryId[r.id])
          this.initialArgsByStoryId[r.id] = r.initialArgs, this.argsByStoryId[r.id] = r.initialArgs;
        else if (this.initialArgsByStoryId[r.id] !== r.initialArgs) {
          let t = k2(this.initialArgsByStoryId[r.id], this.argsByStoryId[r.id]);
          this.initialArgsByStoryId[r.id] = r.initialArgs, this.argsByStoryId[r.id] = r.initialArgs, t !== b2 && this.updateFromDelta(r, t);
        }
      }
      updateFromDelta(r, t) {
        let o = mr(t, r.argTypes);
        this.argsByStoryId[r.id] = R(this.argsByStoryId[r.id], o);
      }
      updateFromPersisted(r, t) {
        let o = lr(t, r.argTypes);
        return this.updateFromDelta(r, o);
      }
      update(r, t) {
        if (!(r in this.argsByStoryId))
          throw new Error(`No args known for ${r} -- has it been rendered yet?`);
        this.argsByStoryId[r] = Ce({ ...this.argsByStoryId[r], ...t });
      }
    };
    var Er = (init_client_logger(), __toCommonJS(client_logger_exports));
    var C = (e = {}) => Object.entries(e).reduce((r, [t, { defaultValue: o }]) => (typeof o < "u" && (r[t] = o), r), {});
    var K = class {
      constructor({ globals: r = {}, globalTypes: t = {} }) {
        this.set({ globals: r, globalTypes: t });
      }
      set({ globals: r = {}, globalTypes: t = {} }) {
        let o = this.initialGlobals && k2(this.initialGlobals, this.globals);
        this.allowedGlobalNames = /* @__PURE__ */ new Set([...Object.keys(r), ...Object.keys(t)]);
        let s2 = C(t);
        this.initialGlobals = { ...s2, ...r }, this.globals = this.initialGlobals, o && o !== b2 && this.updateFromPersisted(o);
      }
      filterAllowedGlobals(r) {
        return Object.entries(r).reduce((t, [o, s2]) => (this.allowedGlobalNames.has(o) ? t[o] = s2 : Er.logger.warn(`Attempted to set a global (${o}) that is not defined in initial globals or globalTypes`), t), {});
      }
      updateFromPersisted(r) {
        let t = this.filterAllowedGlobals(r);
        this.globals = { ...this.globals, ...t };
      }
      get() {
        return this.globals;
      }
      update(r) {
        this.globals = { ...this.globals, ...this.filterAllowedGlobals(r) };
      }
    };
    var Or = f2(require_mapValues());
    var Pe = (e) => typeof e == "string" ? { name: e } : e;
    var Ie = (e) => typeof e == "string" ? { type: e } : e;
    var jr = (e, r) => {
      let { type: t, control: o, ...s2 } = e, n = { name: r, ...s2 };
      return t && (n.type = Pe(t)), o ? n.control = Ie(o) : o === false && (n.control = { disable: true }), n;
    };
    var w = (e) => (0, Or.default)(e, jr);
    var Q = require_dist3();
    var zr = require_dist4();
    var Nr = (init_client_logger(), __toCommonJS(client_logger_exports));
    var Br = f2(require_browser());
    var Ee = zr.dedent`
CSF .story annotations deprecated; annotate story functions directly:
- StoryFn.story.name => StoryFn.storyName
- StoryFn.story.(parameters|decorators) => StoryFn.(parameters|decorators)
See https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#hoisted-csf-annotations for details and codemod.
`;
    var Oe = (0, Br.default)(() => {
    }, Ee);
    function D(e, r, t) {
      let o = r, s2 = typeof r == "function" ? r : null, { story: n } = o;
      n && (Nr.logger.debug("deprecated story", n), Oe());
      let i2 = (0, Q.storyNameFromExport)(e), l = typeof o != "function" && o.name || o.storyName || (n == null ? void 0 : n.name) || i2, a2 = [...o.decorators || [], ...(n == null ? void 0 : n.decorators) || []], m2 = { ...n == null ? void 0 : n.parameters, ...o.parameters }, d = { ...n == null ? void 0 : n.args, ...o.args }, c2 = { ...n == null ? void 0 : n.argTypes, ...o.argTypes }, u = [...o.loaders || [], ...(n == null ? void 0 : n.loaders) || []], { render: F, play: P2, tags: _2 = [] } = o, sr = m2.__id || (0, Q.toId)(t.id, i2);
      return { moduleExport: r, id: sr, name: l, tags: _2, decorators: a2, parameters: m2, args: d, argTypes: w(c2), loaders: u, ...F && { render: F }, ...s2 && { userStoryFn: s2 }, ...P2 && { play: P2 } };
    }
    var Dr = require_dist3();
    var yr = (init_client_logger(), __toCommonJS(client_logger_exports));
    var Rr = require_dist3();
    function M2(e, r = e.title, t) {
      let { id: o, argTypes: s2 } = e;
      return { id: (0, Rr.sanitize)(o || r), ...e, title: r, ...s2 && { argTypes: w(s2) }, parameters: { fileName: t, ...e.parameters } };
    }
    var je = (e) => {
      let { globals: r, globalTypes: t } = e;
      (r || t) && yr.logger.error("Global args/argTypes can only be set globally", JSON.stringify({ globals: r, globalTypes: t }));
    };
    var ze = (e) => {
      let { options: r } = e;
      r != null && r.storySort && yr.logger.error("The storySort option parameter can only be set globally");
    };
    var Gr = (e) => {
      !e || (je(e), ze(e));
    };
    function cr(e, r, t) {
      let { default: o, __namedExportsOrder: s2, ...n } = e, i2 = M2(o, t, r);
      Gr(i2.parameters);
      let l = { meta: i2, stories: {} };
      return Object.keys(n).forEach((a2) => {
        if ((0, Dr.isExportStory)(a2, i2)) {
          let m2 = D(a2, n[a2], i2);
          Gr(m2.parameters), l.stories[m2.id] = m2;
        }
      }), l;
    }
    var Vr = require_dist4();
    var Lr = f2(require_browser());
    var dr = f2(require_window());
    var vr = require_dist3();
    var Wr = (init_addons(), __toCommonJS(addons_exports));
    var Z = f2(require_isPlainObject());
    var g = (...e) => {
      let r = {}, t = e.filter(Boolean), o = t.reduce((s2, n) => (Object.entries(n).forEach(([i2, l]) => {
        let a2 = s2[i2];
        Array.isArray(l) || typeof a2 > "u" ? s2[i2] = l : (0, Z.default)(l) && (0, Z.default)(a2) ? r[i2] = true : typeof l < "u" && (s2[i2] = l);
      }), s2), {});
      return Object.keys(r).forEach((s2) => {
        let n = t.filter(Boolean).map((i2) => i2[s2]).filter((i2) => typeof i2 < "u");
        n.every((i2) => (0, Z.default)(i2)) ? o[s2] = g(...n) : o[s2] = n[n.length - 1];
      }), o;
    };
    function Mr(e, r, t) {
      let o = t(e);
      return (s2) => r(o, s2);
    }
    function $r({ componentId: e, title: r, kind: t, id: o, name: s2, story: n, parameters: i2, initialArgs: l, argTypes: a2, ...m2 } = {}) {
      return m2;
    }
    function pr(e, r) {
      let t = {}, o = (n) => (i2) => {
        if (!t.value)
          throw new Error("Decorated function called without init");
        return t.value = { ...t.value, ...$r(i2) }, n(t.value);
      }, s2 = r.reduce((n, i2) => Mr(n, i2, o), e);
      return (n) => (t.value = n, s2(n));
    }
    var Ne = (0, Lr.default)(() => {
    }, Vr.dedent`
  \`argType.defaultValue\` is deprecated and will be removed in Storybook 7.0.

  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args`);
    function $(e, r, t) {
      var xr;
      let { moduleExport: o, id: s2, name: n } = e, { title: i2 } = r, l = [...e.tags || r.tags || [], "story"], a2 = g(t.parameters, r.parameters, e.parameters), m2 = [...e.decorators || [], ...r.decorators || [], ...t.decorators || []], { applyDecorators: d = pr, argTypesEnhancers: c2 = [], argsEnhancers: u = [], runStep: F } = t, P2 = [...t.loaders || [], ...r.loaders || [], ...e.loaders || []], _2 = e.userStoryFn || e.render || r.render || t.render;
      if (!_2)
        throw new Error(`No render function available for storyId '${s2}'`);
      let sr = g(t.argTypes, r.argTypes, e.argTypes), { passArgsFirst: pe = true } = a2;
      a2.__isArgsStory = pe && _2.length > 0;
      let Ar = { ...t.args, ...r.args, ...e.args }, h2 = { componentId: r.id, title: i2, kind: i2, id: s2, name: n, story: n, component: r.component, subcomponents: r.subcomponents, tags: l, parameters: a2, initialArgs: Ar, argTypes: sr };
      h2.argTypes = c2.reduce((p, S) => S({ ...h2, argTypes: p }), h2.argTypes);
      let Tr = C(h2.argTypes);
      Object.keys(Tr).length > 0 && Ne();
      let de = { ...Tr, ...Ar };
      h2.initialArgs = u.reduce((p, S) => ({ ...p, ...S({ ...h2, initialArgs: p }) }), de), (xr = dr.default.FEATURES) != null && xr.breakingChangesV7 || (h2.parameters = { ...h2.parameters, __id: s2, globals: t.globals, globalTypes: t.globalTypes, args: h2.initialArgs, argTypes: h2.argTypes });
      let Se = async (p) => {
        let S = await Promise.all(P2.map((A3) => A3(p))), T2 = Object.assign({}, ...S);
        return { ...p, loaded: T2 };
      }, br = (p) => {
        let S = Object.entries(p.args).reduce((O, [j2, z]) => {
          var _r;
          let N = (_r = p.argTypes[j2]) == null ? void 0 : _r.mapping;
          return O[j2] = N && z in N ? N[z] : z, O;
        }, {}), T2 = Object.entries(S).reduce((O, [j2, z]) => {
          let N = p.argTypes[j2] || {};
          return (0, vr.includeConditionalArg)(N, S, p.globals) && (O[j2] = z), O;
        }, {}), A3 = { ...p, args: T2 }, { passArgsFirst: ge = true } = p.parameters;
        return ge ? _2(A3.args, A3) : _2(A3);
      }, fe = (0, Wr.applyHooks)(d)(br, m2), ue = (p) => {
        var T2;
        let S = p;
        if ((T2 = dr.default.FEATURES) != null && T2.argTypeTargetsV7) {
          let A3 = Y2(p);
          S = { ...p, allArgs: p.args, argsByTarget: A3, args: A3[G] || {} };
        }
        return fe(S);
      }, { play: wr } = e;
      return Object.freeze({ ...h2, moduleExport: o, originalStoryFn: _2, undecoratedStoryFn: br, unboundStoryFn: ue, applyLoaders: Se, playFunction: wr && (async (p) => {
        let S = { ...p, step: (T2, A3) => F(T2, A3, S) };
        return wr(S);
      }) });
    }
    var X = f2(require_mapValues());
    var Hr = require_dist4();
    var Ur = (init_client_logger(), __toCommonJS(client_logger_exports));
    var Sr = (e, r, t) => {
      let o = typeof e;
      switch (o) {
        case "boolean":
        case "string":
        case "number":
        case "function":
        case "symbol":
          return { name: o };
        default:
          break;
      }
      if (e) {
        if (t.has(e))
          return Ur.logger.warn(Hr.dedent`
        We've detected a cycle in arg '${r}'. Args should be JSON-serializable.

        Consider using the mapping feature or fully custom args:
        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values
        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args
      `), { name: "other", value: "cyclic object" };
        if (t.add(e), Array.isArray(e)) {
          let n = e.length > 0 ? Sr(e[0], r, new Set(t)) : { name: "other", value: "unknown" };
          return { name: "array", value: n };
        }
        let s2 = (0, X.default)(e, (n) => Sr(n, r, new Set(t)));
        return { name: "object", value: s2 };
      }
      return { name: "object", value: {} };
    };
    var fr = (e) => {
      let { id: r, argTypes: t = {}, initialArgs: o = {} } = e, s2 = (0, X.default)(o, (i2, l) => ({ name: l, type: Sr(i2, `${r}.${l}`, /* @__PURE__ */ new Set()) })), n = (0, X.default)(t, (i2, l) => ({ name: l }));
      return g(s2, n, t);
    };
    fr.secondPass = true;
    var qr = f2(require_mapValues());
    var Kr = (init_client_logger(), __toCommonJS(client_logger_exports));
    var Yr = f2(require_pickBy());
    var Jr = (e, r) => Array.isArray(r) ? r.includes(e) : e.match(r);
    var rr = (e, r, t) => !r && !t ? e : e && (0, Yr.default)(e, (o, s2) => {
      let n = o.name || s2;
      return (!r || Jr(n, r)) && (!t || !Jr(n, t));
    });
    var Be = (e, r, t) => {
      let { type: o, options: s2 } = e;
      if (!!o) {
        if (t.color && t.color.test(r)) {
          let n = o.name;
          if (n === "string")
            return { control: { type: "color" } };
          n !== "enum" && Kr.logger.warn(`Addon controls: Control of type color only supports string, received "${n}" instead`);
        }
        if (t.date && t.date.test(r))
          return { control: { type: "date" } };
        switch (o.name) {
          case "array":
            return { control: { type: "object" } };
          case "boolean":
            return { control: { type: "boolean" } };
          case "string":
            return { control: { type: "text" } };
          case "number":
            return { control: { type: "number" } };
          case "enum": {
            let { value: n } = o;
            return { control: { type: (n == null ? void 0 : n.length) <= 5 ? "radio" : "select" }, options: n };
          }
          case "function":
          case "symbol":
            return null;
          default:
            return { control: { type: s2 ? "select" : "object" } };
        }
      }
    };
    var V = (e) => {
      let { argTypes: r, parameters: { __isArgsStory: t, controls: { include: o = null, exclude: s2 = null, matchers: n = {} } = {} } } = e;
      if (!t)
        return r;
      let i2 = rr(r, o, s2), l = (0, qr.default)(i2, (a2, m2) => (a2 == null ? void 0 : a2.type) && Be(a2, m2, n));
      return g(l, i2);
    };
    V.secondPass = true;
    function L({ argTypes: e, globalTypes: r, argTypesEnhancers: t, ...o }) {
      return { ...e && { argTypes: w(e) }, ...r && { globalTypes: w(r) }, argTypesEnhancers: [...t || [], fr, V], ...o };
    }
    function ur(e) {
      return async (r, t, o) => {
        await e.reduceRight((n, i2) => async () => i2(r, n, o), async () => t(o))();
      };
    }
    function E(e, r) {
      return e.map((t) => t[r]).filter(Boolean);
    }
    function v(e, r) {
      return E(e, r).reduce((t, o) => [...t, ...o], []);
    }
    function W2(e, r) {
      return Object.assign({}, ...E(e, r));
    }
    function er(e, r) {
      return E(e, r).pop();
    }
    function gr(e) {
      let r = v(e, "argTypesEnhancers"), t = E(e, "runStep");
      return { parameters: g(...E(e, "parameters")), decorators: v(e, "decorators"), args: W2(e, "args"), argsEnhancers: v(e, "argsEnhancers"), argTypes: W2(e, "argTypes"), argTypesEnhancers: [...r.filter((o) => !o.secondPass), ...r.filter((o) => o.secondPass)], globals: W2(e, "globals"), globalTypes: W2(e, "globalTypes"), loaders: v(e, "loaders"), render: er(e, "render"), renderToDOM: er(e, "renderToDOM"), applyDecorators: er(e, "applyDecorators"), runStep: ur(t) };
    }
    var Qr = require_dist3();
    var Zr = (init_addons(), __toCommonJS(addons_exports));
    var Xr = {};
    function Re(e) {
      let r = Array.isArray(e) ? e : [e];
      Xr = gr(r);
    }
    function Ge(e, r, t = Xr, o = {}, s2) {
      var u;
      if (e === void 0)
        throw new Error("Expected a story but received undefined.");
      r.title = r.title ?? "ComposedStory";
      let n = M2(r), i2 = s2 || e.storyName || ((u = e.story) == null ? void 0 : u.name) || e.name || "unknown", l = D(i2, e, n), a2 = L({ ...t, ...o }), m2 = $(l, n, a2), d = C(t.globalTypes), c2 = (F) => {
        let P2 = { ...m2, hooks: new Zr.HooksContext(), globals: d, args: { ...m2.initialArgs, ...F } };
        return m2.unboundStoryFn(P2);
      };
      return c2.storyName = i2, c2.args = m2.initialArgs, c2.play = m2.playFunction, c2.parameters = m2.parameters, c2;
    }
    function De(e, r, t) {
      let { default: o, __esModule: s2, __namedExportsOrder: n, ...i2 } = e;
      return Object.entries(i2).reduce((a2, [m2, d]) => (0, Qr.isExportStory)(m2, o) ? Object.assign(a2, { [m2]: t(d, o, r, m2) }) : a2, {});
    }
    var Me = 1e3;
    var $e = 1e4;
    var or = class {
      constructor() {
        this.getStoriesJsonData = () => {
          let { storyIndex: r } = this;
          if (!r)
            throw new Error("getStoriesJsonData called before initialization");
          let t = this.getSetStoriesPayload(), o = ["fileName", "docsOnly", "framework", "__id", "__isArgsStory"], s2 = (0, re.default)(t.stories, (n) => {
            let { importPath: i2 } = r.entries[n.id];
            return { ...(0, hr.default)(n, ["id", "name", "title"]), importPath: i2, kind: n.title, story: n.name, parameters: { ...(0, hr.default)(n.parameters, o), fileName: i2 } };
          });
          return { v: 3, stories: s2 };
        };
        this.args = new q(), this.hooks = {}, this.processCSFFileWithCache = (0, Fr.default)(Me)(cr), this.prepareStoryWithCache = (0, Fr.default)($e)($), this.initializationPromise = new tr.SynchronousPromise((r) => {
          this.resolveInitializationPromise = r;
        });
      }
      setProjectAnnotations(r) {
        this.projectAnnotations = L(r);
        let { globals: t, globalTypes: o } = r;
        this.globals ? this.globals.set({ globals: t, globalTypes: o }) : this.globals = new K({ globals: t, globalTypes: o });
      }
      initialize({ storyIndex: r, importFn: t, cache: o = false }) {
        return this.storyIndex = new U(r), this.importFn = t, this.resolveInitializationPromise(), o ? this.cacheAllCSFFiles() : tr.SynchronousPromise.resolve();
      }
      async onStoriesChanged({ importFn: r, storyIndex: t }) {
        await this.initializationPromise, r && (this.importFn = r), t && (this.storyIndex.entries = t.entries), this.cachedCSFFiles && await this.cacheAllCSFFiles();
      }
      async storyIdToEntry(r) {
        return await this.initializationPromise, this.storyIndex.storyIdToEntry(r);
      }
      loadCSFFileByStoryId(r) {
        if (!this.storyIndex || !this.importFn)
          throw new Error("loadCSFFileByStoryId called before initialization");
        let { importPath: t, title: o } = this.storyIndex.storyIdToEntry(r);
        return this.importFn(t).then((s2) => this.processCSFFileWithCache(s2, t, o));
      }
      loadAllCSFFiles() {
        if (!this.storyIndex)
          throw new Error("loadAllCSFFiles called before initialization");
        let r = {};
        Object.entries(this.storyIndex.entries).forEach(([o, { importPath: s2 }]) => {
          r[s2] = o;
        });
        let t = Object.entries(r).map(([o, s2]) => this.loadCSFFileByStoryId(s2).then((n) => ({ importPath: o, csfFile: n })));
        return tr.SynchronousPromise.all(t).then((o) => o.reduce((s2, { importPath: n, csfFile: i2 }) => (s2[n] = i2, s2), {}));
      }
      cacheAllCSFFiles() {
        return this.initializationPromise.then(() => this.loadAllCSFFiles().then((r) => {
          this.cachedCSFFiles = r;
        }));
      }
      async loadStory({ storyId: r }) {
        await this.initializationPromise;
        let t = await this.loadCSFFileByStoryId(r);
        return this.storyFromCSFFile({ storyId: r, csfFile: t });
      }
      storyFromCSFFile({ storyId: r, csfFile: t }) {
        if (!this.projectAnnotations)
          throw new Error("storyFromCSFFile called before initialization");
        let o = t.stories[r];
        if (!o)
          throw new Error(`Didn't find '${r}' in CSF file, this is unexpected`);
        let s2 = t.meta, n = this.prepareStoryWithCache(o, s2, this.projectAnnotations);
        return this.args.setInitial(n), this.hooks[n.id] = this.hooks[n.id] || new ee.HooksContext(), n;
      }
      componentStoriesFromCSFFile({ csfFile: r }) {
        if (!this.storyIndex)
          throw new Error("componentStoriesFromCSFFile called before initialization");
        return Object.keys(this.storyIndex.entries).filter((t) => !!r.stories[t]).map((t) => this.storyFromCSFFile({ storyId: t, csfFile: r }));
      }
      async loadEntry(r) {
        let t = await this.storyIdToEntry(r), { importFn: o, storyIndex: s2 } = this;
        if (!s2 || !o)
          throw new Error("loadEntry called before initialization");
        let n = t.type === "docs" ? t.storiesImports : [], [i2, ...l] = await Promise.all([o(t.importPath), ...n.map((a2) => {
          let m2 = s2.importPathToEntry(a2);
          return this.loadCSFFileByStoryId(m2.id);
        })]);
        return { entryExports: i2, csfFiles: l };
      }
      getStoryContext(r) {
        if (!this.globals)
          throw new Error("getStoryContext called before initialization");
        return { ...r, args: this.args.get(r.id), globals: this.globals.get(), hooks: this.hooks[r.id] };
      }
      cleanupStory(r) {
        this.hooks[r.id].clean();
      }
      extract(r = { includeDocsOnly: false }) {
        if (!this.storyIndex)
          throw new Error("extract called before initialization");
        let { cachedCSFFiles: t } = this;
        if (!t)
          throw new Error("Cannot call extract() unless you call cacheAllCSFFiles() first.");
        return Object.entries(this.storyIndex.entries).reduce((o, [s2, { type: n, importPath: i2 }]) => {
          if (n === "docs")
            return o;
          let l = t[i2], a2 = this.storyFromCSFFile({ storyId: s2, csfFile: l });
          return !r.includeDocsOnly && a2.parameters.docsOnly || (o[s2] = Object.entries(a2).reduce((m2, [d, c2]) => d === "moduleExport" || typeof c2 == "function" ? m2 : Array.isArray(c2) ? Object.assign(m2, { [d]: c2.slice().sort() }) : Object.assign(m2, { [d]: c2 }), { args: a2.initialArgs })), o;
        }, {});
      }
      getSetStoriesPayload() {
        if (!this.globals)
          throw new Error("getSetStoriesPayload called before initialization");
        let r = this.extract({ includeDocsOnly: true }), t = Object.values(r).reduce((o, { title: s2 }) => (o[s2] = {}, o), {});
        return { v: 2, globals: this.globals.get(), globalParameters: {}, kindParameters: t, stories: r };
      }
      getSetIndexPayload() {
        if (!this.storyIndex)
          throw new Error("getSetIndexPayload called before initialization");
        let r = this.extract({ includeDocsOnly: true });
        return { v: 4, entries: Object.fromEntries(Object.entries(this.storyIndex.entries).map(([t, o]) => [t, r[t] ? { ...o, args: r[t].initialArgs, initialArgs: r[t].initialArgs, argTypes: r[t].argTypes, parameters: r[t].parameters } : o])) };
      }
      raw() {
        return Object.values(this.extract()).map(({ id: r }) => this.fromId(r)).filter(Boolean);
      }
      fromId(r) {
        if (!this.storyIndex)
          throw new Error("fromId called before initialization");
        if (!this.cachedCSFFiles)
          throw new Error("Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.");
        let t;
        try {
          ({ importPath: t } = this.storyIndex.storyIdToEntry(r));
        } catch {
          return null;
        }
        let o = this.cachedCSFFiles[t], s2 = this.storyFromCSFFile({ storyId: r, csfFile: o });
        return { ...s2, storyFn: (n) => {
          let i2 = { ...this.getStoryContext(s2), viewMode: "story" };
          return s2.unboundStoryFn({ ...i2, ...n });
        } };
      }
    };
    var x2 = (init_core_events(), __toCommonJS(core_events_exports));
    var y2 = (init_addons(), __toCommonJS(addons_exports));
    function te(e, r) {
      let t = y2.addons.getChannel(), [o] = t.last(`${x2.SHARED_STATE_CHANGED}-manager-${e}`) || t.last(`${x2.SHARED_STATE_SET}-manager-${e}`) || [], [s2, n] = (0, y2.useState)(o || r), i2 = (0, y2.useMemo)(() => ({ [`${x2.SHARED_STATE_CHANGED}-manager-${e}`]: (a2) => n(a2), [`${x2.SHARED_STATE_SET}-manager-${e}`]: (a2) => n(a2) }), [e]), l = (0, y2.useChannel)(i2, [e]);
      return (0, y2.useEffect)(() => {
        r !== void 0 && !o && l(`${x2.SHARED_STATE_SET}-client-${e}`, r);
      }, [e]), [s2, (a2) => {
        n(a2), l(`${x2.SHARED_STATE_CHANGED}-client-${e}`, a2);
      }];
    }
    function Ve(e, r) {
      return te(e, r);
    }
    var nr = f2(require_slash());
    var ne = require_dist4();
    var se = (init_client_logger(), __toCommonJS(client_logger_exports));
    var Le = (e) => {
      let r = [...e], t = r[r.length - 1], o = t.indexOf("."), s2 = o > 0 ? t.substr(0, o) : t;
      r[r.length - 1] = s2;
      let [n, ...i2] = r;
      return n === "" && (r = i2), r;
    };
    var ve = /^index$/i;
    var We = (e) => {
      let r;
      return e.filter((t, o) => o === e.length - 1 && (t === r || ve.test(t)) ? false : (r = t, true));
    };
    function oe(e) {
      let r = new RegExp("/{1,}", "g");
      return e.join("/").replace(r, "/");
    }
    var ie = (e, r, t) => {
      let { directory: o, importPathMatcher: s2, titlePrefix: n = "" } = r || {};
      typeof e == "number" && se.once.warn(ne.dedent`
      CSF Auto-title received a numeric fileName. This typically happens when
      webpack is mis-configured in production mode. To force webpack to produce
      filenames, set optimization.moduleIds = "named" in your webpack config.
    `);
      let i2 = (0, nr.default)(String(e));
      if (s2.exec(i2)) {
        if (!t) {
          let l = i2.replace(o, ""), m2 = (0, nr.default)(oe([n, l])).split("/");
          return m2 = Le(m2), m2 = We(m2), m2.join("/");
        }
        return n ? (0, nr.default)(oe([n, t])) : t;
      }
    };
    var He = (e, r, t) => {
      for (let o = 0; o < r.length; o += 1) {
        let s2 = ie(e, r[o], t);
        if (s2)
          return s2;
      }
      return t || void 0;
    };
    var ye = require_dist4();
    var ae = /\s*\/\s*/;
    var le = (e = {}) => (r, t) => {
      if (r.title === t.title && !e.includeNames)
        return 0;
      let o = e.method || "configure", s2 = e.order || [], n = r.title.trim().split(ae), i2 = t.title.trim().split(ae);
      e.includeNames && (n.push(r.name), i2.push(t.name));
      let l = 0;
      for (; n[l] || i2[l]; ) {
        if (!n[l])
          return -1;
        if (!i2[l])
          return 1;
        let a2 = n[l], m2 = i2[l];
        if (a2 !== m2) {
          let c2 = s2.indexOf(a2), u = s2.indexOf(m2), F = s2.indexOf("*");
          return c2 !== -1 || u !== -1 ? (c2 === -1 && (F !== -1 ? c2 = F : c2 = s2.length), u === -1 && (F !== -1 ? u = F : u = s2.length), c2 - u) : o === "configure" ? 0 : a2.localeCompare(m2, e.locales ? e.locales : void 0, { numeric: true, sensitivity: "accent" });
        }
        let d = s2.indexOf(a2);
        d === -1 && (d = s2.indexOf("*")), s2 = d !== -1 && Array.isArray(s2[d + 1]) ? s2[d + 1] : [], l += 1;
      }
      return 0;
    };
    var ce = (e, r, t) => {
      if (r) {
        let o;
        typeof r == "function" ? o = r : o = le(r), e.sort(o);
      } else
        e.sort((o, s2) => t.indexOf(o.importPath) - t.indexOf(s2.importPath));
      return e;
    };
    var Ue = (e, r, t) => {
      try {
        return ce(e, r, t);
      } catch (o) {
        throw new Error(ye.dedent`
    Error sorting stories with sort parameter ${r}:

    > ${o.message}
    
    Are you using a V6-style sort function in V7 mode?

    More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#v7-style-story-sort
  `);
      }
    };
    var me = (e) => {
      let { id: r, title: t, name: o, parameters: s2, type: n } = e;
      return { id: r, title: t, name: o, importPath: s2.fileName, type: n };
    };
    var Je = (e, r, t) => {
      if (r && typeof r == "function")
        return e.sort(r), e.map((s2) => me(s2[1]));
      let o = e.map((s2) => me(s2[1]));
      return ce(o, r, t);
    };
  }
});

// node_modules/esutils/lib/ast.js
var require_ast = __commonJS({
  "node_modules/esutils/lib/ast.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      function isExpression(node) {
        if (node == null) {
          return false;
        }
        switch (node.type) {
          case "ArrayExpression":
          case "AssignmentExpression":
          case "BinaryExpression":
          case "CallExpression":
          case "ConditionalExpression":
          case "FunctionExpression":
          case "Identifier":
          case "Literal":
          case "LogicalExpression":
          case "MemberExpression":
          case "NewExpression":
          case "ObjectExpression":
          case "SequenceExpression":
          case "ThisExpression":
          case "UnaryExpression":
          case "UpdateExpression":
            return true;
        }
        return false;
      }
      function isIterationStatement(node) {
        if (node == null) {
          return false;
        }
        switch (node.type) {
          case "DoWhileStatement":
          case "ForInStatement":
          case "ForStatement":
          case "WhileStatement":
            return true;
        }
        return false;
      }
      function isStatement(node) {
        if (node == null) {
          return false;
        }
        switch (node.type) {
          case "BlockStatement":
          case "BreakStatement":
          case "ContinueStatement":
          case "DebuggerStatement":
          case "DoWhileStatement":
          case "EmptyStatement":
          case "ExpressionStatement":
          case "ForInStatement":
          case "ForStatement":
          case "IfStatement":
          case "LabeledStatement":
          case "ReturnStatement":
          case "SwitchStatement":
          case "ThrowStatement":
          case "TryStatement":
          case "VariableDeclaration":
          case "WhileStatement":
          case "WithStatement":
            return true;
        }
        return false;
      }
      function isSourceElement(node) {
        return isStatement(node) || node != null && node.type === "FunctionDeclaration";
      }
      function trailingStatement(node) {
        switch (node.type) {
          case "IfStatement":
            if (node.alternate != null) {
              return node.alternate;
            }
            return node.consequent;
          case "LabeledStatement":
          case "ForStatement":
          case "ForInStatement":
          case "WhileStatement":
          case "WithStatement":
            return node.body;
        }
        return null;
      }
      function isProblematicIfStatement(node) {
        var current;
        if (node.type !== "IfStatement") {
          return false;
        }
        if (node.alternate == null) {
          return false;
        }
        current = node.consequent;
        do {
          if (current.type === "IfStatement") {
            if (current.alternate == null) {
              return true;
            }
          }
          current = trailingStatement(current);
        } while (current);
        return false;
      }
      module.exports = {
        isExpression,
        isStatement,
        isIterationStatement,
        isSourceElement,
        isProblematicIfStatement,
        trailingStatement
      };
    })();
  }
});

// node_modules/esutils/lib/code.js
var require_code = __commonJS({
  "node_modules/esutils/lib/code.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;
      ES5Regex = {
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
      };
      ES6Regex = {
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
      };
      function isDecimalDigit(ch2) {
        return 48 <= ch2 && ch2 <= 57;
      }
      function isHexDigit(ch2) {
        return 48 <= ch2 && ch2 <= 57 || 97 <= ch2 && ch2 <= 102 || 65 <= ch2 && ch2 <= 70;
      }
      function isOctalDigit(ch2) {
        return ch2 >= 48 && ch2 <= 55;
      }
      NON_ASCII_WHITESPACES = [
        5760,
        8192,
        8193,
        8194,
        8195,
        8196,
        8197,
        8198,
        8199,
        8200,
        8201,
        8202,
        8239,
        8287,
        12288,
        65279
      ];
      function isWhiteSpace(ch2) {
        return ch2 === 32 || ch2 === 9 || ch2 === 11 || ch2 === 12 || ch2 === 160 || ch2 >= 5760 && NON_ASCII_WHITESPACES.indexOf(ch2) >= 0;
      }
      function isLineTerminator(ch2) {
        return ch2 === 10 || ch2 === 13 || ch2 === 8232 || ch2 === 8233;
      }
      function fromCodePoint(cp) {
        if (cp <= 65535) {
          return String.fromCharCode(cp);
        }
        var cu1 = String.fromCharCode(Math.floor((cp - 65536) / 1024) + 55296);
        var cu2 = String.fromCharCode((cp - 65536) % 1024 + 56320);
        return cu1 + cu2;
      }
      IDENTIFIER_START = new Array(128);
      for (ch = 0; ch < 128; ++ch) {
        IDENTIFIER_START[ch] = ch >= 97 && ch <= 122 || ch >= 65 && ch <= 90 || ch === 36 || ch === 95;
      }
      IDENTIFIER_PART = new Array(128);
      for (ch = 0; ch < 128; ++ch) {
        IDENTIFIER_PART[ch] = ch >= 97 && ch <= 122 || ch >= 65 && ch <= 90 || ch >= 48 && ch <= 57 || ch === 36 || ch === 95;
      }
      function isIdentifierStartES5(ch2) {
        return ch2 < 128 ? IDENTIFIER_START[ch2] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch2));
      }
      function isIdentifierPartES5(ch2) {
        return ch2 < 128 ? IDENTIFIER_PART[ch2] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch2));
      }
      function isIdentifierStartES6(ch2) {
        return ch2 < 128 ? IDENTIFIER_START[ch2] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch2));
      }
      function isIdentifierPartES6(ch2) {
        return ch2 < 128 ? IDENTIFIER_PART[ch2] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch2));
      }
      module.exports = {
        isDecimalDigit,
        isHexDigit,
        isOctalDigit,
        isWhiteSpace,
        isLineTerminator,
        isIdentifierStartES5,
        isIdentifierPartES5,
        isIdentifierStartES6,
        isIdentifierPartES6
      };
    })();
  }
});

// node_modules/esutils/lib/keyword.js
var require_keyword = __commonJS({
  "node_modules/esutils/lib/keyword.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      var code = require_code();
      function isStrictModeReservedWordES6(id) {
        switch (id) {
          case "implements":
          case "interface":
          case "package":
          case "private":
          case "protected":
          case "public":
          case "static":
          case "let":
            return true;
          default:
            return false;
        }
      }
      function isKeywordES5(id, strict) {
        if (!strict && id === "yield") {
          return false;
        }
        return isKeywordES6(id, strict);
      }
      function isKeywordES6(id, strict) {
        if (strict && isStrictModeReservedWordES6(id)) {
          return true;
        }
        switch (id.length) {
          case 2:
            return id === "if" || id === "in" || id === "do";
          case 3:
            return id === "var" || id === "for" || id === "new" || id === "try";
          case 4:
            return id === "this" || id === "else" || id === "case" || id === "void" || id === "with" || id === "enum";
          case 5:
            return id === "while" || id === "break" || id === "catch" || id === "throw" || id === "const" || id === "yield" || id === "class" || id === "super";
          case 6:
            return id === "return" || id === "typeof" || id === "delete" || id === "switch" || id === "export" || id === "import";
          case 7:
            return id === "default" || id === "finally" || id === "extends";
          case 8:
            return id === "function" || id === "continue" || id === "debugger";
          case 10:
            return id === "instanceof";
          default:
            return false;
        }
      }
      function isReservedWordES5(id, strict) {
        return id === "null" || id === "true" || id === "false" || isKeywordES5(id, strict);
      }
      function isReservedWordES6(id, strict) {
        return id === "null" || id === "true" || id === "false" || isKeywordES6(id, strict);
      }
      function isRestrictedWord(id) {
        return id === "eval" || id === "arguments";
      }
      function isIdentifierNameES5(id) {
        var i2, iz, ch;
        if (id.length === 0) {
          return false;
        }
        ch = id.charCodeAt(0);
        if (!code.isIdentifierStartES5(ch)) {
          return false;
        }
        for (i2 = 1, iz = id.length; i2 < iz; ++i2) {
          ch = id.charCodeAt(i2);
          if (!code.isIdentifierPartES5(ch)) {
            return false;
          }
        }
        return true;
      }
      function decodeUtf16(lead, trail) {
        return (lead - 55296) * 1024 + (trail - 56320) + 65536;
      }
      function isIdentifierNameES6(id) {
        var i2, iz, ch, lowCh, check;
        if (id.length === 0) {
          return false;
        }
        check = code.isIdentifierStartES6;
        for (i2 = 0, iz = id.length; i2 < iz; ++i2) {
          ch = id.charCodeAt(i2);
          if (55296 <= ch && ch <= 56319) {
            ++i2;
            if (i2 >= iz) {
              return false;
            }
            lowCh = id.charCodeAt(i2);
            if (!(56320 <= lowCh && lowCh <= 57343)) {
              return false;
            }
            ch = decodeUtf16(ch, lowCh);
          }
          if (!check(ch)) {
            return false;
          }
          check = code.isIdentifierPartES6;
        }
        return true;
      }
      function isIdentifierES5(id, strict) {
        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
      }
      function isIdentifierES6(id, strict) {
        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
      }
      module.exports = {
        isKeywordES5,
        isKeywordES6,
        isReservedWordES5,
        isReservedWordES6,
        isRestrictedWord,
        isIdentifierNameES5,
        isIdentifierNameES6,
        isIdentifierES5,
        isIdentifierES6
      };
    })();
  }
});

// node_modules/esutils/lib/utils.js
var require_utils = __commonJS({
  "node_modules/esutils/lib/utils.js"(exports) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      exports.ast = require_ast();
      exports.code = require_code();
      exports.keyword = require_keyword();
    })();
  }
});

// node_modules/doctrine/package.json
var require_package = __commonJS({
  "node_modules/doctrine/package.json"(exports, module) {
    module.exports = {
      name: "doctrine",
      description: "JSDoc parser",
      homepage: "https://github.com/eslint/doctrine",
      main: "lib/doctrine.js",
      version: "3.0.0",
      engines: {
        node: ">=6.0.0"
      },
      directories: {
        lib: "./lib"
      },
      files: [
        "lib"
      ],
      maintainers: [
        {
          name: "Nicholas C. Zakas",
          email: "nicholas+npm@nczconsulting.com",
          web: "https://www.nczonline.net"
        },
        {
          name: "Yusuke Suzuki",
          email: "utatane.tea@gmail.com",
          web: "https://github.com/Constellation"
        }
      ],
      repository: "eslint/doctrine",
      devDependencies: {
        coveralls: "^3.0.1",
        dateformat: "^1.0.11",
        eslint: "^1.10.3",
        "eslint-release": "^1.0.0",
        linefix: "^0.1.1",
        mocha: "^3.4.2",
        "npm-license": "^0.3.1",
        nyc: "^10.3.2",
        semver: "^5.0.3",
        shelljs: "^0.5.3",
        "shelljs-nodecli": "^0.1.1",
        should: "^5.0.1"
      },
      license: "Apache-2.0",
      scripts: {
        pretest: "npm run lint",
        test: "nyc mocha",
        coveralls: "nyc report --reporter=text-lcov | coveralls",
        lint: "eslint lib/",
        "generate-release": "eslint-generate-release",
        "generate-alpharelease": "eslint-generate-prerelease alpha",
        "generate-betarelease": "eslint-generate-prerelease beta",
        "generate-rcrelease": "eslint-generate-prerelease rc",
        "publish-release": "eslint-publish-release"
      },
      dependencies: {
        esutils: "^2.0.2"
      }
    };
  }
});

// node_modules/browser-assert/lib/assert.js
var require_assert = __commonJS({
  "node_modules/browser-assert/lib/assert.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    function assert(expr, message) {
      if (!Boolean(expr)) {
        throw new Error(message || "unknown assertion error");
      }
    }
    module.exports = assert;
  }
});

// node_modules/doctrine/lib/utility.js
var require_utility = __commonJS({
  "node_modules/doctrine/lib/utility.js"(exports) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      var VERSION;
      VERSION = require_package().version;
      exports.VERSION = VERSION;
      function DoctrineError(message) {
        this.name = "DoctrineError";
        this.message = message;
      }
      DoctrineError.prototype = function() {
        var Middle = function() {
        };
        Middle.prototype = Error.prototype;
        return new Middle();
      }();
      DoctrineError.prototype.constructor = DoctrineError;
      exports.DoctrineError = DoctrineError;
      function throwError(message) {
        throw new DoctrineError(message);
      }
      exports.throwError = throwError;
      exports.assert = require_assert();
    })();
  }
});

// node_modules/doctrine/lib/typed.js
var require_typed = __commonJS({
  "node_modules/doctrine/lib/typed.js"(exports) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      var Syntax, Token, source, length, index, previous, token, value, esutils, utility, rangeOffset, addRange;
      esutils = require_utils();
      utility = require_utility();
      Syntax = {
        NullableLiteral: "NullableLiteral",
        AllLiteral: "AllLiteral",
        NullLiteral: "NullLiteral",
        UndefinedLiteral: "UndefinedLiteral",
        VoidLiteral: "VoidLiteral",
        UnionType: "UnionType",
        ArrayType: "ArrayType",
        RecordType: "RecordType",
        FieldType: "FieldType",
        FunctionType: "FunctionType",
        ParameterType: "ParameterType",
        RestType: "RestType",
        NonNullableType: "NonNullableType",
        OptionalType: "OptionalType",
        NullableType: "NullableType",
        NameExpression: "NameExpression",
        TypeApplication: "TypeApplication",
        StringLiteralType: "StringLiteralType",
        NumericLiteralType: "NumericLiteralType",
        BooleanLiteralType: "BooleanLiteralType"
      };
      Token = {
        ILLEGAL: 0,
        DOT_LT: 1,
        REST: 2,
        LT: 3,
        GT: 4,
        LPAREN: 5,
        RPAREN: 6,
        LBRACE: 7,
        RBRACE: 8,
        LBRACK: 9,
        RBRACK: 10,
        COMMA: 11,
        COLON: 12,
        STAR: 13,
        PIPE: 14,
        QUESTION: 15,
        BANG: 16,
        EQUAL: 17,
        NAME: 18,
        STRING: 19,
        NUMBER: 20,
        EOF: 21
      };
      function isTypeName(ch) {
        return "><(){}[],:*|?!=".indexOf(String.fromCharCode(ch)) === -1 && !esutils.code.isWhiteSpace(ch) && !esutils.code.isLineTerminator(ch);
      }
      function Context(previous2, index2, token2, value2) {
        this._previous = previous2;
        this._index = index2;
        this._token = token2;
        this._value = value2;
      }
      Context.prototype.restore = function() {
        previous = this._previous;
        index = this._index;
        token = this._token;
        value = this._value;
      };
      Context.save = function() {
        return new Context(previous, index, token, value);
      };
      function maybeAddRange(node, range) {
        if (addRange) {
          node.range = [range[0] + rangeOffset, range[1] + rangeOffset];
        }
        return node;
      }
      function advance() {
        var ch = source.charAt(index);
        index += 1;
        return ch;
      }
      function scanHexEscape(prefix) {
        var i2, len, ch, code = 0;
        len = prefix === "u" ? 4 : 2;
        for (i2 = 0; i2 < len; ++i2) {
          if (index < length && esutils.code.isHexDigit(source.charCodeAt(index))) {
            ch = advance();
            code = code * 16 + "0123456789abcdef".indexOf(ch.toLowerCase());
          } else {
            return "";
          }
        }
        return String.fromCharCode(code);
      }
      function scanString() {
        var str2 = "", quote, ch, code, unescaped, restore;
        quote = source.charAt(index);
        ++index;
        while (index < length) {
          ch = advance();
          if (ch === quote) {
            quote = "";
            break;
          } else if (ch === "\\") {
            ch = advance();
            if (!esutils.code.isLineTerminator(ch.charCodeAt(0))) {
              switch (ch) {
                case "n":
                  str2 += "\n";
                  break;
                case "r":
                  str2 += "\r";
                  break;
                case "t":
                  str2 += "	";
                  break;
                case "u":
                case "x":
                  restore = index;
                  unescaped = scanHexEscape(ch);
                  if (unescaped) {
                    str2 += unescaped;
                  } else {
                    index = restore;
                    str2 += ch;
                  }
                  break;
                case "b":
                  str2 += "\b";
                  break;
                case "f":
                  str2 += "\f";
                  break;
                case "v":
                  str2 += "\v";
                  break;
                default:
                  if (esutils.code.isOctalDigit(ch.charCodeAt(0))) {
                    code = "01234567".indexOf(ch);
                    if (index < length && esutils.code.isOctalDigit(source.charCodeAt(index))) {
                      code = code * 8 + "01234567".indexOf(advance());
                      if ("0123".indexOf(ch) >= 0 && index < length && esutils.code.isOctalDigit(source.charCodeAt(index))) {
                        code = code * 8 + "01234567".indexOf(advance());
                      }
                    }
                    str2 += String.fromCharCode(code);
                  } else {
                    str2 += ch;
                  }
                  break;
              }
            } else {
              if (ch === "\r" && source.charCodeAt(index) === 10) {
                ++index;
              }
            }
          } else if (esutils.code.isLineTerminator(ch.charCodeAt(0))) {
            break;
          } else {
            str2 += ch;
          }
        }
        if (quote !== "") {
          utility.throwError("unexpected quote");
        }
        value = str2;
        return Token.STRING;
      }
      function scanNumber() {
        var number, ch;
        number = "";
        ch = source.charCodeAt(index);
        if (ch !== 46) {
          number = advance();
          ch = source.charCodeAt(index);
          if (number === "0") {
            if (ch === 120 || ch === 88) {
              number += advance();
              while (index < length) {
                ch = source.charCodeAt(index);
                if (!esutils.code.isHexDigit(ch)) {
                  break;
                }
                number += advance();
              }
              if (number.length <= 2) {
                utility.throwError("unexpected token");
              }
              if (index < length) {
                ch = source.charCodeAt(index);
                if (esutils.code.isIdentifierStartES5(ch)) {
                  utility.throwError("unexpected token");
                }
              }
              value = parseInt(number, 16);
              return Token.NUMBER;
            }
            if (esutils.code.isOctalDigit(ch)) {
              number += advance();
              while (index < length) {
                ch = source.charCodeAt(index);
                if (!esutils.code.isOctalDigit(ch)) {
                  break;
                }
                number += advance();
              }
              if (index < length) {
                ch = source.charCodeAt(index);
                if (esutils.code.isIdentifierStartES5(ch) || esutils.code.isDecimalDigit(ch)) {
                  utility.throwError("unexpected token");
                }
              }
              value = parseInt(number, 8);
              return Token.NUMBER;
            }
            if (esutils.code.isDecimalDigit(ch)) {
              utility.throwError("unexpected token");
            }
          }
          while (index < length) {
            ch = source.charCodeAt(index);
            if (!esutils.code.isDecimalDigit(ch)) {
              break;
            }
            number += advance();
          }
        }
        if (ch === 46) {
          number += advance();
          while (index < length) {
            ch = source.charCodeAt(index);
            if (!esutils.code.isDecimalDigit(ch)) {
              break;
            }
            number += advance();
          }
        }
        if (ch === 101 || ch === 69) {
          number += advance();
          ch = source.charCodeAt(index);
          if (ch === 43 || ch === 45) {
            number += advance();
          }
          ch = source.charCodeAt(index);
          if (esutils.code.isDecimalDigit(ch)) {
            number += advance();
            while (index < length) {
              ch = source.charCodeAt(index);
              if (!esutils.code.isDecimalDigit(ch)) {
                break;
              }
              number += advance();
            }
          } else {
            utility.throwError("unexpected token");
          }
        }
        if (index < length) {
          ch = source.charCodeAt(index);
          if (esutils.code.isIdentifierStartES5(ch)) {
            utility.throwError("unexpected token");
          }
        }
        value = parseFloat(number);
        return Token.NUMBER;
      }
      function scanTypeName() {
        var ch, ch2;
        value = advance();
        while (index < length && isTypeName(source.charCodeAt(index))) {
          ch = source.charCodeAt(index);
          if (ch === 46) {
            if (index + 1 >= length) {
              return Token.ILLEGAL;
            }
            ch2 = source.charCodeAt(index + 1);
            if (ch2 === 60) {
              break;
            }
          }
          value += advance();
        }
        return Token.NAME;
      }
      function next() {
        var ch;
        previous = index;
        while (index < length && esutils.code.isWhiteSpace(source.charCodeAt(index))) {
          advance();
        }
        if (index >= length) {
          token = Token.EOF;
          return token;
        }
        ch = source.charCodeAt(index);
        switch (ch) {
          case 39:
          case 34:
            token = scanString();
            return token;
          case 58:
            advance();
            token = Token.COLON;
            return token;
          case 44:
            advance();
            token = Token.COMMA;
            return token;
          case 40:
            advance();
            token = Token.LPAREN;
            return token;
          case 41:
            advance();
            token = Token.RPAREN;
            return token;
          case 91:
            advance();
            token = Token.LBRACK;
            return token;
          case 93:
            advance();
            token = Token.RBRACK;
            return token;
          case 123:
            advance();
            token = Token.LBRACE;
            return token;
          case 125:
            advance();
            token = Token.RBRACE;
            return token;
          case 46:
            if (index + 1 < length) {
              ch = source.charCodeAt(index + 1);
              if (ch === 60) {
                advance();
                advance();
                token = Token.DOT_LT;
                return token;
              }
              if (ch === 46 && index + 2 < length && source.charCodeAt(index + 2) === 46) {
                advance();
                advance();
                advance();
                token = Token.REST;
                return token;
              }
              if (esutils.code.isDecimalDigit(ch)) {
                token = scanNumber();
                return token;
              }
            }
            token = Token.ILLEGAL;
            return token;
          case 60:
            advance();
            token = Token.LT;
            return token;
          case 62:
            advance();
            token = Token.GT;
            return token;
          case 42:
            advance();
            token = Token.STAR;
            return token;
          case 124:
            advance();
            token = Token.PIPE;
            return token;
          case 63:
            advance();
            token = Token.QUESTION;
            return token;
          case 33:
            advance();
            token = Token.BANG;
            return token;
          case 61:
            advance();
            token = Token.EQUAL;
            return token;
          case 45:
            token = scanNumber();
            return token;
          default:
            if (esutils.code.isDecimalDigit(ch)) {
              token = scanNumber();
              return token;
            }
            utility.assert(isTypeName(ch));
            token = scanTypeName();
            return token;
        }
      }
      function consume(target, text) {
        utility.assert(token === target, text || "consumed token not matched");
        next();
      }
      function expect(target, message) {
        if (token !== target) {
          utility.throwError(message || "unexpected token");
        }
        next();
      }
      function parseUnionType() {
        var elements, startIndex = index - 1;
        consume(Token.LPAREN, "UnionType should start with (");
        elements = [];
        if (token !== Token.RPAREN) {
          while (true) {
            elements.push(parseTypeExpression());
            if (token === Token.RPAREN) {
              break;
            }
            expect(Token.PIPE);
          }
        }
        consume(Token.RPAREN, "UnionType should end with )");
        return maybeAddRange({
          type: Syntax.UnionType,
          elements
        }, [startIndex, previous]);
      }
      function parseArrayType() {
        var elements, startIndex = index - 1, restStartIndex;
        consume(Token.LBRACK, "ArrayType should start with [");
        elements = [];
        while (token !== Token.RBRACK) {
          if (token === Token.REST) {
            restStartIndex = index - 3;
            consume(Token.REST);
            elements.push(maybeAddRange({
              type: Syntax.RestType,
              expression: parseTypeExpression()
            }, [restStartIndex, previous]));
            break;
          } else {
            elements.push(parseTypeExpression());
          }
          if (token !== Token.RBRACK) {
            expect(Token.COMMA);
          }
        }
        expect(Token.RBRACK);
        return maybeAddRange({
          type: Syntax.ArrayType,
          elements
        }, [startIndex, previous]);
      }
      function parseFieldName() {
        var v = value;
        if (token === Token.NAME || token === Token.STRING) {
          next();
          return v;
        }
        if (token === Token.NUMBER) {
          consume(Token.NUMBER);
          return String(v);
        }
        utility.throwError("unexpected token");
      }
      function parseFieldType() {
        var key, rangeStart = previous;
        key = parseFieldName();
        if (token === Token.COLON) {
          consume(Token.COLON);
          return maybeAddRange({
            type: Syntax.FieldType,
            key,
            value: parseTypeExpression()
          }, [rangeStart, previous]);
        }
        return maybeAddRange({
          type: Syntax.FieldType,
          key,
          value: null
        }, [rangeStart, previous]);
      }
      function parseRecordType() {
        var fields, rangeStart = index - 1, rangeEnd;
        consume(Token.LBRACE, "RecordType should start with {");
        fields = [];
        if (token === Token.COMMA) {
          consume(Token.COMMA);
        } else {
          while (token !== Token.RBRACE) {
            fields.push(parseFieldType());
            if (token !== Token.RBRACE) {
              expect(Token.COMMA);
            }
          }
        }
        rangeEnd = index;
        expect(Token.RBRACE);
        return maybeAddRange({
          type: Syntax.RecordType,
          fields
        }, [rangeStart, rangeEnd]);
      }
      function parseNameExpression() {
        var name = value, rangeStart = index - name.length;
        expect(Token.NAME);
        if (token === Token.COLON && (name === "module" || name === "external" || name === "event")) {
          consume(Token.COLON);
          name += ":" + value;
          expect(Token.NAME);
        }
        return maybeAddRange({
          type: Syntax.NameExpression,
          name
        }, [rangeStart, previous]);
      }
      function parseTypeExpressionList() {
        var elements = [];
        elements.push(parseTop());
        while (token === Token.COMMA) {
          consume(Token.COMMA);
          elements.push(parseTop());
        }
        return elements;
      }
      function parseTypeName() {
        var expr, applications, startIndex = index - value.length;
        expr = parseNameExpression();
        if (token === Token.DOT_LT || token === Token.LT) {
          next();
          applications = parseTypeExpressionList();
          expect(Token.GT);
          return maybeAddRange({
            type: Syntax.TypeApplication,
            expression: expr,
            applications
          }, [startIndex, previous]);
        }
        return expr;
      }
      function parseResultType() {
        consume(Token.COLON, "ResultType should start with :");
        if (token === Token.NAME && value === "void") {
          consume(Token.NAME);
          return {
            type: Syntax.VoidLiteral
          };
        }
        return parseTypeExpression();
      }
      function parseParametersType() {
        var params = [], optionalSequence = false, expr, rest = false, startIndex, restStartIndex = index - 3, nameStartIndex;
        while (token !== Token.RPAREN) {
          if (token === Token.REST) {
            consume(Token.REST);
            rest = true;
          }
          startIndex = previous;
          expr = parseTypeExpression();
          if (expr.type === Syntax.NameExpression && token === Token.COLON) {
            nameStartIndex = previous - expr.name.length;
            consume(Token.COLON);
            expr = maybeAddRange({
              type: Syntax.ParameterType,
              name: expr.name,
              expression: parseTypeExpression()
            }, [nameStartIndex, previous]);
          }
          if (token === Token.EQUAL) {
            consume(Token.EQUAL);
            expr = maybeAddRange({
              type: Syntax.OptionalType,
              expression: expr
            }, [startIndex, previous]);
            optionalSequence = true;
          } else {
            if (optionalSequence) {
              utility.throwError("unexpected token");
            }
          }
          if (rest) {
            expr = maybeAddRange({
              type: Syntax.RestType,
              expression: expr
            }, [restStartIndex, previous]);
          }
          params.push(expr);
          if (token !== Token.RPAREN) {
            expect(Token.COMMA);
          }
        }
        return params;
      }
      function parseFunctionType() {
        var isNew, thisBinding, params, result, fnType, startIndex = index - value.length;
        utility.assert(token === Token.NAME && value === "function", "FunctionType should start with 'function'");
        consume(Token.NAME);
        expect(Token.LPAREN);
        isNew = false;
        params = [];
        thisBinding = null;
        if (token !== Token.RPAREN) {
          if (token === Token.NAME && (value === "this" || value === "new")) {
            isNew = value === "new";
            consume(Token.NAME);
            expect(Token.COLON);
            thisBinding = parseTypeName();
            if (token === Token.COMMA) {
              consume(Token.COMMA);
              params = parseParametersType();
            }
          } else {
            params = parseParametersType();
          }
        }
        expect(Token.RPAREN);
        result = null;
        if (token === Token.COLON) {
          result = parseResultType();
        }
        fnType = maybeAddRange({
          type: Syntax.FunctionType,
          params,
          result
        }, [startIndex, previous]);
        if (thisBinding) {
          fnType["this"] = thisBinding;
          if (isNew) {
            fnType["new"] = true;
          }
        }
        return fnType;
      }
      function parseBasicTypeExpression() {
        var context, startIndex;
        switch (token) {
          case Token.STAR:
            consume(Token.STAR);
            return maybeAddRange({
              type: Syntax.AllLiteral
            }, [previous - 1, previous]);
          case Token.LPAREN:
            return parseUnionType();
          case Token.LBRACK:
            return parseArrayType();
          case Token.LBRACE:
            return parseRecordType();
          case Token.NAME:
            startIndex = index - value.length;
            if (value === "null") {
              consume(Token.NAME);
              return maybeAddRange({
                type: Syntax.NullLiteral
              }, [startIndex, previous]);
            }
            if (value === "undefined") {
              consume(Token.NAME);
              return maybeAddRange({
                type: Syntax.UndefinedLiteral
              }, [startIndex, previous]);
            }
            if (value === "true" || value === "false") {
              consume(Token.NAME);
              return maybeAddRange({
                type: Syntax.BooleanLiteralType,
                value: value === "true"
              }, [startIndex, previous]);
            }
            context = Context.save();
            if (value === "function") {
              try {
                return parseFunctionType();
              } catch (e) {
                context.restore();
              }
            }
            return parseTypeName();
          case Token.STRING:
            next();
            return maybeAddRange({
              type: Syntax.StringLiteralType,
              value
            }, [previous - value.length - 2, previous]);
          case Token.NUMBER:
            next();
            return maybeAddRange({
              type: Syntax.NumericLiteralType,
              value
            }, [previous - String(value).length, previous]);
          default:
            utility.throwError("unexpected token");
        }
      }
      function parseTypeExpression() {
        var expr, rangeStart;
        if (token === Token.QUESTION) {
          rangeStart = index - 1;
          consume(Token.QUESTION);
          if (token === Token.COMMA || token === Token.EQUAL || token === Token.RBRACE || token === Token.RPAREN || token === Token.PIPE || token === Token.EOF || token === Token.RBRACK || token === Token.GT) {
            return maybeAddRange({
              type: Syntax.NullableLiteral
            }, [rangeStart, previous]);
          }
          return maybeAddRange({
            type: Syntax.NullableType,
            expression: parseBasicTypeExpression(),
            prefix: true
          }, [rangeStart, previous]);
        } else if (token === Token.BANG) {
          rangeStart = index - 1;
          consume(Token.BANG);
          return maybeAddRange({
            type: Syntax.NonNullableType,
            expression: parseBasicTypeExpression(),
            prefix: true
          }, [rangeStart, previous]);
        } else {
          rangeStart = previous;
        }
        expr = parseBasicTypeExpression();
        if (token === Token.BANG) {
          consume(Token.BANG);
          return maybeAddRange({
            type: Syntax.NonNullableType,
            expression: expr,
            prefix: false
          }, [rangeStart, previous]);
        }
        if (token === Token.QUESTION) {
          consume(Token.QUESTION);
          return maybeAddRange({
            type: Syntax.NullableType,
            expression: expr,
            prefix: false
          }, [rangeStart, previous]);
        }
        if (token === Token.LBRACK) {
          consume(Token.LBRACK);
          expect(Token.RBRACK, "expected an array-style type declaration (" + value + "[])");
          return maybeAddRange({
            type: Syntax.TypeApplication,
            expression: maybeAddRange({
              type: Syntax.NameExpression,
              name: "Array"
            }, [rangeStart, previous]),
            applications: [expr]
          }, [rangeStart, previous]);
        }
        return expr;
      }
      function parseTop() {
        var expr, elements;
        expr = parseTypeExpression();
        if (token !== Token.PIPE) {
          return expr;
        }
        elements = [expr];
        consume(Token.PIPE);
        while (true) {
          elements.push(parseTypeExpression());
          if (token !== Token.PIPE) {
            break;
          }
          consume(Token.PIPE);
        }
        return maybeAddRange({
          type: Syntax.UnionType,
          elements
        }, [0, index]);
      }
      function parseTopParamType() {
        var expr;
        if (token === Token.REST) {
          consume(Token.REST);
          return maybeAddRange({
            type: Syntax.RestType,
            expression: parseTop()
          }, [0, index]);
        }
        expr = parseTop();
        if (token === Token.EQUAL) {
          consume(Token.EQUAL);
          return maybeAddRange({
            type: Syntax.OptionalType,
            expression: expr
          }, [0, index]);
        }
        return expr;
      }
      function parseType(src, opt) {
        var expr;
        source = src;
        length = source.length;
        index = 0;
        previous = 0;
        addRange = opt && opt.range;
        rangeOffset = opt && opt.startIndex || 0;
        next();
        expr = parseTop();
        if (opt && opt.midstream) {
          return {
            expression: expr,
            index: previous
          };
        }
        if (token !== Token.EOF) {
          utility.throwError("not reach to EOF");
        }
        return expr;
      }
      function parseParamType(src, opt) {
        var expr;
        source = src;
        length = source.length;
        index = 0;
        previous = 0;
        addRange = opt && opt.range;
        rangeOffset = opt && opt.startIndex || 0;
        next();
        expr = parseTopParamType();
        if (opt && opt.midstream) {
          return {
            expression: expr,
            index: previous
          };
        }
        if (token !== Token.EOF) {
          utility.throwError("not reach to EOF");
        }
        return expr;
      }
      function stringifyImpl(node, compact, topLevel) {
        var result, i2, iz;
        switch (node.type) {
          case Syntax.NullableLiteral:
            result = "?";
            break;
          case Syntax.AllLiteral:
            result = "*";
            break;
          case Syntax.NullLiteral:
            result = "null";
            break;
          case Syntax.UndefinedLiteral:
            result = "undefined";
            break;
          case Syntax.VoidLiteral:
            result = "void";
            break;
          case Syntax.UnionType:
            if (!topLevel) {
              result = "(";
            } else {
              result = "";
            }
            for (i2 = 0, iz = node.elements.length; i2 < iz; ++i2) {
              result += stringifyImpl(node.elements[i2], compact);
              if (i2 + 1 !== iz) {
                result += compact ? "|" : " | ";
              }
            }
            if (!topLevel) {
              result += ")";
            }
            break;
          case Syntax.ArrayType:
            result = "[";
            for (i2 = 0, iz = node.elements.length; i2 < iz; ++i2) {
              result += stringifyImpl(node.elements[i2], compact);
              if (i2 + 1 !== iz) {
                result += compact ? "," : ", ";
              }
            }
            result += "]";
            break;
          case Syntax.RecordType:
            result = "{";
            for (i2 = 0, iz = node.fields.length; i2 < iz; ++i2) {
              result += stringifyImpl(node.fields[i2], compact);
              if (i2 + 1 !== iz) {
                result += compact ? "," : ", ";
              }
            }
            result += "}";
            break;
          case Syntax.FieldType:
            if (node.value) {
              result = node.key + (compact ? ":" : ": ") + stringifyImpl(node.value, compact);
            } else {
              result = node.key;
            }
            break;
          case Syntax.FunctionType:
            result = compact ? "function(" : "function (";
            if (node["this"]) {
              if (node["new"]) {
                result += compact ? "new:" : "new: ";
              } else {
                result += compact ? "this:" : "this: ";
              }
              result += stringifyImpl(node["this"], compact);
              if (node.params.length !== 0) {
                result += compact ? "," : ", ";
              }
            }
            for (i2 = 0, iz = node.params.length; i2 < iz; ++i2) {
              result += stringifyImpl(node.params[i2], compact);
              if (i2 + 1 !== iz) {
                result += compact ? "," : ", ";
              }
            }
            result += ")";
            if (node.result) {
              result += (compact ? ":" : ": ") + stringifyImpl(node.result, compact);
            }
            break;
          case Syntax.ParameterType:
            result = node.name + (compact ? ":" : ": ") + stringifyImpl(node.expression, compact);
            break;
          case Syntax.RestType:
            result = "...";
            if (node.expression) {
              result += stringifyImpl(node.expression, compact);
            }
            break;
          case Syntax.NonNullableType:
            if (node.prefix) {
              result = "!" + stringifyImpl(node.expression, compact);
            } else {
              result = stringifyImpl(node.expression, compact) + "!";
            }
            break;
          case Syntax.OptionalType:
            result = stringifyImpl(node.expression, compact) + "=";
            break;
          case Syntax.NullableType:
            if (node.prefix) {
              result = "?" + stringifyImpl(node.expression, compact);
            } else {
              result = stringifyImpl(node.expression, compact) + "?";
            }
            break;
          case Syntax.NameExpression:
            result = node.name;
            break;
          case Syntax.TypeApplication:
            result = stringifyImpl(node.expression, compact) + ".<";
            for (i2 = 0, iz = node.applications.length; i2 < iz; ++i2) {
              result += stringifyImpl(node.applications[i2], compact);
              if (i2 + 1 !== iz) {
                result += compact ? "," : ", ";
              }
            }
            result += ">";
            break;
          case Syntax.StringLiteralType:
            result = '"' + node.value + '"';
            break;
          case Syntax.NumericLiteralType:
            result = String(node.value);
            break;
          case Syntax.BooleanLiteralType:
            result = String(node.value);
            break;
          default:
            utility.throwError("Unknown type " + node.type);
        }
        return result;
      }
      function stringify(node, options) {
        if (options == null) {
          options = {};
        }
        return stringifyImpl(node, options.compact, options.topLevel);
      }
      exports.parseType = parseType;
      exports.parseParamType = parseParamType;
      exports.stringify = stringify;
      exports.Syntax = Syntax;
    })();
  }
});

// node_modules/doctrine/lib/doctrine.js
var require_doctrine = __commonJS({
  "node_modules/doctrine/lib/doctrine.js"(exports) {
    init_define_module();
    init_define_process_env();
    (function() {
      "use strict";
      var typed, utility, jsdoc, esutils, hasOwnProperty;
      esutils = require_utils();
      typed = require_typed();
      utility = require_utility();
      function sliceSource(source, index, last) {
        return source.slice(index, last);
      }
      hasOwnProperty = function() {
        var func = Object.prototype.hasOwnProperty;
        return function hasOwnProperty2(obj, name) {
          return func.call(obj, name);
        };
      }();
      function shallowCopy(obj) {
        var ret = {}, key;
        for (key in obj) {
          if (obj.hasOwnProperty(key)) {
            ret[key] = obj[key];
          }
        }
        return ret;
      }
      function isASCIIAlphanumeric(ch) {
        return ch >= 97 && ch <= 122 || ch >= 65 && ch <= 90 || ch >= 48 && ch <= 57;
      }
      function isParamTitle(title) {
        return title === "param" || title === "argument" || title === "arg";
      }
      function isReturnTitle(title) {
        return title === "return" || title === "returns";
      }
      function isProperty(title) {
        return title === "property" || title === "prop";
      }
      function isNameParameterRequired(title) {
        return isParamTitle(title) || isProperty(title) || title === "alias" || title === "this" || title === "mixes" || title === "requires";
      }
      function isAllowedName(title) {
        return isNameParameterRequired(title) || title === "const" || title === "constant";
      }
      function isAllowedNested(title) {
        return isProperty(title) || isParamTitle(title);
      }
      function isAllowedOptional(title) {
        return isProperty(title) || isParamTitle(title);
      }
      function isTypeParameterRequired(title) {
        return isParamTitle(title) || isReturnTitle(title) || title === "define" || title === "enum" || title === "implements" || title === "this" || title === "type" || title === "typedef" || isProperty(title);
      }
      function isAllowedType(title) {
        return isTypeParameterRequired(title) || title === "throws" || title === "const" || title === "constant" || title === "namespace" || title === "member" || title === "var" || title === "module" || title === "constructor" || title === "class" || title === "extends" || title === "augments" || title === "public" || title === "private" || title === "protected";
      }
      var WHITESPACE = "[ \\f\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]";
      var STAR_MATCHER = "(" + WHITESPACE + "*(?:\\*" + WHITESPACE + "?)?)(.+|[\r\n\u2028\u2029])";
      function unwrapComment(doc) {
        return doc.replace(/^\/\*\*?/, "").replace(/\*\/$/, "").replace(new RegExp(STAR_MATCHER, "g"), "$2").replace(/\s*$/, "");
      }
      function convertUnwrappedCommentIndex(originalSource, unwrappedIndex) {
        var replacedSource = originalSource.replace(/^\/\*\*?/, "");
        var numSkippedChars = 0;
        var matcher = new RegExp(STAR_MATCHER, "g");
        var match;
        while (match = matcher.exec(replacedSource)) {
          numSkippedChars += match[1].length;
          if (match.index + match[0].length > unwrappedIndex + numSkippedChars) {
            return unwrappedIndex + numSkippedChars + originalSource.length - replacedSource.length;
          }
        }
        return originalSource.replace(/\*\/$/, "").replace(/\s*$/, "").length;
      }
      (function(exports2) {
        var Rules, index, lineNumber, length, source, originalSource, recoverable, sloppy, strict;
        function advance() {
          var ch = source.charCodeAt(index);
          index += 1;
          if (esutils.code.isLineTerminator(ch) && !(ch === 13 && source.charCodeAt(index) === 10)) {
            lineNumber += 1;
          }
          return String.fromCharCode(ch);
        }
        function scanTitle() {
          var title = "";
          advance();
          while (index < length && isASCIIAlphanumeric(source.charCodeAt(index))) {
            title += advance();
          }
          return title;
        }
        function seekContent() {
          var ch, waiting, last = index;
          waiting = false;
          while (last < length) {
            ch = source.charCodeAt(last);
            if (esutils.code.isLineTerminator(ch) && !(ch === 13 && source.charCodeAt(last + 1) === 10)) {
              waiting = true;
            } else if (waiting) {
              if (ch === 64) {
                break;
              }
              if (!esutils.code.isWhiteSpace(ch)) {
                waiting = false;
              }
            }
            last += 1;
          }
          return last;
        }
        function parseType(title, last, addRange) {
          var ch, brace, type, startIndex, direct = false;
          while (index < last) {
            ch = source.charCodeAt(index);
            if (esutils.code.isWhiteSpace(ch)) {
              advance();
            } else if (ch === 123) {
              advance();
              break;
            } else {
              direct = true;
              break;
            }
          }
          if (direct) {
            return null;
          }
          brace = 1;
          type = "";
          while (index < last) {
            ch = source.charCodeAt(index);
            if (esutils.code.isLineTerminator(ch)) {
              advance();
            } else {
              if (ch === 125) {
                brace -= 1;
                if (brace === 0) {
                  advance();
                  break;
                }
              } else if (ch === 123) {
                brace += 1;
              }
              if (type === "") {
                startIndex = index;
              }
              type += advance();
            }
          }
          if (brace !== 0) {
            return utility.throwError("Braces are not balanced");
          }
          if (isAllowedOptional(title)) {
            return typed.parseParamType(type, { startIndex: convertIndex(startIndex), range: addRange });
          }
          return typed.parseType(type, { startIndex: convertIndex(startIndex), range: addRange });
        }
        function scanIdentifier(last) {
          var identifier;
          if (!esutils.code.isIdentifierStartES5(source.charCodeAt(index)) && !source[index].match(/[0-9]/)) {
            return null;
          }
          identifier = advance();
          while (index < last && esutils.code.isIdentifierPartES5(source.charCodeAt(index))) {
            identifier += advance();
          }
          return identifier;
        }
        function skipWhiteSpace(last) {
          while (index < last && (esutils.code.isWhiteSpace(source.charCodeAt(index)) || esutils.code.isLineTerminator(source.charCodeAt(index)))) {
            advance();
          }
        }
        function parseName(last, allowBrackets, allowNestedParams) {
          var name = "", useBrackets, insideString;
          skipWhiteSpace(last);
          if (index >= last) {
            return null;
          }
          if (source.charCodeAt(index) === 91) {
            if (allowBrackets) {
              useBrackets = true;
              name = advance();
            } else {
              return null;
            }
          }
          name += scanIdentifier(last);
          if (allowNestedParams) {
            if (source.charCodeAt(index) === 58 && (name === "module" || name === "external" || name === "event")) {
              name += advance();
              name += scanIdentifier(last);
            }
            if (source.charCodeAt(index) === 91 && source.charCodeAt(index + 1) === 93) {
              name += advance();
              name += advance();
            }
            while (source.charCodeAt(index) === 46 || source.charCodeAt(index) === 47 || source.charCodeAt(index) === 35 || source.charCodeAt(index) === 45 || source.charCodeAt(index) === 126) {
              name += advance();
              name += scanIdentifier(last);
            }
          }
          if (useBrackets) {
            skipWhiteSpace(last);
            if (source.charCodeAt(index) === 61) {
              name += advance();
              skipWhiteSpace(last);
              var ch;
              var bracketDepth = 1;
              while (index < last) {
                ch = source.charCodeAt(index);
                if (esutils.code.isWhiteSpace(ch)) {
                  if (!insideString) {
                    skipWhiteSpace(last);
                    ch = source.charCodeAt(index);
                  }
                }
                if (ch === 39) {
                  if (!insideString) {
                    insideString = "'";
                  } else {
                    if (insideString === "'") {
                      insideString = "";
                    }
                  }
                }
                if (ch === 34) {
                  if (!insideString) {
                    insideString = '"';
                  } else {
                    if (insideString === '"') {
                      insideString = "";
                    }
                  }
                }
                if (ch === 91) {
                  bracketDepth++;
                } else if (ch === 93 && --bracketDepth === 0) {
                  break;
                }
                name += advance();
              }
            }
            skipWhiteSpace(last);
            if (index >= last || source.charCodeAt(index) !== 93) {
              return null;
            }
            name += advance();
          }
          return name;
        }
        function skipToTag() {
          while (index < length && source.charCodeAt(index) !== 64) {
            advance();
          }
          if (index >= length) {
            return false;
          }
          utility.assert(source.charCodeAt(index) === 64);
          return true;
        }
        function convertIndex(rangeIndex) {
          if (source === originalSource) {
            return rangeIndex;
          }
          return convertUnwrappedCommentIndex(originalSource, rangeIndex);
        }
        function TagParser(options, title) {
          this._options = options;
          this._title = title.toLowerCase();
          this._tag = {
            title,
            description: null
          };
          if (this._options.lineNumbers) {
            this._tag.lineNumber = lineNumber;
          }
          this._first = index - title.length - 1;
          this._last = 0;
          this._extra = {};
        }
        TagParser.prototype.addError = function addError(errorText) {
          var args = Array.prototype.slice.call(arguments, 1), msg = errorText.replace(
            /%(\d)/g,
            function(whole, index2) {
              utility.assert(index2 < args.length, "Message reference must be in range");
              return args[index2];
            }
          );
          if (!this._tag.errors) {
            this._tag.errors = [];
          }
          if (strict) {
            utility.throwError(msg);
          }
          this._tag.errors.push(msg);
          return recoverable;
        };
        TagParser.prototype.parseType = function() {
          if (isTypeParameterRequired(this._title)) {
            try {
              this._tag.type = parseType(this._title, this._last, this._options.range);
              if (!this._tag.type) {
                if (!isParamTitle(this._title) && !isReturnTitle(this._title)) {
                  if (!this.addError("Missing or invalid tag type")) {
                    return false;
                  }
                }
              }
            } catch (error) {
              this._tag.type = null;
              if (!this.addError(error.message)) {
                return false;
              }
            }
          } else if (isAllowedType(this._title)) {
            try {
              this._tag.type = parseType(this._title, this._last, this._options.range);
            } catch (e) {
            }
          }
          return true;
        };
        TagParser.prototype._parseNamePath = function(optional) {
          var name;
          name = parseName(this._last, sloppy && isAllowedOptional(this._title), true);
          if (!name) {
            if (!optional) {
              if (!this.addError("Missing or invalid tag name")) {
                return false;
              }
            }
          }
          this._tag.name = name;
          return true;
        };
        TagParser.prototype.parseNamePath = function() {
          return this._parseNamePath(false);
        };
        TagParser.prototype.parseNamePathOptional = function() {
          return this._parseNamePath(true);
        };
        TagParser.prototype.parseName = function() {
          var assign, name;
          if (isAllowedName(this._title)) {
            this._tag.name = parseName(this._last, sloppy && isAllowedOptional(this._title), isAllowedNested(this._title));
            if (!this._tag.name) {
              if (!isNameParameterRequired(this._title)) {
                return true;
              }
              if (isParamTitle(this._title) && this._tag.type && this._tag.type.name) {
                this._extra.name = this._tag.type;
                this._tag.name = this._tag.type.name;
                this._tag.type = null;
              } else {
                if (!this.addError("Missing or invalid tag name")) {
                  return false;
                }
              }
            } else {
              name = this._tag.name;
              if (name.charAt(0) === "[" && name.charAt(name.length - 1) === "]") {
                assign = name.substring(1, name.length - 1).split("=");
                if (assign.length > 1) {
                  this._tag["default"] = assign.slice(1).join("=");
                }
                this._tag.name = assign[0];
                if (this._tag.type && this._tag.type.type !== "OptionalType") {
                  this._tag.type = {
                    type: "OptionalType",
                    expression: this._tag.type
                  };
                }
              }
            }
          }
          return true;
        };
        TagParser.prototype.parseDescription = function parseDescription() {
          var description = sliceSource(source, index, this._last).trim();
          if (description) {
            if (/^-\s+/.test(description)) {
              description = description.substring(2);
            }
            this._tag.description = description;
          }
          return true;
        };
        TagParser.prototype.parseCaption = function parseDescription() {
          var description = sliceSource(source, index, this._last).trim();
          var captionStartTag = "<caption>";
          var captionEndTag = "</caption>";
          var captionStart = description.indexOf(captionStartTag);
          var captionEnd = description.indexOf(captionEndTag);
          if (captionStart >= 0 && captionEnd >= 0) {
            this._tag.caption = description.substring(
              captionStart + captionStartTag.length,
              captionEnd
            ).trim();
            this._tag.description = description.substring(captionEnd + captionEndTag.length).trim();
          } else {
            this._tag.description = description;
          }
          return true;
        };
        TagParser.prototype.parseKind = function parseKind() {
          var kind, kinds;
          kinds = {
            "class": true,
            "constant": true,
            "event": true,
            "external": true,
            "file": true,
            "function": true,
            "member": true,
            "mixin": true,
            "module": true,
            "namespace": true,
            "typedef": true
          };
          kind = sliceSource(source, index, this._last).trim();
          this._tag.kind = kind;
          if (!hasOwnProperty(kinds, kind)) {
            if (!this.addError("Invalid kind name '%0'", kind)) {
              return false;
            }
          }
          return true;
        };
        TagParser.prototype.parseAccess = function parseAccess() {
          var access;
          access = sliceSource(source, index, this._last).trim();
          this._tag.access = access;
          if (access !== "private" && access !== "protected" && access !== "public") {
            if (!this.addError("Invalid access name '%0'", access)) {
              return false;
            }
          }
          return true;
        };
        TagParser.prototype.parseThis = function parseThis() {
          var value = sliceSource(source, index, this._last).trim();
          if (value && value.charAt(0) === "{") {
            var gotType = this.parseType();
            if (gotType && this._tag.type.type === "NameExpression" || this._tag.type.type === "UnionType") {
              this._tag.name = this._tag.type.name;
              return true;
            } else {
              return this.addError("Invalid name for this");
            }
          } else {
            return this.parseNamePath();
          }
        };
        TagParser.prototype.parseVariation = function parseVariation() {
          var variation, text;
          text = sliceSource(source, index, this._last).trim();
          variation = parseFloat(text, 10);
          this._tag.variation = variation;
          if (isNaN(variation)) {
            if (!this.addError("Invalid variation '%0'", text)) {
              return false;
            }
          }
          return true;
        };
        TagParser.prototype.ensureEnd = function() {
          var shouldBeEmpty = sliceSource(source, index, this._last).trim();
          if (shouldBeEmpty) {
            if (!this.addError("Unknown content '%0'", shouldBeEmpty)) {
              return false;
            }
          }
          return true;
        };
        TagParser.prototype.epilogue = function epilogue() {
          var description;
          description = this._tag.description;
          if (isAllowedOptional(this._title) && !this._tag.type && description && description.charAt(0) === "[") {
            this._tag.type = this._extra.name;
            if (!this._tag.name) {
              this._tag.name = void 0;
            }
            if (!sloppy) {
              if (!this.addError("Missing or invalid tag name")) {
                return false;
              }
            }
          }
          return true;
        };
        Rules = {
          "access": ["parseAccess"],
          "alias": ["parseNamePath", "ensureEnd"],
          "augments": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "constructor": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "class": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "extends": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "example": ["parseCaption"],
          "deprecated": ["parseDescription"],
          "global": ["ensureEnd"],
          "inner": ["ensureEnd"],
          "instance": ["ensureEnd"],
          "kind": ["parseKind"],
          "mixes": ["parseNamePath", "ensureEnd"],
          "mixin": ["parseNamePathOptional", "ensureEnd"],
          "member": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "method": ["parseNamePathOptional", "ensureEnd"],
          "module": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "func": ["parseNamePathOptional", "ensureEnd"],
          "function": ["parseNamePathOptional", "ensureEnd"],
          "var": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "name": ["parseNamePath", "ensureEnd"],
          "namespace": ["parseType", "parseNamePathOptional", "ensureEnd"],
          "private": ["parseType", "parseDescription"],
          "protected": ["parseType", "parseDescription"],
          "public": ["parseType", "parseDescription"],
          "readonly": ["ensureEnd"],
          "requires": ["parseNamePath", "ensureEnd"],
          "since": ["parseDescription"],
          "static": ["ensureEnd"],
          "summary": ["parseDescription"],
          "this": ["parseThis", "ensureEnd"],
          "todo": ["parseDescription"],
          "typedef": ["parseType", "parseNamePathOptional"],
          "variation": ["parseVariation"],
          "version": ["parseDescription"]
        };
        TagParser.prototype.parse = function parse3() {
          var i2, iz, sequences, method;
          if (!this._title) {
            if (!this.addError("Missing or invalid title")) {
              return null;
            }
          }
          this._last = seekContent(this._title);
          if (this._options.range) {
            this._tag.range = [this._first, source.slice(0, this._last).replace(/\s*$/, "").length].map(convertIndex);
          }
          if (hasOwnProperty(Rules, this._title)) {
            sequences = Rules[this._title];
          } else {
            sequences = ["parseType", "parseName", "parseDescription", "epilogue"];
          }
          for (i2 = 0, iz = sequences.length; i2 < iz; ++i2) {
            method = sequences[i2];
            if (!this[method]()) {
              return null;
            }
          }
          return this._tag;
        };
        function parseTag(options) {
          var title, parser, tag;
          if (!skipToTag()) {
            return null;
          }
          title = scanTitle();
          parser = new TagParser(options, title);
          tag = parser.parse();
          while (index < parser._last) {
            advance();
          }
          return tag;
        }
        function scanJSDocDescription(preserveWhitespace) {
          var description = "", ch, atAllowed;
          atAllowed = true;
          while (index < length) {
            ch = source.charCodeAt(index);
            if (atAllowed && ch === 64) {
              break;
            }
            if (esutils.code.isLineTerminator(ch)) {
              atAllowed = true;
            } else if (atAllowed && !esutils.code.isWhiteSpace(ch)) {
              atAllowed = false;
            }
            description += advance();
          }
          return preserveWhitespace ? description : description.trim();
        }
        function parse2(comment, options) {
          var tags = [], tag, description, interestingTags, i2, iz;
          if (options === void 0) {
            options = {};
          }
          if (typeof options.unwrap === "boolean" && options.unwrap) {
            source = unwrapComment(comment);
          } else {
            source = comment;
          }
          originalSource = comment;
          if (options.tags) {
            if (Array.isArray(options.tags)) {
              interestingTags = {};
              for (i2 = 0, iz = options.tags.length; i2 < iz; i2++) {
                if (typeof options.tags[i2] === "string") {
                  interestingTags[options.tags[i2]] = true;
                } else {
                  utility.throwError('Invalid "tags" parameter: ' + options.tags);
                }
              }
            } else {
              utility.throwError('Invalid "tags" parameter: ' + options.tags);
            }
          }
          length = source.length;
          index = 0;
          lineNumber = 0;
          recoverable = options.recoverable;
          sloppy = options.sloppy;
          strict = options.strict;
          description = scanJSDocDescription(options.preserveWhitespace);
          while (true) {
            tag = parseTag(options);
            if (!tag) {
              break;
            }
            if (!interestingTags || interestingTags.hasOwnProperty(tag.title)) {
              tags.push(tag);
            }
          }
          return {
            description,
            tags
          };
        }
        exports2.parse = parse2;
      })(jsdoc = {});
      exports.version = utility.VERSION;
      exports.parse = jsdoc.parse;
      exports.parseType = typed.parseType;
      exports.parseParamType = typed.parseParamType;
      exports.unwrapComment = unwrapComment;
      exports.Syntax = shallowCopy(typed.Syntax);
      exports.Error = utility.DoctrineError;
      exports.type = {
        Syntax: exports.Syntax,
        parseType: typed.parseType,
        parseParamType: typed.parseParamType,
        stringify: typed.stringify
      };
    })();
  }
});

// node_modules/@storybook/docs-tools/dist/index.js
var require_dist7 = __commonJS({
  "node_modules/@storybook/docs-tools/dist/index.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var z = Object.create;
    var T2 = Object.defineProperty;
    var Z = Object.getOwnPropertyDescriptor;
    var ee = Object.getOwnPropertyNames;
    var re = Object.getPrototypeOf;
    var te = Object.prototype.hasOwnProperty;
    var ne = (e, r) => {
      for (var t in r)
        T2(e, t, { get: r[t], enumerable: true });
    };
    var V = (e, r, t, n) => {
      if (r && typeof r == "object" || typeof r == "function")
        for (let o of ee(r))
          !te.call(e, o) && o !== t && T2(e, o, { get: () => r[o], enumerable: !(n = Z(r, o)) || n.enumerable });
      return e;
    };
    var J = (e, r, t) => (t = e != null ? z(re(e)) : {}, V(r || !e || !e.__esModule ? T2(t, "default", { value: e, enumerable: true }) : t, e));
    var oe = (e) => V(T2({}, "__esModule", { value: true }), e);
    var Me = {};
    ne(Me, { ADDON_ID: () => N, MAX_DEFAULT_VALUE_SUMMARY_LENGTH: () => de, MAX_TYPE_SUMMARY_LENGTH: () => Te, PANEL_ID: () => Ce, PARAM_KEY: () => Ie, SNIPPET_RENDERED: () => _e, SourceType: () => W2, TypeSystem: () => U, convert: () => g, createSummaryValue: () => s2, enhanceArgTypes: () => Ue, extractComponentDescription: () => ke, extractComponentProps: () => Re, extractComponentSectionArray: () => X, extractComponentSectionObject: () => q, getDocgenDescription: () => w, getDocgenSection: () => F, hasDocgen: () => S, hasDocsOrControls: () => je, isDefaultValueBlacklisted: () => c2, isTooLongForDefaultValueSummary: () => v, isTooLongForTypeSummary: () => d, isValidDocgenSection: () => E, normalizeNewlines: () => Pe, parseJsDoc: () => b2, str: () => x2 });
    module.exports = oe(Me);
    var ae = (e) => {
      switch (e.type) {
        case "function":
          return { name: "function" };
        case "object":
          let r = {};
          return e.signature.properties.forEach((t) => {
            r[t.key] = y2(t.value);
          }), { name: "object", value: r };
        default:
          throw new Error(`Unknown: ${e}`);
      }
    };
    var y2 = (e) => {
      let { name: r, raw: t } = e, n = {};
      switch (typeof t < "u" && (n.raw = t), e.name) {
        case "string":
        case "number":
        case "symbol":
        case "boolean":
          return { ...n, name: r };
        case "Array":
          return { ...n, name: "array", value: e.elements.map(y2) };
        case "signature":
          return { ...n, ...ae(e) };
        case "union":
        case "intersection":
          return { ...n, name: r, value: e.elements.map(y2) };
        default:
          return { ...n, name: "other", value: r };
      }
    };
    var se = (e) => e.name === "literal";
    var pe = (e) => e.value.replace(/['|"]/g, "");
    var ce = (e) => {
      switch (e.type) {
        case "function":
          return { name: "function" };
        case "object":
          let r = {};
          return e.signature.properties.forEach((t) => {
            r[t.key] = l(t.value);
          }), { name: "object", value: r };
        default:
          throw new Error(`Unknown: ${e}`);
      }
    };
    var l = (e) => {
      let { name: r, raw: t } = e, n = {};
      switch (typeof t < "u" && (n.raw = t), e.name) {
        case "literal":
          return { ...n, name: "other", value: e.value };
        case "string":
        case "number":
        case "symbol":
        case "boolean":
          return { ...n, name: r };
        case "Array":
          return { ...n, name: "array", value: e.elements.map(l) };
        case "signature":
          return { ...n, ...ce(e) };
        case "union":
          return e.elements.every(se) ? { ...n, name: "enum", value: e.elements.map(pe) } : { ...n, name: r, value: e.elements.map(l) };
        case "intersection":
          return { ...n, name: r, value: e.elements.map(l) };
        default:
          return { ...n, name: "other", value: r };
      }
    };
    var k2 = J(require_mapValues());
    var h2 = /^['"]|['"]$/g;
    var O = (e) => e.replace(h2, "");
    var R = (e) => h2.test(e);
    var ie = /^\(.*\) => /;
    var m2 = (e) => {
      let { name: r, raw: t, computed: n, value: o } = e, a2 = {};
      switch (typeof t < "u" && (a2.raw = t), r) {
        case "enum": {
          let p = n ? o : o.map((D) => {
            let u = O(D.value);
            return R(D.value) || Number.isNaN(Number(u)) ? u : Number(u);
          });
          return { ...a2, name: r, value: p };
        }
        case "string":
        case "number":
        case "symbol":
          return { ...a2, name: r };
        case "func":
          return { ...a2, name: "function" };
        case "bool":
        case "boolean":
          return { ...a2, name: "boolean" };
        case "arrayOf":
        case "array":
          return { ...a2, name: "array", value: o && m2(o) };
        case "object":
          return { ...a2, name: r };
        case "objectOf":
          return { ...a2, name: r, value: m2(o) };
        case "shape":
        case "exact":
          let i2 = (0, k2.default)(o, (p) => m2(p));
          return { ...a2, name: "object", value: i2 };
        case "union":
          return { ...a2, name: "union", value: o.map((p) => m2(p)) };
        case "instanceOf":
        case "element":
        case "elementType":
        default: {
          if ((r == null ? void 0 : r.indexOf("|")) > 0)
            try {
              let u = r.split("|").map((H) => JSON.parse(H));
              return { ...a2, name: "enum", value: u };
            } catch {
            }
          let p = o ? `${r}(${o})` : r, D = ie.test(r) ? "function" : "other";
          return { ...a2, name: D, value: p };
        }
      }
    };
    var g = (e) => {
      let { type: r, tsType: t, flowType: n } = e;
      return r != null ? m2(r) : t != null ? y2(t) : n != null ? l(n) : null;
    };
    var U = ((o) => (o.JAVASCRIPT = "JavaScript", o.FLOW = "Flow", o.TYPESCRIPT = "TypeScript", o.UNKNOWN = "Unknown", o))(U || {});
    var ue = ["null", "undefined"];
    function c2(e) {
      return ue.some((r) => r === e);
    }
    var x2 = (e) => {
      if (!e)
        return "";
      if (typeof e == "string")
        return e;
      throw new Error(`Description: expected string, got: ${JSON.stringify(e)}`);
    };
    function S(e) {
      return !!e.__docgenInfo;
    }
    function E(e) {
      return e != null && Object.keys(e).length > 0;
    }
    function F(e, r) {
      return S(e) ? e.__docgenInfo[r] : null;
    }
    function w(e) {
      return S(e) && x2(e.__docgenInfo.description);
    }
    var C = J(require_doctrine());
    function le(e) {
      return e != null && e.includes("@");
    }
    function me(e, r) {
      let t;
      try {
        t = C.default.parse(e, { tags: r, sloppy: true });
      } catch (n) {
        throw console.error(n), new Error("Cannot parse JSDoc tags.");
      }
      return t;
    }
    var fe = { tags: ["param", "arg", "argument", "returns", "ignore"] };
    var b2 = (e, r = fe) => {
      if (!le(e))
        return { includesJsDoc: false, ignore: false };
      let t = me(e, r.tags), n = ye(t);
      return n.ignore ? { includesJsDoc: true, ignore: true } : { includesJsDoc: true, ignore: false, description: t.description, extractedTags: n };
    };
    function ye(e) {
      let r = { params: null, returns: null, ignore: false };
      for (let t = 0; t < e.tags.length; t += 1) {
        let n = e.tags[t];
        if (n.title === "ignore") {
          r.ignore = true;
          break;
        } else
          switch (n.title) {
            case "param":
            case "arg":
            case "argument": {
              let o = ge(n);
              o != null && (r.params == null && (r.params = []), r.params.push(o));
              break;
            }
            case "returns": {
              let o = De(n);
              o != null && (r.returns = o);
              break;
            }
            default:
              break;
          }
      }
      return r;
    }
    function ge(e) {
      let r = e.name;
      return r != null && r !== "null-null" ? { name: e.name, type: e.type, description: e.description, getPrettyName: () => r.includes("null") ? r.replace("-null", "").replace(".null", "") : e.name, getTypeName: () => e.type != null ? f2(e.type) : null } : null;
    }
    function De(e) {
      return e.type != null ? { type: e.type, description: e.description, getTypeName: () => f2(e.type) } : null;
    }
    function f2(e) {
      return e.type === "NameExpression" ? e.name : e.type === "RecordType" ? `({${e.fields.map((t) => {
        if (t.value != null) {
          let n = f2(t.value);
          return `${t.key}: ${n}`;
        }
        return t.key;
      }).join(", ")}})` : e.type === "UnionType" ? `(${e.elements.map(f2).join("|")})` : e.type === "ArrayType" ? "[]" : e.type === "TypeApplication" && e.expression != null && e.expression.name === "Array" ? `${f2(e.applications[0])}[]` : e.type === "NullableType" || e.type === "NonNullableType" || e.type === "OptionalType" ? f2(e.expression) : e.type === "AllLiteral" ? "any" : null;
    }
    var Te = 90;
    var de = 50;
    function d(e) {
      return e.length > 90;
    }
    function v(e) {
      return e.length > 50;
    }
    function s2(e, r) {
      return e === r ? { summary: e } : { summary: e, detail: r };
    }
    var Pe = (e) => e.replace(/\\r\\n/g, "\\n");
    function I({ name: e, value: r, elements: t, raw: n }) {
      return r ?? (t != null ? t.map(I).join(" | ") : n ?? e);
    }
    function xe({ name: e, raw: r, elements: t }) {
      return t != null ? s2(t.map(I).join(" | ")) : r != null ? s2(r.replace(/^\|\s*/, "")) : s2(e);
    }
    function Se({ type: e, raw: r }) {
      return r != null ? s2(r) : s2(e);
    }
    function Ee({ type: e, raw: r }) {
      return r != null ? d(r) ? s2(e, r) : s2(r) : s2(e);
    }
    function Fe(e) {
      let { type: r } = e;
      return r === "object" ? Ee(e) : Se(e);
    }
    function we({ name: e, raw: r }) {
      return r != null ? d(r) ? s2(e, r) : s2(r) : s2(e);
    }
    function _2(e) {
      if (e == null)
        return null;
      switch (e.name) {
        case "union":
          return xe(e);
        case "signature":
          return Fe(e);
        default:
          return we(e);
      }
    }
    function L(e, r) {
      if (e != null) {
        let { value: t } = e;
        if (!c2(t))
          return v(t) ? s2(r.name, t) : s2(t);
      }
      return null;
    }
    var j2 = (e, r) => {
      let { flowType: t, description: n, required: o, defaultValue: a2 } = r;
      return { name: e, type: _2(t), required: o, description: n, defaultValue: L(a2, t) };
    };
    function M2({ tsType: e, required: r }) {
      return e == null ? null : r ? s2(e.name) : s2(e.name.replace(" | undefined", ""));
    }
    function B({ defaultValue: e }) {
      if (e != null) {
        let { value: r } = e;
        if (!c2(r))
          return s2(r);
      }
      return null;
    }
    var $ = (e, r) => {
      let { description: t, required: n } = r;
      return { name: e, type: M2(r), required: n, description: t, defaultValue: B(r) };
    };
    function be(e) {
      return e != null ? s2(e.name) : null;
    }
    function ve(e) {
      let { computed: r, func: t } = e;
      return typeof r > "u" && typeof t > "u";
    }
    function Ae(e) {
      return e ? e.name === "string" ? true : e.name === "enum" ? Array.isArray(e.value) && e.value.every(({ value: r }) => typeof r == "string" && r[0] === '"' && r[r.length - 1] === '"') : false : false;
    }
    function Ne(e, r) {
      if (e != null) {
        let { value: t } = e;
        if (!c2(t))
          return ve(e) && Ae(r) ? s2(JSON.stringify(t)) : s2(t);
      }
      return null;
    }
    function Y2(e, r, t) {
      let { description: n, required: o, defaultValue: a2 } = t;
      return { name: e, type: be(r), required: o, description: n, defaultValue: Ne(a2, r) };
    }
    function P2(e, r) {
      if (r.includesJsDoc) {
        let { description: t, extractedTags: n } = r;
        t != null && (e.description = r.description);
        let o = n.params != null, a2 = n.returns != null && n.returns.type != null;
        (o || a2) && (e.jsDocTags = { params: o && n.params.map((i2) => ({ name: i2.getPrettyName(), description: i2.description })), returns: a2 && { description: n.returns.description } });
      }
      return e;
    }
    var Ve = (e, r, t) => {
      let n = Y2(e, r.type, r);
      return n.sbType = g(r), P2(n, t);
    };
    var Je = (e, r, t) => {
      let n = $(e, r);
      return n.sbType = g(r), P2(n, t);
    };
    var he = (e, r, t) => {
      let n = j2(e, r);
      return n.sbType = g(r), P2(n, t);
    };
    var Oe = (e, r, t) => {
      let n = Y2(e, { name: "unknown" }, r);
      return P2(n, t);
    };
    var A3 = (e) => {
      switch (e) {
        case "JavaScript":
          return Ve;
        case "TypeScript":
          return Je;
        case "Flow":
          return he;
        default:
          return Oe;
      }
    };
    var G = (e) => e.type != null ? "JavaScript" : e.flowType != null ? "Flow" : e.tsType != null ? "TypeScript" : "Unknown";
    var X = (e) => {
      let r = G(e[0]), t = A3(r);
      return e.map((n) => {
        var a2;
        let o = n;
        return (a2 = n.type) != null && a2.elements && (o = { ...n, type: { ...n.type, value: n.type.elements } }), K(o.name, o, r, t);
      });
    };
    var q = (e) => {
      let r = Object.keys(e), t = G(e[r[0]]), n = A3(t);
      return r.map((o) => {
        let a2 = e[o];
        return a2 != null ? K(o, a2, t, n) : null;
      }).filter(Boolean);
    };
    var Re = (e, r) => {
      let t = F(e, r);
      return E(t) ? Array.isArray(t) ? X(t) : q(t) : [];
    };
    function K(e, r, t, n) {
      let o = b2(r.description);
      return o.includesJsDoc && o.ignore ? null : { propDef: n(e, r, o), jsDocTags: o.extractedTags, docgenInfo: r, typeSystem: t };
    }
    function ke(e) {
      return e != null && w(e);
    }
    var Q = require_dist6();
    var Ue = (e) => {
      let { component: r, argTypes: t, parameters: { docs: n = {} } } = e, { extractArgTypes: o } = n, a2 = o && r ? o(r) : {};
      return a2 ? (0, Q.combineParameters)(a2, t) : t;
    };
    var N = "storybook/docs";
    var Ce = `${N}/panel`;
    var Ie = "docs";
    var _e = `${N}/snippet-rendered`;
    var W2 = ((n) => (n.AUTO = "auto", n.CODE = "code", n.DYNAMIC = "dynamic", n))(W2 || {});
    var Le = /(addons\/|addon-)(docs|controls)/;
    var je = (e) => {
      var r;
      return (r = e.presetsList) == null ? void 0 : r.some((t) => Le.test(t.name));
    };
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var slice = Array.prototype.slice;
    var toStr = Object.prototype.toString;
    var funcType = "[object Function]";
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slice.call(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            args.concat(slice.call(arguments))
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        } else {
          return target.apply(
            that,
            args.concat(slice.call(arguments))
          );
        }
      };
      var boundLength = Math.max(0, target.length - args.length);
      var boundArgs = [];
      for (var i2 = 0; i2 < boundLength; i2++) {
        boundArgs.push("$" + i2);
      }
      bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var implementation = require_implementation();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/has/src/index.js
var require_src = __commonJS({
  "node_modules/has/src/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var bind = require_function_bind();
    module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var undefined2;
    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, "");
      } catch (e) {
        $gOPD = null;
      }
    }
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = Object.getPrototypeOf || function(x2) {
      return x2.__proto__;
    };
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": Error,
      "%eval%": eval,
      "%EvalError%": EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": RangeError,
      "%ReferenceError%": ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
    };
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_src();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i2 = 1, isOwn = true; i2 < parts.length; i2 += 1) {
        var part = parts[i2];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i2 + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  "node_modules/call-bind/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var bind = require_function_bind();
    var GetIntrinsic = require_get_intrinsic();
    var $apply = GetIntrinsic("%Function.prototype.apply%");
    var $call = GetIntrinsic("%Function.prototype.call%");
    var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind.call($call, $apply);
    var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
    var $max = GetIntrinsic("%Math.max%");
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = null;
      }
    }
    module.exports = function callBind(originalFunction) {
      var func = $reflectApply(bind, $call, arguments);
      if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, "length");
        if (desc.configurable) {
          $defineProperty(
            func,
            "length",
            { value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
          );
        }
      }
      return func;
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module.exports, "apply", { value: applyBind });
    } else {
      module.exports.apply = applyBind;
    }
  }
});

// node_modules/call-bind/callBound.js
var require_callBound = __commonJS({
  "node_modules/call-bind/callBound.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var GetIntrinsic = require_get_intrinsic();
    var callBind = require_call_bind();
    var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
    module.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  }
});

// (disabled):node_modules/object-inspect/util.inspect
var require_util = __commonJS({
  "(disabled):node_modules/object-inspect/util.inspect"() {
    init_define_module();
    init_define_process_env();
  }
});

// node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  "node_modules/object-inspect/index.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var hasMap = typeof Map === "function" && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === "function" && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
    var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
    var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
      return O.__proto__;
    } : null);
    function addNumericSeparator(num, str2) {
      if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str2)) {
        return str2;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === "number") {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str2, intStr.length + 1);
          return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
        }
      }
      return $replace.call(str2, sepRegex, "$&_");
    }
    var utilInspect = require_util();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    module.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (has(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
      }
      var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
      if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
        throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
      }
      if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
      }
      if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === "undefined") {
        return "undefined";
      }
      if (obj === null) {
        return "null";
      }
      if (typeof obj === "boolean") {
        return obj ? "true" : "false";
      }
      if (typeof obj === "string") {
        return inspectString(obj, opts);
      }
      if (typeof obj === "number") {
        if (obj === 0) {
          return Infinity / obj > 0 ? "0" : "-0";
        }
        var str2 = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str2) : str2;
      }
      if (typeof obj === "bigint") {
        var bigIntStr = String(obj) + "n";
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
      }
      var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
      if (typeof depth === "undefined") {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
        return isArray(obj) ? "[Array]" : "[Object]";
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === "undefined") {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return "[Circular]";
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth
          };
          if (has(opts, "quoteStyle")) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === "function" && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
        return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
      }
      if (isElement(obj)) {
        var s2 = "<" + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i2 = 0; i2 < attrs.length; i2++) {
          s2 += " " + attrs[i2].name + "=" + wrapQuotes(quote(attrs[i2].value), "double", opts);
        }
        s2 += ">";
        if (obj.childNodes && obj.childNodes.length) {
          s2 += "...";
        }
        s2 += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
        return s2;
      }
      if (isArray(obj)) {
        if (obj.length === 0) {
          return "[]";
        }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
          return "[" + indentedJoin(xs, indent) + "]";
        }
        return "[ " + $join.call(xs, ", ") + " ]";
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
          return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
        }
        if (parts.length === 0) {
          return "[" + String(obj) + "]";
        }
        return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
      }
      if (typeof obj === "object" && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        mapForEach.call(obj, function(value, key) {
          mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
        });
        return collectionOf("Map", mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        setForEach.call(obj, function(value) {
          setParts.push(inspect(value, obj));
        });
        return collectionOf("Set", setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf("WeakMap");
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf("WeakSet");
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf("WeakRef");
      }
      if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? "" : "null prototype";
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
        var constructorTag = isPlainObject || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
        var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
        if (ys.length === 0) {
          return tag + "{}";
        }
        if (indent) {
          return tag + "{" + indentedJoin(ys, indent) + "}";
        }
        return tag + "{ " + $join.call(ys, ", ") + " }";
      }
      return String(obj);
    };
    function wrapQuotes(s2, defaultStyle, opts) {
      var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
      return quoteChar + s2 + quoteChar;
    }
    function quote(s2) {
      return $replace.call(String(s2), /"/g, "&quot;");
    }
    function isArray(obj) {
      return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isDate(obj) {
      return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isRegExp(obj) {
      return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isError(obj) {
      return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isString(obj) {
      return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isNumber(obj) {
      return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isBoolean(obj) {
      return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === "object" && obj instanceof Symbol;
      }
      if (typeof obj === "symbol") {
        return true;
      }
      if (!obj || typeof obj !== "object" || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== "object" || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    var hasOwn = Object.prototype.hasOwnProperty || function(key) {
      return key in this;
    };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f2) {
      if (f2.name) {
        return f2.name;
      }
      var m2 = $match.call(functionToString.call(f2), /^function\s*([\w$]+)/);
      if (m2) {
        return m2[1];
      }
      return null;
    }
    function indexOf(xs, x2) {
      if (xs.indexOf) {
        return xs.indexOf(x2);
      }
      for (var i2 = 0, l = xs.length; i2 < l; i2++) {
        if (xs[i2] === x2) {
          return i2;
        }
      }
      return -1;
    }
    function isMap(x2) {
      if (!mapSize || !x2 || typeof x2 !== "object") {
        return false;
      }
      try {
        mapSize.call(x2);
        try {
          setSize.call(x2);
        } catch (s2) {
          return true;
        }
        return x2 instanceof Map;
      } catch (e) {
      }
      return false;
    }
    function isWeakMap(x2) {
      if (!weakMapHas || !x2 || typeof x2 !== "object") {
        return false;
      }
      try {
        weakMapHas.call(x2, weakMapHas);
        try {
          weakSetHas.call(x2, weakSetHas);
        } catch (s2) {
          return true;
        }
        return x2 instanceof WeakMap;
      } catch (e) {
      }
      return false;
    }
    function isWeakRef(x2) {
      if (!weakRefDeref || !x2 || typeof x2 !== "object") {
        return false;
      }
      try {
        weakRefDeref.call(x2);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isSet(x2) {
      if (!setSize || !x2 || typeof x2 !== "object") {
        return false;
      }
      try {
        setSize.call(x2);
        try {
          mapSize.call(x2);
        } catch (m2) {
          return true;
        }
        return x2 instanceof Set;
      } catch (e) {
      }
      return false;
    }
    function isWeakSet(x2) {
      if (!weakSetHas || !x2 || typeof x2 !== "object") {
        return false;
      }
      try {
        weakSetHas.call(x2, weakSetHas);
        try {
          weakMapHas.call(x2, weakMapHas);
        } catch (s2) {
          return true;
        }
        return x2 instanceof WeakSet;
      } catch (e) {
      }
      return false;
    }
    function isElement(x2) {
      if (!x2 || typeof x2 !== "object") {
        return false;
      }
      if (typeof HTMLElement !== "undefined" && x2 instanceof HTMLElement) {
        return true;
      }
      return typeof x2.nodeName === "string" && typeof x2.getAttribute === "function";
    }
    function inspectString(str2, opts) {
      if (str2.length > opts.maxStringLength) {
        var remaining = str2.length - opts.maxStringLength;
        var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
        return inspectString($slice.call(str2, 0, opts.maxStringLength), opts) + trailer;
      }
      var s2 = $replace.call($replace.call(str2, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
      return wrapQuotes(s2, "single", opts);
    }
    function lowbyte(c2) {
      var n = c2.charCodeAt(0);
      var x2 = {
        8: "b",
        9: "t",
        10: "n",
        12: "f",
        13: "r"
      }[n];
      if (x2) {
        return "\\" + x2;
      }
      return "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16));
    }
    function markBoxed(str2) {
      return "Object(" + str2 + ")";
    }
    function weakCollectionOf(type) {
      return type + " { ? }";
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
      return type + " (" + size + ") {" + joinedEntries + "}";
    }
    function singleLineValues(xs) {
      for (var i2 = 0; i2 < xs.length; i2++) {
        if (indexOf(xs[i2], "\n") >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === "	") {
        baseIndent = "	";
      } else if (typeof opts.indent === "number" && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), " ");
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
      };
    }
    function indentedJoin(xs, indent) {
      if (xs.length === 0) {
        return "";
      }
      var lineJoiner = "\n" + indent.prev + indent.base;
      return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray(obj);
      var xs = [];
      if (isArr) {
        xs.length = obj.length;
        for (var i2 = 0; i2 < obj.length; i2++) {
          xs[i2] = has(obj, i2) ? inspect(obj[i2], obj) : "";
        }
      }
      var syms = typeof gOPS === "function" ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k2 = 0; k2 < syms.length; k2++) {
          symMap["$" + syms[k2]] = syms[k2];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
        } else {
          xs.push(key + ": " + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === "function") {
        for (var j2 = 0; j2 < syms.length; j2++) {
          if (isEnumerable.call(obj, syms[j2])) {
            xs.push("[" + inspect(syms[j2]) + "]: " + inspect(obj[syms[j2]], obj));
          }
        }
      }
      return xs;
    }
  }
});

// node_modules/side-channel/index.js
var require_side_channel = __commonJS({
  "node_modules/side-channel/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_callBound();
    var inspect = require_object_inspect();
    var $TypeError = GetIntrinsic("%TypeError%");
    var $WeakMap = GetIntrinsic("%WeakMap%", true);
    var $Map = GetIntrinsic("%Map%", true);
    var $weakMapGet = callBound("WeakMap.prototype.get", true);
    var $weakMapSet = callBound("WeakMap.prototype.set", true);
    var $weakMapHas = callBound("WeakMap.prototype.has", true);
    var $mapGet = callBound("Map.prototype.get", true);
    var $mapSet = callBound("Map.prototype.set", true);
    var $mapHas = callBound("Map.prototype.has", true);
    var listGetNode = function(list, key) {
      for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          curr.next = list.next;
          list.next = curr;
          return curr;
        }
      }
    };
    var listGet = function(objects, key) {
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function(objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = {
          key,
          next: objects.next,
          value
        };
      }
    };
    var listHas = function(objects, key) {
      return !!listGetNode(objects, key);
    };
    module.exports = function getSideChannel() {
      var $wm;
      var $m;
      var $o;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        get: function(key) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if ($wm) {
              return $weakMapGet($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapGet($m, key);
            }
          } else {
            if ($o) {
              return listGet($o, key);
            }
          }
        },
        has: function(key) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if ($wm) {
              return $weakMapHas($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapHas($m, key);
            }
          } else {
            if ($o) {
              return listHas($o, key);
            }
          }
          return false;
        },
        set: function(key, value) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if (!$wm) {
              $wm = new $WeakMap();
            }
            $weakMapSet($wm, key, value);
          } else if ($Map) {
            if (!$m) {
              $m = new $Map();
            }
            $mapSet($m, key, value);
          } else {
            if (!$o) {
              $o = { key: {}, next: null };
            }
            listSet($o, key, value);
          }
        }
      };
      return channel;
    };
  }
});

// node_modules/qs/lib/formats.js
var require_formats = __commonJS({
  "node_modules/qs/lib/formats.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: "RFC1738",
      RFC3986: "RFC3986"
    };
    module.exports = {
      "default": Format.RFC3986,
      formatters: {
        RFC1738: function(value) {
          return replace.call(value, percentTwenties, "+");
        },
        RFC3986: function(value) {
          return String(value);
        }
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986
    };
  }
});

// node_modules/qs/lib/utils.js
var require_utils2 = __commonJS({
  "node_modules/qs/lib/utils.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var hexTable = function() {
      var array = [];
      for (var i2 = 0; i2 < 256; ++i2) {
        array.push("%" + ((i2 < 16 ? "0" : "") + i2.toString(16)).toUpperCase());
      }
      return array;
    }();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
          var compacted = [];
          for (var j2 = 0; j2 < obj.length; ++j2) {
            if (typeof obj[j2] !== "undefined") {
              compacted.push(obj[j2]);
            }
          }
          item.obj[item.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj = options && options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      for (var i2 = 0; i2 < source.length; ++i2) {
        if (typeof source[i2] !== "undefined") {
          obj[i2] = source[i2];
        }
      }
      return obj;
    };
    var merge2 = function merge3(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== "object") {
        if (isArray(target)) {
          target.push(source);
        } else if (target && typeof target === "object") {
          if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== "object") {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray(target) && isArray(source)) {
        source.forEach(function(item, i2) {
          if (has.call(target, i2)) {
            var targetItem = target[i2];
            if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
              target[i2] = merge3(targetItem, item, options);
            } else {
              target.push(item);
            }
          } else {
            target[i2] = item;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge3(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode = function(str2, decoder, charset) {
      var strWithoutPlus = str2.replace(/\+/g, " ");
      if (charset === "iso-8859-1") {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e) {
        return strWithoutPlus;
      }
    };
    var encode = function encode2(str2, defaultEncoder, charset, kind, format2) {
      if (str2.length === 0) {
        return str2;
      }
      var string = str2;
      if (typeof str2 === "symbol") {
        string = Symbol.prototype.toString.call(str2);
      } else if (typeof str2 !== "string") {
        string = String(str2);
      }
      if (charset === "iso-8859-1") {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
          return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
        });
      }
      var out = "";
      for (var i2 = 0; i2 < string.length; ++i2) {
        var c2 = string.charCodeAt(i2);
        if (c2 === 45 || c2 === 46 || c2 === 95 || c2 === 126 || c2 >= 48 && c2 <= 57 || c2 >= 65 && c2 <= 90 || c2 >= 97 && c2 <= 122 || format2 === formats.RFC1738 && (c2 === 40 || c2 === 41)) {
          out += string.charAt(i2);
          continue;
        }
        if (c2 < 128) {
          out = out + hexTable[c2];
          continue;
        }
        if (c2 < 2048) {
          out = out + (hexTable[192 | c2 >> 6] + hexTable[128 | c2 & 63]);
          continue;
        }
        if (c2 < 55296 || c2 >= 57344) {
          out = out + (hexTable[224 | c2 >> 12] + hexTable[128 | c2 >> 6 & 63] + hexTable[128 | c2 & 63]);
          continue;
        }
        i2 += 1;
        c2 = 65536 + ((c2 & 1023) << 10 | string.charCodeAt(i2) & 1023);
        out += hexTable[240 | c2 >> 18] + hexTable[128 | c2 >> 12 & 63] + hexTable[128 | c2 >> 6 & 63] + hexTable[128 | c2 & 63];
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: "o" }];
      var refs = [];
      for (var i2 = 0; i2 < queue.length; ++i2) {
        var item = queue[i2];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for (var j2 = 0; j2 < keys.length; ++j2) {
          var key = keys[j2];
          var val = obj[key];
          if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === "[object RegExp]";
    };
    var isBuffer = function isBuffer2(obj) {
      if (!obj || typeof obj !== "object") {
        return false;
      }
      return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
    };
    var combine = function combine2(a2, b2) {
      return [].concat(a2, b2);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray(val)) {
        var mapped = [];
        for (var i2 = 0; i2 < val.length; i2 += 1) {
          mapped.push(fn(val[i2]));
        }
        return mapped;
      }
      return fn(val);
    };
    module.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode,
      encode,
      isBuffer,
      isRegExp,
      maybeMap,
      merge: merge2
    };
  }
});

// node_modules/qs/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/qs/lib/stringify.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var getSideChannel = require_side_channel();
    var utils = require_utils2();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix) {
        return prefix + "[]";
      },
      comma: "comma",
      indices: function indices(prefix, key) {
        return prefix + "[" + key + "]";
      },
      repeat: function repeat(prefix) {
        return prefix;
      }
    };
    var isArray = Array.isArray;
    var split = String.prototype.split;
    var push = Array.prototype.push;
    var pushToArray = function(arr, valueOrArray) {
      push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats["default"];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      charset: "utf-8",
      charsetSentinel: false,
      delimiter: "&",
      encode: true,
      encoder: utils.encode,
      encodeValuesOnly: false,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
      return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint";
    };
    var sentinel = {};
    var stringify = function stringify2(object, prefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format2, formatter, encodeValuesOnly, charset, sideChannel) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== "undefined") {
          if (pos === step) {
            throw new RangeError("Cyclic object value");
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === "undefined") {
          step = 0;
        }
      }
      if (typeof filter === "function") {
        obj = filter(prefix, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === "comma" && isArray(obj)) {
        obj = utils.maybeMap(obj, function(value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, "key", format2) : prefix;
        }
        obj = "";
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
          var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, "key", format2);
          if (generateArrayPrefix === "comma" && encodeValuesOnly) {
            var valuesArray = split.call(String(obj), ",");
            var valuesJoined = "";
            for (var i2 = 0; i2 < valuesArray.length; ++i2) {
              valuesJoined += (i2 === 0 ? "" : ",") + formatter(encoder(valuesArray[i2], defaults.encoder, charset, "value", format2));
            }
            return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? "[]" : "") + "=" + valuesJoined];
          }
          return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset, "value", format2))];
        }
        return [formatter(prefix) + "=" + formatter(String(obj))];
      }
      var values = [];
      if (typeof obj === "undefined") {
        return values;
      }
      var objKeys;
      if (generateArrayPrefix === "comma" && isArray(obj)) {
        objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
      } else if (isArray(filter)) {
        objKeys = filter;
      } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
      }
      var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + "[]" : prefix;
      for (var j2 = 0; j2 < objKeys.length; ++j2) {
        var key = objKeys[j2];
        var value = typeof key === "object" && typeof key.value !== "undefined" ? key.value : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + key : "[" + key + "]");
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values, stringify2(
          value,
          keyPrefix,
          generateArrayPrefix,
          commaRoundTrip,
          strictNullHandling,
          skipNulls,
          encoder,
          filter,
          sort,
          allowDots,
          serializeDate,
          format2,
          formatter,
          encodeValuesOnly,
          charset,
          valueSideChannel
        ));
      }
      return values;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
        throw new TypeError("Encoder has to be a function.");
      }
      var charset = opts.charset || defaults.charset;
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var format2 = formats["default"];
      if (typeof opts.format !== "undefined") {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError("Unknown format option provided.");
        }
        format2 = opts.format;
      }
      var formatter = formats.formatters[format2];
      var filter = defaults.filter;
      if (typeof opts.filter === "function" || isArray(opts.filter)) {
        filter = opts.filter;
      }
      return {
        addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter,
        format: format2,
        formatter,
        serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === "function" ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module.exports = function(object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter;
      if (typeof options.filter === "function") {
        filter = options.filter;
        obj = filter("", obj);
      } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
      }
      var keys = [];
      if (typeof obj !== "object" || obj === null) {
        return "";
      }
      var arrayFormat;
      if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if (opts && "indices" in opts) {
        arrayFormat = opts.indices ? "indices" : "repeat";
      } else {
        arrayFormat = "indices";
      }
      var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
      if (opts && "commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
        throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
      }
      var commaRoundTrip = generateArrayPrefix === "comma" && opts && opts.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i2 = 0; i2 < objKeys.length; ++i2) {
        var key = objKeys[i2];
        if (options.skipNulls && obj[key] === null) {
          continue;
        }
        pushToArray(keys, stringify(
          obj[key],
          key,
          generateArrayPrefix,
          commaRoundTrip,
          options.strictNullHandling,
          options.skipNulls,
          options.encode ? options.encoder : null,
          options.filter,
          options.sort,
          options.allowDots,
          options.serializeDate,
          options.format,
          options.formatter,
          options.encodeValuesOnly,
          options.charset,
          sideChannel
        ));
      }
      var joined = keys.join(options.delimiter);
      var prefix = options.addQueryPrefix === true ? "?" : "";
      if (options.charsetSentinel) {
        if (options.charset === "iso-8859-1") {
          prefix += "utf8=%26%2310003%3B&";
        } else {
          prefix += "utf8=%E2%9C%93&";
        }
      }
      return joined.length > 0 ? prefix + joined : "";
    };
  }
});

// node_modules/qs/lib/parse.js
var require_parse = __commonJS({
  "node_modules/qs/lib/parse.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var utils = require_utils2();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var defaults = {
      allowDots: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: "utf-8",
      charsetSentinel: false,
      comma: false,
      decoder: utils.decode,
      delimiter: "&",
      depth: 5,
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictNullHandling: false
    };
    var interpretNumericEntities = function(str2) {
      return str2.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function(val, options) {
      if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
        return val.split(",");
      }
      return val;
    };
    var isoSentinel = "utf8=%26%2310003%3B";
    var charsetSentinel = "utf8=%E2%9C%93";
    var parseValues = function parseQueryStringValues(str2, options) {
      var obj = {};
      var cleanStr = options.ignoreQueryPrefix ? str2.replace(/^\?/, "") : str2;
      var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(options.delimiter, limit);
      var skipIndex = -1;
      var i2;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i2 = 0; i2 < parts.length; ++i2) {
          if (parts[i2].indexOf("utf8=") === 0) {
            if (parts[i2] === charsetSentinel) {
              charset = "utf-8";
            } else if (parts[i2] === isoSentinel) {
              charset = "iso-8859-1";
            }
            skipIndex = i2;
            i2 = parts.length;
          }
        }
      }
      for (i2 = 0; i2 < parts.length; ++i2) {
        if (i2 === skipIndex) {
          continue;
        }
        var part = parts[i2];
        var bracketEqualsPos = part.indexOf("]=");
        var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, "key");
          val = options.strictNullHandling ? null : "";
        } else {
          key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
          val = utils.maybeMap(
            parseArrayValue(part.slice(pos + 1), options),
            function(encodedVal) {
              return options.decoder(encodedVal, defaults.decoder, charset, "value");
            }
          );
        }
        if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
          val = interpretNumericEntities(val);
        }
        if (part.indexOf("[]=") > -1) {
          val = isArray(val) ? [val] : val;
        }
        if (has.call(obj, key)) {
          obj[key] = utils.combine(obj[key], val);
        } else {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function(chain, val, options, valuesParsed) {
      var leaf = valuesParsed ? val : parseArrayValue(val, options);
      for (var i2 = chain.length - 1; i2 >= 0; --i2) {
        var obj;
        var root = chain[i2];
        if (root === "[]" && options.parseArrays) {
          obj = [].concat(leaf);
        } else {
          obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
          var index = parseInt(cleanRoot, 10);
          if (!options.parseArrays && cleanRoot === "") {
            obj = { 0: leaf };
          } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
            obj = [];
            obj[index] = leaf;
          } else if (cleanRoot !== "__proto__") {
            obj[cleanRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(parent);
      }
      var i2 = 0;
      while (options.depth > 0 && (segment = child.exec(key)) !== null && i2 < options.depth) {
        i2 += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(segment[1]);
      }
      if (segment) {
        keys.push("[" + key.slice(segment.index) + "]");
      }
      return parseObject(keys, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (opts.decoder !== null && opts.decoder !== void 0 && typeof opts.decoder !== "function") {
        throw new TypeError("Decoder has to be a function.");
      }
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
      return {
        allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module.exports = function(str2, opts) {
      var options = normalizeParseOptions(opts);
      if (str2 === "" || str2 === null || typeof str2 === "undefined") {
        return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      }
      var tempObj = typeof str2 === "string" ? parseValues(str2, options) : str2;
      var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var keys = Object.keys(tempObj);
      for (var i2 = 0; i2 < keys.length; ++i2) {
        var key = keys[i2];
        var newObj = parseKeys(key, tempObj[key], options, typeof str2 === "string");
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  }
});

// node_modules/qs/lib/index.js
var require_lib = __commonJS({
  "node_modules/qs/lib/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var stringify = require_stringify();
    var parse2 = require_parse();
    var formats = require_formats();
    module.exports = {
      formats,
      parse: parse2,
      stringify
    };
  }
});

// node_modules/entities/lib/maps/entities.json
var require_entities = __commonJS({
  "node_modules/entities/lib/maps/entities.json"(exports, module) {
    module.exports = { Aacute: "\xC1", aacute: "\xE1", Abreve: "\u0102", abreve: "\u0103", ac: "\u223E", acd: "\u223F", acE: "\u223E\u0333", Acirc: "\xC2", acirc: "\xE2", acute: "\xB4", Acy: "\u0410", acy: "\u0430", AElig: "\xC6", aelig: "\xE6", af: "\u2061", Afr: "\u{1D504}", afr: "\u{1D51E}", Agrave: "\xC0", agrave: "\xE0", alefsym: "\u2135", aleph: "\u2135", Alpha: "\u0391", alpha: "\u03B1", Amacr: "\u0100", amacr: "\u0101", amalg: "\u2A3F", amp: "&", AMP: "&", andand: "\u2A55", And: "\u2A53", and: "\u2227", andd: "\u2A5C", andslope: "\u2A58", andv: "\u2A5A", ang: "\u2220", ange: "\u29A4", angle: "\u2220", angmsdaa: "\u29A8", angmsdab: "\u29A9", angmsdac: "\u29AA", angmsdad: "\u29AB", angmsdae: "\u29AC", angmsdaf: "\u29AD", angmsdag: "\u29AE", angmsdah: "\u29AF", angmsd: "\u2221", angrt: "\u221F", angrtvb: "\u22BE", angrtvbd: "\u299D", angsph: "\u2222", angst: "\xC5", angzarr: "\u237C", Aogon: "\u0104", aogon: "\u0105", Aopf: "\u{1D538}", aopf: "\u{1D552}", apacir: "\u2A6F", ap: "\u2248", apE: "\u2A70", ape: "\u224A", apid: "\u224B", apos: "'", ApplyFunction: "\u2061", approx: "\u2248", approxeq: "\u224A", Aring: "\xC5", aring: "\xE5", Ascr: "\u{1D49C}", ascr: "\u{1D4B6}", Assign: "\u2254", ast: "*", asymp: "\u2248", asympeq: "\u224D", Atilde: "\xC3", atilde: "\xE3", Auml: "\xC4", auml: "\xE4", awconint: "\u2233", awint: "\u2A11", backcong: "\u224C", backepsilon: "\u03F6", backprime: "\u2035", backsim: "\u223D", backsimeq: "\u22CD", Backslash: "\u2216", Barv: "\u2AE7", barvee: "\u22BD", barwed: "\u2305", Barwed: "\u2306", barwedge: "\u2305", bbrk: "\u23B5", bbrktbrk: "\u23B6", bcong: "\u224C", Bcy: "\u0411", bcy: "\u0431", bdquo: "\u201E", becaus: "\u2235", because: "\u2235", Because: "\u2235", bemptyv: "\u29B0", bepsi: "\u03F6", bernou: "\u212C", Bernoullis: "\u212C", Beta: "\u0392", beta: "\u03B2", beth: "\u2136", between: "\u226C", Bfr: "\u{1D505}", bfr: "\u{1D51F}", bigcap: "\u22C2", bigcirc: "\u25EF", bigcup: "\u22C3", bigodot: "\u2A00", bigoplus: "\u2A01", bigotimes: "\u2A02", bigsqcup: "\u2A06", bigstar: "\u2605", bigtriangledown: "\u25BD", bigtriangleup: "\u25B3", biguplus: "\u2A04", bigvee: "\u22C1", bigwedge: "\u22C0", bkarow: "\u290D", blacklozenge: "\u29EB", blacksquare: "\u25AA", blacktriangle: "\u25B4", blacktriangledown: "\u25BE", blacktriangleleft: "\u25C2", blacktriangleright: "\u25B8", blank: "\u2423", blk12: "\u2592", blk14: "\u2591", blk34: "\u2593", block: "\u2588", bne: "=\u20E5", bnequiv: "\u2261\u20E5", bNot: "\u2AED", bnot: "\u2310", Bopf: "\u{1D539}", bopf: "\u{1D553}", bot: "\u22A5", bottom: "\u22A5", bowtie: "\u22C8", boxbox: "\u29C9", boxdl: "\u2510", boxdL: "\u2555", boxDl: "\u2556", boxDL: "\u2557", boxdr: "\u250C", boxdR: "\u2552", boxDr: "\u2553", boxDR: "\u2554", boxh: "\u2500", boxH: "\u2550", boxhd: "\u252C", boxHd: "\u2564", boxhD: "\u2565", boxHD: "\u2566", boxhu: "\u2534", boxHu: "\u2567", boxhU: "\u2568", boxHU: "\u2569", boxminus: "\u229F", boxplus: "\u229E", boxtimes: "\u22A0", boxul: "\u2518", boxuL: "\u255B", boxUl: "\u255C", boxUL: "\u255D", boxur: "\u2514", boxuR: "\u2558", boxUr: "\u2559", boxUR: "\u255A", boxv: "\u2502", boxV: "\u2551", boxvh: "\u253C", boxvH: "\u256A", boxVh: "\u256B", boxVH: "\u256C", boxvl: "\u2524", boxvL: "\u2561", boxVl: "\u2562", boxVL: "\u2563", boxvr: "\u251C", boxvR: "\u255E", boxVr: "\u255F", boxVR: "\u2560", bprime: "\u2035", breve: "\u02D8", Breve: "\u02D8", brvbar: "\xA6", bscr: "\u{1D4B7}", Bscr: "\u212C", bsemi: "\u204F", bsim: "\u223D", bsime: "\u22CD", bsolb: "\u29C5", bsol: "\\", bsolhsub: "\u27C8", bull: "\u2022", bullet: "\u2022", bump: "\u224E", bumpE: "\u2AAE", bumpe: "\u224F", Bumpeq: "\u224E", bumpeq: "\u224F", Cacute: "\u0106", cacute: "\u0107", capand: "\u2A44", capbrcup: "\u2A49", capcap: "\u2A4B", cap: "\u2229", Cap: "\u22D2", capcup: "\u2A47", capdot: "\u2A40", CapitalDifferentialD: "\u2145", caps: "\u2229\uFE00", caret: "\u2041", caron: "\u02C7", Cayleys: "\u212D", ccaps: "\u2A4D", Ccaron: "\u010C", ccaron: "\u010D", Ccedil: "\xC7", ccedil: "\xE7", Ccirc: "\u0108", ccirc: "\u0109", Cconint: "\u2230", ccups: "\u2A4C", ccupssm: "\u2A50", Cdot: "\u010A", cdot: "\u010B", cedil: "\xB8", Cedilla: "\xB8", cemptyv: "\u29B2", cent: "\xA2", centerdot: "\xB7", CenterDot: "\xB7", cfr: "\u{1D520}", Cfr: "\u212D", CHcy: "\u0427", chcy: "\u0447", check: "\u2713", checkmark: "\u2713", Chi: "\u03A7", chi: "\u03C7", circ: "\u02C6", circeq: "\u2257", circlearrowleft: "\u21BA", circlearrowright: "\u21BB", circledast: "\u229B", circledcirc: "\u229A", circleddash: "\u229D", CircleDot: "\u2299", circledR: "\xAE", circledS: "\u24C8", CircleMinus: "\u2296", CirclePlus: "\u2295", CircleTimes: "\u2297", cir: "\u25CB", cirE: "\u29C3", cire: "\u2257", cirfnint: "\u2A10", cirmid: "\u2AEF", cirscir: "\u29C2", ClockwiseContourIntegral: "\u2232", CloseCurlyDoubleQuote: "\u201D", CloseCurlyQuote: "\u2019", clubs: "\u2663", clubsuit: "\u2663", colon: ":", Colon: "\u2237", Colone: "\u2A74", colone: "\u2254", coloneq: "\u2254", comma: ",", commat: "@", comp: "\u2201", compfn: "\u2218", complement: "\u2201", complexes: "\u2102", cong: "\u2245", congdot: "\u2A6D", Congruent: "\u2261", conint: "\u222E", Conint: "\u222F", ContourIntegral: "\u222E", copf: "\u{1D554}", Copf: "\u2102", coprod: "\u2210", Coproduct: "\u2210", copy: "\xA9", COPY: "\xA9", copysr: "\u2117", CounterClockwiseContourIntegral: "\u2233", crarr: "\u21B5", cross: "\u2717", Cross: "\u2A2F", Cscr: "\u{1D49E}", cscr: "\u{1D4B8}", csub: "\u2ACF", csube: "\u2AD1", csup: "\u2AD0", csupe: "\u2AD2", ctdot: "\u22EF", cudarrl: "\u2938", cudarrr: "\u2935", cuepr: "\u22DE", cuesc: "\u22DF", cularr: "\u21B6", cularrp: "\u293D", cupbrcap: "\u2A48", cupcap: "\u2A46", CupCap: "\u224D", cup: "\u222A", Cup: "\u22D3", cupcup: "\u2A4A", cupdot: "\u228D", cupor: "\u2A45", cups: "\u222A\uFE00", curarr: "\u21B7", curarrm: "\u293C", curlyeqprec: "\u22DE", curlyeqsucc: "\u22DF", curlyvee: "\u22CE", curlywedge: "\u22CF", curren: "\xA4", curvearrowleft: "\u21B6", curvearrowright: "\u21B7", cuvee: "\u22CE", cuwed: "\u22CF", cwconint: "\u2232", cwint: "\u2231", cylcty: "\u232D", dagger: "\u2020", Dagger: "\u2021", daleth: "\u2138", darr: "\u2193", Darr: "\u21A1", dArr: "\u21D3", dash: "\u2010", Dashv: "\u2AE4", dashv: "\u22A3", dbkarow: "\u290F", dblac: "\u02DD", Dcaron: "\u010E", dcaron: "\u010F", Dcy: "\u0414", dcy: "\u0434", ddagger: "\u2021", ddarr: "\u21CA", DD: "\u2145", dd: "\u2146", DDotrahd: "\u2911", ddotseq: "\u2A77", deg: "\xB0", Del: "\u2207", Delta: "\u0394", delta: "\u03B4", demptyv: "\u29B1", dfisht: "\u297F", Dfr: "\u{1D507}", dfr: "\u{1D521}", dHar: "\u2965", dharl: "\u21C3", dharr: "\u21C2", DiacriticalAcute: "\xB4", DiacriticalDot: "\u02D9", DiacriticalDoubleAcute: "\u02DD", DiacriticalGrave: "`", DiacriticalTilde: "\u02DC", diam: "\u22C4", diamond: "\u22C4", Diamond: "\u22C4", diamondsuit: "\u2666", diams: "\u2666", die: "\xA8", DifferentialD: "\u2146", digamma: "\u03DD", disin: "\u22F2", div: "\xF7", divide: "\xF7", divideontimes: "\u22C7", divonx: "\u22C7", DJcy: "\u0402", djcy: "\u0452", dlcorn: "\u231E", dlcrop: "\u230D", dollar: "$", Dopf: "\u{1D53B}", dopf: "\u{1D555}", Dot: "\xA8", dot: "\u02D9", DotDot: "\u20DC", doteq: "\u2250", doteqdot: "\u2251", DotEqual: "\u2250", dotminus: "\u2238", dotplus: "\u2214", dotsquare: "\u22A1", doublebarwedge: "\u2306", DoubleContourIntegral: "\u222F", DoubleDot: "\xA8", DoubleDownArrow: "\u21D3", DoubleLeftArrow: "\u21D0", DoubleLeftRightArrow: "\u21D4", DoubleLeftTee: "\u2AE4", DoubleLongLeftArrow: "\u27F8", DoubleLongLeftRightArrow: "\u27FA", DoubleLongRightArrow: "\u27F9", DoubleRightArrow: "\u21D2", DoubleRightTee: "\u22A8", DoubleUpArrow: "\u21D1", DoubleUpDownArrow: "\u21D5", DoubleVerticalBar: "\u2225", DownArrowBar: "\u2913", downarrow: "\u2193", DownArrow: "\u2193", Downarrow: "\u21D3", DownArrowUpArrow: "\u21F5", DownBreve: "\u0311", downdownarrows: "\u21CA", downharpoonleft: "\u21C3", downharpoonright: "\u21C2", DownLeftRightVector: "\u2950", DownLeftTeeVector: "\u295E", DownLeftVectorBar: "\u2956", DownLeftVector: "\u21BD", DownRightTeeVector: "\u295F", DownRightVectorBar: "\u2957", DownRightVector: "\u21C1", DownTeeArrow: "\u21A7", DownTee: "\u22A4", drbkarow: "\u2910", drcorn: "\u231F", drcrop: "\u230C", Dscr: "\u{1D49F}", dscr: "\u{1D4B9}", DScy: "\u0405", dscy: "\u0455", dsol: "\u29F6", Dstrok: "\u0110", dstrok: "\u0111", dtdot: "\u22F1", dtri: "\u25BF", dtrif: "\u25BE", duarr: "\u21F5", duhar: "\u296F", dwangle: "\u29A6", DZcy: "\u040F", dzcy: "\u045F", dzigrarr: "\u27FF", Eacute: "\xC9", eacute: "\xE9", easter: "\u2A6E", Ecaron: "\u011A", ecaron: "\u011B", Ecirc: "\xCA", ecirc: "\xEA", ecir: "\u2256", ecolon: "\u2255", Ecy: "\u042D", ecy: "\u044D", eDDot: "\u2A77", Edot: "\u0116", edot: "\u0117", eDot: "\u2251", ee: "\u2147", efDot: "\u2252", Efr: "\u{1D508}", efr: "\u{1D522}", eg: "\u2A9A", Egrave: "\xC8", egrave: "\xE8", egs: "\u2A96", egsdot: "\u2A98", el: "\u2A99", Element: "\u2208", elinters: "\u23E7", ell: "\u2113", els: "\u2A95", elsdot: "\u2A97", Emacr: "\u0112", emacr: "\u0113", empty: "\u2205", emptyset: "\u2205", EmptySmallSquare: "\u25FB", emptyv: "\u2205", EmptyVerySmallSquare: "\u25AB", emsp13: "\u2004", emsp14: "\u2005", emsp: "\u2003", ENG: "\u014A", eng: "\u014B", ensp: "\u2002", Eogon: "\u0118", eogon: "\u0119", Eopf: "\u{1D53C}", eopf: "\u{1D556}", epar: "\u22D5", eparsl: "\u29E3", eplus: "\u2A71", epsi: "\u03B5", Epsilon: "\u0395", epsilon: "\u03B5", epsiv: "\u03F5", eqcirc: "\u2256", eqcolon: "\u2255", eqsim: "\u2242", eqslantgtr: "\u2A96", eqslantless: "\u2A95", Equal: "\u2A75", equals: "=", EqualTilde: "\u2242", equest: "\u225F", Equilibrium: "\u21CC", equiv: "\u2261", equivDD: "\u2A78", eqvparsl: "\u29E5", erarr: "\u2971", erDot: "\u2253", escr: "\u212F", Escr: "\u2130", esdot: "\u2250", Esim: "\u2A73", esim: "\u2242", Eta: "\u0397", eta: "\u03B7", ETH: "\xD0", eth: "\xF0", Euml: "\xCB", euml: "\xEB", euro: "\u20AC", excl: "!", exist: "\u2203", Exists: "\u2203", expectation: "\u2130", exponentiale: "\u2147", ExponentialE: "\u2147", fallingdotseq: "\u2252", Fcy: "\u0424", fcy: "\u0444", female: "\u2640", ffilig: "\uFB03", fflig: "\uFB00", ffllig: "\uFB04", Ffr: "\u{1D509}", ffr: "\u{1D523}", filig: "\uFB01", FilledSmallSquare: "\u25FC", FilledVerySmallSquare: "\u25AA", fjlig: "fj", flat: "\u266D", fllig: "\uFB02", fltns: "\u25B1", fnof: "\u0192", Fopf: "\u{1D53D}", fopf: "\u{1D557}", forall: "\u2200", ForAll: "\u2200", fork: "\u22D4", forkv: "\u2AD9", Fouriertrf: "\u2131", fpartint: "\u2A0D", frac12: "\xBD", frac13: "\u2153", frac14: "\xBC", frac15: "\u2155", frac16: "\u2159", frac18: "\u215B", frac23: "\u2154", frac25: "\u2156", frac34: "\xBE", frac35: "\u2157", frac38: "\u215C", frac45: "\u2158", frac56: "\u215A", frac58: "\u215D", frac78: "\u215E", frasl: "\u2044", frown: "\u2322", fscr: "\u{1D4BB}", Fscr: "\u2131", gacute: "\u01F5", Gamma: "\u0393", gamma: "\u03B3", Gammad: "\u03DC", gammad: "\u03DD", gap: "\u2A86", Gbreve: "\u011E", gbreve: "\u011F", Gcedil: "\u0122", Gcirc: "\u011C", gcirc: "\u011D", Gcy: "\u0413", gcy: "\u0433", Gdot: "\u0120", gdot: "\u0121", ge: "\u2265", gE: "\u2267", gEl: "\u2A8C", gel: "\u22DB", geq: "\u2265", geqq: "\u2267", geqslant: "\u2A7E", gescc: "\u2AA9", ges: "\u2A7E", gesdot: "\u2A80", gesdoto: "\u2A82", gesdotol: "\u2A84", gesl: "\u22DB\uFE00", gesles: "\u2A94", Gfr: "\u{1D50A}", gfr: "\u{1D524}", gg: "\u226B", Gg: "\u22D9", ggg: "\u22D9", gimel: "\u2137", GJcy: "\u0403", gjcy: "\u0453", gla: "\u2AA5", gl: "\u2277", glE: "\u2A92", glj: "\u2AA4", gnap: "\u2A8A", gnapprox: "\u2A8A", gne: "\u2A88", gnE: "\u2269", gneq: "\u2A88", gneqq: "\u2269", gnsim: "\u22E7", Gopf: "\u{1D53E}", gopf: "\u{1D558}", grave: "`", GreaterEqual: "\u2265", GreaterEqualLess: "\u22DB", GreaterFullEqual: "\u2267", GreaterGreater: "\u2AA2", GreaterLess: "\u2277", GreaterSlantEqual: "\u2A7E", GreaterTilde: "\u2273", Gscr: "\u{1D4A2}", gscr: "\u210A", gsim: "\u2273", gsime: "\u2A8E", gsiml: "\u2A90", gtcc: "\u2AA7", gtcir: "\u2A7A", gt: ">", GT: ">", Gt: "\u226B", gtdot: "\u22D7", gtlPar: "\u2995", gtquest: "\u2A7C", gtrapprox: "\u2A86", gtrarr: "\u2978", gtrdot: "\u22D7", gtreqless: "\u22DB", gtreqqless: "\u2A8C", gtrless: "\u2277", gtrsim: "\u2273", gvertneqq: "\u2269\uFE00", gvnE: "\u2269\uFE00", Hacek: "\u02C7", hairsp: "\u200A", half: "\xBD", hamilt: "\u210B", HARDcy: "\u042A", hardcy: "\u044A", harrcir: "\u2948", harr: "\u2194", hArr: "\u21D4", harrw: "\u21AD", Hat: "^", hbar: "\u210F", Hcirc: "\u0124", hcirc: "\u0125", hearts: "\u2665", heartsuit: "\u2665", hellip: "\u2026", hercon: "\u22B9", hfr: "\u{1D525}", Hfr: "\u210C", HilbertSpace: "\u210B", hksearow: "\u2925", hkswarow: "\u2926", hoarr: "\u21FF", homtht: "\u223B", hookleftarrow: "\u21A9", hookrightarrow: "\u21AA", hopf: "\u{1D559}", Hopf: "\u210D", horbar: "\u2015", HorizontalLine: "\u2500", hscr: "\u{1D4BD}", Hscr: "\u210B", hslash: "\u210F", Hstrok: "\u0126", hstrok: "\u0127", HumpDownHump: "\u224E", HumpEqual: "\u224F", hybull: "\u2043", hyphen: "\u2010", Iacute: "\xCD", iacute: "\xED", ic: "\u2063", Icirc: "\xCE", icirc: "\xEE", Icy: "\u0418", icy: "\u0438", Idot: "\u0130", IEcy: "\u0415", iecy: "\u0435", iexcl: "\xA1", iff: "\u21D4", ifr: "\u{1D526}", Ifr: "\u2111", Igrave: "\xCC", igrave: "\xEC", ii: "\u2148", iiiint: "\u2A0C", iiint: "\u222D", iinfin: "\u29DC", iiota: "\u2129", IJlig: "\u0132", ijlig: "\u0133", Imacr: "\u012A", imacr: "\u012B", image: "\u2111", ImaginaryI: "\u2148", imagline: "\u2110", imagpart: "\u2111", imath: "\u0131", Im: "\u2111", imof: "\u22B7", imped: "\u01B5", Implies: "\u21D2", incare: "\u2105", in: "\u2208", infin: "\u221E", infintie: "\u29DD", inodot: "\u0131", intcal: "\u22BA", int: "\u222B", Int: "\u222C", integers: "\u2124", Integral: "\u222B", intercal: "\u22BA", Intersection: "\u22C2", intlarhk: "\u2A17", intprod: "\u2A3C", InvisibleComma: "\u2063", InvisibleTimes: "\u2062", IOcy: "\u0401", iocy: "\u0451", Iogon: "\u012E", iogon: "\u012F", Iopf: "\u{1D540}", iopf: "\u{1D55A}", Iota: "\u0399", iota: "\u03B9", iprod: "\u2A3C", iquest: "\xBF", iscr: "\u{1D4BE}", Iscr: "\u2110", isin: "\u2208", isindot: "\u22F5", isinE: "\u22F9", isins: "\u22F4", isinsv: "\u22F3", isinv: "\u2208", it: "\u2062", Itilde: "\u0128", itilde: "\u0129", Iukcy: "\u0406", iukcy: "\u0456", Iuml: "\xCF", iuml: "\xEF", Jcirc: "\u0134", jcirc: "\u0135", Jcy: "\u0419", jcy: "\u0439", Jfr: "\u{1D50D}", jfr: "\u{1D527}", jmath: "\u0237", Jopf: "\u{1D541}", jopf: "\u{1D55B}", Jscr: "\u{1D4A5}", jscr: "\u{1D4BF}", Jsercy: "\u0408", jsercy: "\u0458", Jukcy: "\u0404", jukcy: "\u0454", Kappa: "\u039A", kappa: "\u03BA", kappav: "\u03F0", Kcedil: "\u0136", kcedil: "\u0137", Kcy: "\u041A", kcy: "\u043A", Kfr: "\u{1D50E}", kfr: "\u{1D528}", kgreen: "\u0138", KHcy: "\u0425", khcy: "\u0445", KJcy: "\u040C", kjcy: "\u045C", Kopf: "\u{1D542}", kopf: "\u{1D55C}", Kscr: "\u{1D4A6}", kscr: "\u{1D4C0}", lAarr: "\u21DA", Lacute: "\u0139", lacute: "\u013A", laemptyv: "\u29B4", lagran: "\u2112", Lambda: "\u039B", lambda: "\u03BB", lang: "\u27E8", Lang: "\u27EA", langd: "\u2991", langle: "\u27E8", lap: "\u2A85", Laplacetrf: "\u2112", laquo: "\xAB", larrb: "\u21E4", larrbfs: "\u291F", larr: "\u2190", Larr: "\u219E", lArr: "\u21D0", larrfs: "\u291D", larrhk: "\u21A9", larrlp: "\u21AB", larrpl: "\u2939", larrsim: "\u2973", larrtl: "\u21A2", latail: "\u2919", lAtail: "\u291B", lat: "\u2AAB", late: "\u2AAD", lates: "\u2AAD\uFE00", lbarr: "\u290C", lBarr: "\u290E", lbbrk: "\u2772", lbrace: "{", lbrack: "[", lbrke: "\u298B", lbrksld: "\u298F", lbrkslu: "\u298D", Lcaron: "\u013D", lcaron: "\u013E", Lcedil: "\u013B", lcedil: "\u013C", lceil: "\u2308", lcub: "{", Lcy: "\u041B", lcy: "\u043B", ldca: "\u2936", ldquo: "\u201C", ldquor: "\u201E", ldrdhar: "\u2967", ldrushar: "\u294B", ldsh: "\u21B2", le: "\u2264", lE: "\u2266", LeftAngleBracket: "\u27E8", LeftArrowBar: "\u21E4", leftarrow: "\u2190", LeftArrow: "\u2190", Leftarrow: "\u21D0", LeftArrowRightArrow: "\u21C6", leftarrowtail: "\u21A2", LeftCeiling: "\u2308", LeftDoubleBracket: "\u27E6", LeftDownTeeVector: "\u2961", LeftDownVectorBar: "\u2959", LeftDownVector: "\u21C3", LeftFloor: "\u230A", leftharpoondown: "\u21BD", leftharpoonup: "\u21BC", leftleftarrows: "\u21C7", leftrightarrow: "\u2194", LeftRightArrow: "\u2194", Leftrightarrow: "\u21D4", leftrightarrows: "\u21C6", leftrightharpoons: "\u21CB", leftrightsquigarrow: "\u21AD", LeftRightVector: "\u294E", LeftTeeArrow: "\u21A4", LeftTee: "\u22A3", LeftTeeVector: "\u295A", leftthreetimes: "\u22CB", LeftTriangleBar: "\u29CF", LeftTriangle: "\u22B2", LeftTriangleEqual: "\u22B4", LeftUpDownVector: "\u2951", LeftUpTeeVector: "\u2960", LeftUpVectorBar: "\u2958", LeftUpVector: "\u21BF", LeftVectorBar: "\u2952", LeftVector: "\u21BC", lEg: "\u2A8B", leg: "\u22DA", leq: "\u2264", leqq: "\u2266", leqslant: "\u2A7D", lescc: "\u2AA8", les: "\u2A7D", lesdot: "\u2A7F", lesdoto: "\u2A81", lesdotor: "\u2A83", lesg: "\u22DA\uFE00", lesges: "\u2A93", lessapprox: "\u2A85", lessdot: "\u22D6", lesseqgtr: "\u22DA", lesseqqgtr: "\u2A8B", LessEqualGreater: "\u22DA", LessFullEqual: "\u2266", LessGreater: "\u2276", lessgtr: "\u2276", LessLess: "\u2AA1", lesssim: "\u2272", LessSlantEqual: "\u2A7D", LessTilde: "\u2272", lfisht: "\u297C", lfloor: "\u230A", Lfr: "\u{1D50F}", lfr: "\u{1D529}", lg: "\u2276", lgE: "\u2A91", lHar: "\u2962", lhard: "\u21BD", lharu: "\u21BC", lharul: "\u296A", lhblk: "\u2584", LJcy: "\u0409", ljcy: "\u0459", llarr: "\u21C7", ll: "\u226A", Ll: "\u22D8", llcorner: "\u231E", Lleftarrow: "\u21DA", llhard: "\u296B", lltri: "\u25FA", Lmidot: "\u013F", lmidot: "\u0140", lmoustache: "\u23B0", lmoust: "\u23B0", lnap: "\u2A89", lnapprox: "\u2A89", lne: "\u2A87", lnE: "\u2268", lneq: "\u2A87", lneqq: "\u2268", lnsim: "\u22E6", loang: "\u27EC", loarr: "\u21FD", lobrk: "\u27E6", longleftarrow: "\u27F5", LongLeftArrow: "\u27F5", Longleftarrow: "\u27F8", longleftrightarrow: "\u27F7", LongLeftRightArrow: "\u27F7", Longleftrightarrow: "\u27FA", longmapsto: "\u27FC", longrightarrow: "\u27F6", LongRightArrow: "\u27F6", Longrightarrow: "\u27F9", looparrowleft: "\u21AB", looparrowright: "\u21AC", lopar: "\u2985", Lopf: "\u{1D543}", lopf: "\u{1D55D}", loplus: "\u2A2D", lotimes: "\u2A34", lowast: "\u2217", lowbar: "_", LowerLeftArrow: "\u2199", LowerRightArrow: "\u2198", loz: "\u25CA", lozenge: "\u25CA", lozf: "\u29EB", lpar: "(", lparlt: "\u2993", lrarr: "\u21C6", lrcorner: "\u231F", lrhar: "\u21CB", lrhard: "\u296D", lrm: "\u200E", lrtri: "\u22BF", lsaquo: "\u2039", lscr: "\u{1D4C1}", Lscr: "\u2112", lsh: "\u21B0", Lsh: "\u21B0", lsim: "\u2272", lsime: "\u2A8D", lsimg: "\u2A8F", lsqb: "[", lsquo: "\u2018", lsquor: "\u201A", Lstrok: "\u0141", lstrok: "\u0142", ltcc: "\u2AA6", ltcir: "\u2A79", lt: "<", LT: "<", Lt: "\u226A", ltdot: "\u22D6", lthree: "\u22CB", ltimes: "\u22C9", ltlarr: "\u2976", ltquest: "\u2A7B", ltri: "\u25C3", ltrie: "\u22B4", ltrif: "\u25C2", ltrPar: "\u2996", lurdshar: "\u294A", luruhar: "\u2966", lvertneqq: "\u2268\uFE00", lvnE: "\u2268\uFE00", macr: "\xAF", male: "\u2642", malt: "\u2720", maltese: "\u2720", Map: "\u2905", map: "\u21A6", mapsto: "\u21A6", mapstodown: "\u21A7", mapstoleft: "\u21A4", mapstoup: "\u21A5", marker: "\u25AE", mcomma: "\u2A29", Mcy: "\u041C", mcy: "\u043C", mdash: "\u2014", mDDot: "\u223A", measuredangle: "\u2221", MediumSpace: "\u205F", Mellintrf: "\u2133", Mfr: "\u{1D510}", mfr: "\u{1D52A}", mho: "\u2127", micro: "\xB5", midast: "*", midcir: "\u2AF0", mid: "\u2223", middot: "\xB7", minusb: "\u229F", minus: "\u2212", minusd: "\u2238", minusdu: "\u2A2A", MinusPlus: "\u2213", mlcp: "\u2ADB", mldr: "\u2026", mnplus: "\u2213", models: "\u22A7", Mopf: "\u{1D544}", mopf: "\u{1D55E}", mp: "\u2213", mscr: "\u{1D4C2}", Mscr: "\u2133", mstpos: "\u223E", Mu: "\u039C", mu: "\u03BC", multimap: "\u22B8", mumap: "\u22B8", nabla: "\u2207", Nacute: "\u0143", nacute: "\u0144", nang: "\u2220\u20D2", nap: "\u2249", napE: "\u2A70\u0338", napid: "\u224B\u0338", napos: "\u0149", napprox: "\u2249", natural: "\u266E", naturals: "\u2115", natur: "\u266E", nbsp: "\xA0", nbump: "\u224E\u0338", nbumpe: "\u224F\u0338", ncap: "\u2A43", Ncaron: "\u0147", ncaron: "\u0148", Ncedil: "\u0145", ncedil: "\u0146", ncong: "\u2247", ncongdot: "\u2A6D\u0338", ncup: "\u2A42", Ncy: "\u041D", ncy: "\u043D", ndash: "\u2013", nearhk: "\u2924", nearr: "\u2197", neArr: "\u21D7", nearrow: "\u2197", ne: "\u2260", nedot: "\u2250\u0338", NegativeMediumSpace: "\u200B", NegativeThickSpace: "\u200B", NegativeThinSpace: "\u200B", NegativeVeryThinSpace: "\u200B", nequiv: "\u2262", nesear: "\u2928", nesim: "\u2242\u0338", NestedGreaterGreater: "\u226B", NestedLessLess: "\u226A", NewLine: "\n", nexist: "\u2204", nexists: "\u2204", Nfr: "\u{1D511}", nfr: "\u{1D52B}", ngE: "\u2267\u0338", nge: "\u2271", ngeq: "\u2271", ngeqq: "\u2267\u0338", ngeqslant: "\u2A7E\u0338", nges: "\u2A7E\u0338", nGg: "\u22D9\u0338", ngsim: "\u2275", nGt: "\u226B\u20D2", ngt: "\u226F", ngtr: "\u226F", nGtv: "\u226B\u0338", nharr: "\u21AE", nhArr: "\u21CE", nhpar: "\u2AF2", ni: "\u220B", nis: "\u22FC", nisd: "\u22FA", niv: "\u220B", NJcy: "\u040A", njcy: "\u045A", nlarr: "\u219A", nlArr: "\u21CD", nldr: "\u2025", nlE: "\u2266\u0338", nle: "\u2270", nleftarrow: "\u219A", nLeftarrow: "\u21CD", nleftrightarrow: "\u21AE", nLeftrightarrow: "\u21CE", nleq: "\u2270", nleqq: "\u2266\u0338", nleqslant: "\u2A7D\u0338", nles: "\u2A7D\u0338", nless: "\u226E", nLl: "\u22D8\u0338", nlsim: "\u2274", nLt: "\u226A\u20D2", nlt: "\u226E", nltri: "\u22EA", nltrie: "\u22EC", nLtv: "\u226A\u0338", nmid: "\u2224", NoBreak: "\u2060", NonBreakingSpace: "\xA0", nopf: "\u{1D55F}", Nopf: "\u2115", Not: "\u2AEC", not: "\xAC", NotCongruent: "\u2262", NotCupCap: "\u226D", NotDoubleVerticalBar: "\u2226", NotElement: "\u2209", NotEqual: "\u2260", NotEqualTilde: "\u2242\u0338", NotExists: "\u2204", NotGreater: "\u226F", NotGreaterEqual: "\u2271", NotGreaterFullEqual: "\u2267\u0338", NotGreaterGreater: "\u226B\u0338", NotGreaterLess: "\u2279", NotGreaterSlantEqual: "\u2A7E\u0338", NotGreaterTilde: "\u2275", NotHumpDownHump: "\u224E\u0338", NotHumpEqual: "\u224F\u0338", notin: "\u2209", notindot: "\u22F5\u0338", notinE: "\u22F9\u0338", notinva: "\u2209", notinvb: "\u22F7", notinvc: "\u22F6", NotLeftTriangleBar: "\u29CF\u0338", NotLeftTriangle: "\u22EA", NotLeftTriangleEqual: "\u22EC", NotLess: "\u226E", NotLessEqual: "\u2270", NotLessGreater: "\u2278", NotLessLess: "\u226A\u0338", NotLessSlantEqual: "\u2A7D\u0338", NotLessTilde: "\u2274", NotNestedGreaterGreater: "\u2AA2\u0338", NotNestedLessLess: "\u2AA1\u0338", notni: "\u220C", notniva: "\u220C", notnivb: "\u22FE", notnivc: "\u22FD", NotPrecedes: "\u2280", NotPrecedesEqual: "\u2AAF\u0338", NotPrecedesSlantEqual: "\u22E0", NotReverseElement: "\u220C", NotRightTriangleBar: "\u29D0\u0338", NotRightTriangle: "\u22EB", NotRightTriangleEqual: "\u22ED", NotSquareSubset: "\u228F\u0338", NotSquareSubsetEqual: "\u22E2", NotSquareSuperset: "\u2290\u0338", NotSquareSupersetEqual: "\u22E3", NotSubset: "\u2282\u20D2", NotSubsetEqual: "\u2288", NotSucceeds: "\u2281", NotSucceedsEqual: "\u2AB0\u0338", NotSucceedsSlantEqual: "\u22E1", NotSucceedsTilde: "\u227F\u0338", NotSuperset: "\u2283\u20D2", NotSupersetEqual: "\u2289", NotTilde: "\u2241", NotTildeEqual: "\u2244", NotTildeFullEqual: "\u2247", NotTildeTilde: "\u2249", NotVerticalBar: "\u2224", nparallel: "\u2226", npar: "\u2226", nparsl: "\u2AFD\u20E5", npart: "\u2202\u0338", npolint: "\u2A14", npr: "\u2280", nprcue: "\u22E0", nprec: "\u2280", npreceq: "\u2AAF\u0338", npre: "\u2AAF\u0338", nrarrc: "\u2933\u0338", nrarr: "\u219B", nrArr: "\u21CF", nrarrw: "\u219D\u0338", nrightarrow: "\u219B", nRightarrow: "\u21CF", nrtri: "\u22EB", nrtrie: "\u22ED", nsc: "\u2281", nsccue: "\u22E1", nsce: "\u2AB0\u0338", Nscr: "\u{1D4A9}", nscr: "\u{1D4C3}", nshortmid: "\u2224", nshortparallel: "\u2226", nsim: "\u2241", nsime: "\u2244", nsimeq: "\u2244", nsmid: "\u2224", nspar: "\u2226", nsqsube: "\u22E2", nsqsupe: "\u22E3", nsub: "\u2284", nsubE: "\u2AC5\u0338", nsube: "\u2288", nsubset: "\u2282\u20D2", nsubseteq: "\u2288", nsubseteqq: "\u2AC5\u0338", nsucc: "\u2281", nsucceq: "\u2AB0\u0338", nsup: "\u2285", nsupE: "\u2AC6\u0338", nsupe: "\u2289", nsupset: "\u2283\u20D2", nsupseteq: "\u2289", nsupseteqq: "\u2AC6\u0338", ntgl: "\u2279", Ntilde: "\xD1", ntilde: "\xF1", ntlg: "\u2278", ntriangleleft: "\u22EA", ntrianglelefteq: "\u22EC", ntriangleright: "\u22EB", ntrianglerighteq: "\u22ED", Nu: "\u039D", nu: "\u03BD", num: "#", numero: "\u2116", numsp: "\u2007", nvap: "\u224D\u20D2", nvdash: "\u22AC", nvDash: "\u22AD", nVdash: "\u22AE", nVDash: "\u22AF", nvge: "\u2265\u20D2", nvgt: ">\u20D2", nvHarr: "\u2904", nvinfin: "\u29DE", nvlArr: "\u2902", nvle: "\u2264\u20D2", nvlt: "<\u20D2", nvltrie: "\u22B4\u20D2", nvrArr: "\u2903", nvrtrie: "\u22B5\u20D2", nvsim: "\u223C\u20D2", nwarhk: "\u2923", nwarr: "\u2196", nwArr: "\u21D6", nwarrow: "\u2196", nwnear: "\u2927", Oacute: "\xD3", oacute: "\xF3", oast: "\u229B", Ocirc: "\xD4", ocirc: "\xF4", ocir: "\u229A", Ocy: "\u041E", ocy: "\u043E", odash: "\u229D", Odblac: "\u0150", odblac: "\u0151", odiv: "\u2A38", odot: "\u2299", odsold: "\u29BC", OElig: "\u0152", oelig: "\u0153", ofcir: "\u29BF", Ofr: "\u{1D512}", ofr: "\u{1D52C}", ogon: "\u02DB", Ograve: "\xD2", ograve: "\xF2", ogt: "\u29C1", ohbar: "\u29B5", ohm: "\u03A9", oint: "\u222E", olarr: "\u21BA", olcir: "\u29BE", olcross: "\u29BB", oline: "\u203E", olt: "\u29C0", Omacr: "\u014C", omacr: "\u014D", Omega: "\u03A9", omega: "\u03C9", Omicron: "\u039F", omicron: "\u03BF", omid: "\u29B6", ominus: "\u2296", Oopf: "\u{1D546}", oopf: "\u{1D560}", opar: "\u29B7", OpenCurlyDoubleQuote: "\u201C", OpenCurlyQuote: "\u2018", operp: "\u29B9", oplus: "\u2295", orarr: "\u21BB", Or: "\u2A54", or: "\u2228", ord: "\u2A5D", order: "\u2134", orderof: "\u2134", ordf: "\xAA", ordm: "\xBA", origof: "\u22B6", oror: "\u2A56", orslope: "\u2A57", orv: "\u2A5B", oS: "\u24C8", Oscr: "\u{1D4AA}", oscr: "\u2134", Oslash: "\xD8", oslash: "\xF8", osol: "\u2298", Otilde: "\xD5", otilde: "\xF5", otimesas: "\u2A36", Otimes: "\u2A37", otimes: "\u2297", Ouml: "\xD6", ouml: "\xF6", ovbar: "\u233D", OverBar: "\u203E", OverBrace: "\u23DE", OverBracket: "\u23B4", OverParenthesis: "\u23DC", para: "\xB6", parallel: "\u2225", par: "\u2225", parsim: "\u2AF3", parsl: "\u2AFD", part: "\u2202", PartialD: "\u2202", Pcy: "\u041F", pcy: "\u043F", percnt: "%", period: ".", permil: "\u2030", perp: "\u22A5", pertenk: "\u2031", Pfr: "\u{1D513}", pfr: "\u{1D52D}", Phi: "\u03A6", phi: "\u03C6", phiv: "\u03D5", phmmat: "\u2133", phone: "\u260E", Pi: "\u03A0", pi: "\u03C0", pitchfork: "\u22D4", piv: "\u03D6", planck: "\u210F", planckh: "\u210E", plankv: "\u210F", plusacir: "\u2A23", plusb: "\u229E", pluscir: "\u2A22", plus: "+", plusdo: "\u2214", plusdu: "\u2A25", pluse: "\u2A72", PlusMinus: "\xB1", plusmn: "\xB1", plussim: "\u2A26", plustwo: "\u2A27", pm: "\xB1", Poincareplane: "\u210C", pointint: "\u2A15", popf: "\u{1D561}", Popf: "\u2119", pound: "\xA3", prap: "\u2AB7", Pr: "\u2ABB", pr: "\u227A", prcue: "\u227C", precapprox: "\u2AB7", prec: "\u227A", preccurlyeq: "\u227C", Precedes: "\u227A", PrecedesEqual: "\u2AAF", PrecedesSlantEqual: "\u227C", PrecedesTilde: "\u227E", preceq: "\u2AAF", precnapprox: "\u2AB9", precneqq: "\u2AB5", precnsim: "\u22E8", pre: "\u2AAF", prE: "\u2AB3", precsim: "\u227E", prime: "\u2032", Prime: "\u2033", primes: "\u2119", prnap: "\u2AB9", prnE: "\u2AB5", prnsim: "\u22E8", prod: "\u220F", Product: "\u220F", profalar: "\u232E", profline: "\u2312", profsurf: "\u2313", prop: "\u221D", Proportional: "\u221D", Proportion: "\u2237", propto: "\u221D", prsim: "\u227E", prurel: "\u22B0", Pscr: "\u{1D4AB}", pscr: "\u{1D4C5}", Psi: "\u03A8", psi: "\u03C8", puncsp: "\u2008", Qfr: "\u{1D514}", qfr: "\u{1D52E}", qint: "\u2A0C", qopf: "\u{1D562}", Qopf: "\u211A", qprime: "\u2057", Qscr: "\u{1D4AC}", qscr: "\u{1D4C6}", quaternions: "\u210D", quatint: "\u2A16", quest: "?", questeq: "\u225F", quot: '"', QUOT: '"', rAarr: "\u21DB", race: "\u223D\u0331", Racute: "\u0154", racute: "\u0155", radic: "\u221A", raemptyv: "\u29B3", rang: "\u27E9", Rang: "\u27EB", rangd: "\u2992", range: "\u29A5", rangle: "\u27E9", raquo: "\xBB", rarrap: "\u2975", rarrb: "\u21E5", rarrbfs: "\u2920", rarrc: "\u2933", rarr: "\u2192", Rarr: "\u21A0", rArr: "\u21D2", rarrfs: "\u291E", rarrhk: "\u21AA", rarrlp: "\u21AC", rarrpl: "\u2945", rarrsim: "\u2974", Rarrtl: "\u2916", rarrtl: "\u21A3", rarrw: "\u219D", ratail: "\u291A", rAtail: "\u291C", ratio: "\u2236", rationals: "\u211A", rbarr: "\u290D", rBarr: "\u290F", RBarr: "\u2910", rbbrk: "\u2773", rbrace: "}", rbrack: "]", rbrke: "\u298C", rbrksld: "\u298E", rbrkslu: "\u2990", Rcaron: "\u0158", rcaron: "\u0159", Rcedil: "\u0156", rcedil: "\u0157", rceil: "\u2309", rcub: "}", Rcy: "\u0420", rcy: "\u0440", rdca: "\u2937", rdldhar: "\u2969", rdquo: "\u201D", rdquor: "\u201D", rdsh: "\u21B3", real: "\u211C", realine: "\u211B", realpart: "\u211C", reals: "\u211D", Re: "\u211C", rect: "\u25AD", reg: "\xAE", REG: "\xAE", ReverseElement: "\u220B", ReverseEquilibrium: "\u21CB", ReverseUpEquilibrium: "\u296F", rfisht: "\u297D", rfloor: "\u230B", rfr: "\u{1D52F}", Rfr: "\u211C", rHar: "\u2964", rhard: "\u21C1", rharu: "\u21C0", rharul: "\u296C", Rho: "\u03A1", rho: "\u03C1", rhov: "\u03F1", RightAngleBracket: "\u27E9", RightArrowBar: "\u21E5", rightarrow: "\u2192", RightArrow: "\u2192", Rightarrow: "\u21D2", RightArrowLeftArrow: "\u21C4", rightarrowtail: "\u21A3", RightCeiling: "\u2309", RightDoubleBracket: "\u27E7", RightDownTeeVector: "\u295D", RightDownVectorBar: "\u2955", RightDownVector: "\u21C2", RightFloor: "\u230B", rightharpoondown: "\u21C1", rightharpoonup: "\u21C0", rightleftarrows: "\u21C4", rightleftharpoons: "\u21CC", rightrightarrows: "\u21C9", rightsquigarrow: "\u219D", RightTeeArrow: "\u21A6", RightTee: "\u22A2", RightTeeVector: "\u295B", rightthreetimes: "\u22CC", RightTriangleBar: "\u29D0", RightTriangle: "\u22B3", RightTriangleEqual: "\u22B5", RightUpDownVector: "\u294F", RightUpTeeVector: "\u295C", RightUpVectorBar: "\u2954", RightUpVector: "\u21BE", RightVectorBar: "\u2953", RightVector: "\u21C0", ring: "\u02DA", risingdotseq: "\u2253", rlarr: "\u21C4", rlhar: "\u21CC", rlm: "\u200F", rmoustache: "\u23B1", rmoust: "\u23B1", rnmid: "\u2AEE", roang: "\u27ED", roarr: "\u21FE", robrk: "\u27E7", ropar: "\u2986", ropf: "\u{1D563}", Ropf: "\u211D", roplus: "\u2A2E", rotimes: "\u2A35", RoundImplies: "\u2970", rpar: ")", rpargt: "\u2994", rppolint: "\u2A12", rrarr: "\u21C9", Rrightarrow: "\u21DB", rsaquo: "\u203A", rscr: "\u{1D4C7}", Rscr: "\u211B", rsh: "\u21B1", Rsh: "\u21B1", rsqb: "]", rsquo: "\u2019", rsquor: "\u2019", rthree: "\u22CC", rtimes: "\u22CA", rtri: "\u25B9", rtrie: "\u22B5", rtrif: "\u25B8", rtriltri: "\u29CE", RuleDelayed: "\u29F4", ruluhar: "\u2968", rx: "\u211E", Sacute: "\u015A", sacute: "\u015B", sbquo: "\u201A", scap: "\u2AB8", Scaron: "\u0160", scaron: "\u0161", Sc: "\u2ABC", sc: "\u227B", sccue: "\u227D", sce: "\u2AB0", scE: "\u2AB4", Scedil: "\u015E", scedil: "\u015F", Scirc: "\u015C", scirc: "\u015D", scnap: "\u2ABA", scnE: "\u2AB6", scnsim: "\u22E9", scpolint: "\u2A13", scsim: "\u227F", Scy: "\u0421", scy: "\u0441", sdotb: "\u22A1", sdot: "\u22C5", sdote: "\u2A66", searhk: "\u2925", searr: "\u2198", seArr: "\u21D8", searrow: "\u2198", sect: "\xA7", semi: ";", seswar: "\u2929", setminus: "\u2216", setmn: "\u2216", sext: "\u2736", Sfr: "\u{1D516}", sfr: "\u{1D530}", sfrown: "\u2322", sharp: "\u266F", SHCHcy: "\u0429", shchcy: "\u0449", SHcy: "\u0428", shcy: "\u0448", ShortDownArrow: "\u2193", ShortLeftArrow: "\u2190", shortmid: "\u2223", shortparallel: "\u2225", ShortRightArrow: "\u2192", ShortUpArrow: "\u2191", shy: "\xAD", Sigma: "\u03A3", sigma: "\u03C3", sigmaf: "\u03C2", sigmav: "\u03C2", sim: "\u223C", simdot: "\u2A6A", sime: "\u2243", simeq: "\u2243", simg: "\u2A9E", simgE: "\u2AA0", siml: "\u2A9D", simlE: "\u2A9F", simne: "\u2246", simplus: "\u2A24", simrarr: "\u2972", slarr: "\u2190", SmallCircle: "\u2218", smallsetminus: "\u2216", smashp: "\u2A33", smeparsl: "\u29E4", smid: "\u2223", smile: "\u2323", smt: "\u2AAA", smte: "\u2AAC", smtes: "\u2AAC\uFE00", SOFTcy: "\u042C", softcy: "\u044C", solbar: "\u233F", solb: "\u29C4", sol: "/", Sopf: "\u{1D54A}", sopf: "\u{1D564}", spades: "\u2660", spadesuit: "\u2660", spar: "\u2225", sqcap: "\u2293", sqcaps: "\u2293\uFE00", sqcup: "\u2294", sqcups: "\u2294\uFE00", Sqrt: "\u221A", sqsub: "\u228F", sqsube: "\u2291", sqsubset: "\u228F", sqsubseteq: "\u2291", sqsup: "\u2290", sqsupe: "\u2292", sqsupset: "\u2290", sqsupseteq: "\u2292", square: "\u25A1", Square: "\u25A1", SquareIntersection: "\u2293", SquareSubset: "\u228F", SquareSubsetEqual: "\u2291", SquareSuperset: "\u2290", SquareSupersetEqual: "\u2292", SquareUnion: "\u2294", squarf: "\u25AA", squ: "\u25A1", squf: "\u25AA", srarr: "\u2192", Sscr: "\u{1D4AE}", sscr: "\u{1D4C8}", ssetmn: "\u2216", ssmile: "\u2323", sstarf: "\u22C6", Star: "\u22C6", star: "\u2606", starf: "\u2605", straightepsilon: "\u03F5", straightphi: "\u03D5", strns: "\xAF", sub: "\u2282", Sub: "\u22D0", subdot: "\u2ABD", subE: "\u2AC5", sube: "\u2286", subedot: "\u2AC3", submult: "\u2AC1", subnE: "\u2ACB", subne: "\u228A", subplus: "\u2ABF", subrarr: "\u2979", subset: "\u2282", Subset: "\u22D0", subseteq: "\u2286", subseteqq: "\u2AC5", SubsetEqual: "\u2286", subsetneq: "\u228A", subsetneqq: "\u2ACB", subsim: "\u2AC7", subsub: "\u2AD5", subsup: "\u2AD3", succapprox: "\u2AB8", succ: "\u227B", succcurlyeq: "\u227D", Succeeds: "\u227B", SucceedsEqual: "\u2AB0", SucceedsSlantEqual: "\u227D", SucceedsTilde: "\u227F", succeq: "\u2AB0", succnapprox: "\u2ABA", succneqq: "\u2AB6", succnsim: "\u22E9", succsim: "\u227F", SuchThat: "\u220B", sum: "\u2211", Sum: "\u2211", sung: "\u266A", sup1: "\xB9", sup2: "\xB2", sup3: "\xB3", sup: "\u2283", Sup: "\u22D1", supdot: "\u2ABE", supdsub: "\u2AD8", supE: "\u2AC6", supe: "\u2287", supedot: "\u2AC4", Superset: "\u2283", SupersetEqual: "\u2287", suphsol: "\u27C9", suphsub: "\u2AD7", suplarr: "\u297B", supmult: "\u2AC2", supnE: "\u2ACC", supne: "\u228B", supplus: "\u2AC0", supset: "\u2283", Supset: "\u22D1", supseteq: "\u2287", supseteqq: "\u2AC6", supsetneq: "\u228B", supsetneqq: "\u2ACC", supsim: "\u2AC8", supsub: "\u2AD4", supsup: "\u2AD6", swarhk: "\u2926", swarr: "\u2199", swArr: "\u21D9", swarrow: "\u2199", swnwar: "\u292A", szlig: "\xDF", Tab: "	", target: "\u2316", Tau: "\u03A4", tau: "\u03C4", tbrk: "\u23B4", Tcaron: "\u0164", tcaron: "\u0165", Tcedil: "\u0162", tcedil: "\u0163", Tcy: "\u0422", tcy: "\u0442", tdot: "\u20DB", telrec: "\u2315", Tfr: "\u{1D517}", tfr: "\u{1D531}", there4: "\u2234", therefore: "\u2234", Therefore: "\u2234", Theta: "\u0398", theta: "\u03B8", thetasym: "\u03D1", thetav: "\u03D1", thickapprox: "\u2248", thicksim: "\u223C", ThickSpace: "\u205F\u200A", ThinSpace: "\u2009", thinsp: "\u2009", thkap: "\u2248", thksim: "\u223C", THORN: "\xDE", thorn: "\xFE", tilde: "\u02DC", Tilde: "\u223C", TildeEqual: "\u2243", TildeFullEqual: "\u2245", TildeTilde: "\u2248", timesbar: "\u2A31", timesb: "\u22A0", times: "\xD7", timesd: "\u2A30", tint: "\u222D", toea: "\u2928", topbot: "\u2336", topcir: "\u2AF1", top: "\u22A4", Topf: "\u{1D54B}", topf: "\u{1D565}", topfork: "\u2ADA", tosa: "\u2929", tprime: "\u2034", trade: "\u2122", TRADE: "\u2122", triangle: "\u25B5", triangledown: "\u25BF", triangleleft: "\u25C3", trianglelefteq: "\u22B4", triangleq: "\u225C", triangleright: "\u25B9", trianglerighteq: "\u22B5", tridot: "\u25EC", trie: "\u225C", triminus: "\u2A3A", TripleDot: "\u20DB", triplus: "\u2A39", trisb: "\u29CD", tritime: "\u2A3B", trpezium: "\u23E2", Tscr: "\u{1D4AF}", tscr: "\u{1D4C9}", TScy: "\u0426", tscy: "\u0446", TSHcy: "\u040B", tshcy: "\u045B", Tstrok: "\u0166", tstrok: "\u0167", twixt: "\u226C", twoheadleftarrow: "\u219E", twoheadrightarrow: "\u21A0", Uacute: "\xDA", uacute: "\xFA", uarr: "\u2191", Uarr: "\u219F", uArr: "\u21D1", Uarrocir: "\u2949", Ubrcy: "\u040E", ubrcy: "\u045E", Ubreve: "\u016C", ubreve: "\u016D", Ucirc: "\xDB", ucirc: "\xFB", Ucy: "\u0423", ucy: "\u0443", udarr: "\u21C5", Udblac: "\u0170", udblac: "\u0171", udhar: "\u296E", ufisht: "\u297E", Ufr: "\u{1D518}", ufr: "\u{1D532}", Ugrave: "\xD9", ugrave: "\xF9", uHar: "\u2963", uharl: "\u21BF", uharr: "\u21BE", uhblk: "\u2580", ulcorn: "\u231C", ulcorner: "\u231C", ulcrop: "\u230F", ultri: "\u25F8", Umacr: "\u016A", umacr: "\u016B", uml: "\xA8", UnderBar: "_", UnderBrace: "\u23DF", UnderBracket: "\u23B5", UnderParenthesis: "\u23DD", Union: "\u22C3", UnionPlus: "\u228E", Uogon: "\u0172", uogon: "\u0173", Uopf: "\u{1D54C}", uopf: "\u{1D566}", UpArrowBar: "\u2912", uparrow: "\u2191", UpArrow: "\u2191", Uparrow: "\u21D1", UpArrowDownArrow: "\u21C5", updownarrow: "\u2195", UpDownArrow: "\u2195", Updownarrow: "\u21D5", UpEquilibrium: "\u296E", upharpoonleft: "\u21BF", upharpoonright: "\u21BE", uplus: "\u228E", UpperLeftArrow: "\u2196", UpperRightArrow: "\u2197", upsi: "\u03C5", Upsi: "\u03D2", upsih: "\u03D2", Upsilon: "\u03A5", upsilon: "\u03C5", UpTeeArrow: "\u21A5", UpTee: "\u22A5", upuparrows: "\u21C8", urcorn: "\u231D", urcorner: "\u231D", urcrop: "\u230E", Uring: "\u016E", uring: "\u016F", urtri: "\u25F9", Uscr: "\u{1D4B0}", uscr: "\u{1D4CA}", utdot: "\u22F0", Utilde: "\u0168", utilde: "\u0169", utri: "\u25B5", utrif: "\u25B4", uuarr: "\u21C8", Uuml: "\xDC", uuml: "\xFC", uwangle: "\u29A7", vangrt: "\u299C", varepsilon: "\u03F5", varkappa: "\u03F0", varnothing: "\u2205", varphi: "\u03D5", varpi: "\u03D6", varpropto: "\u221D", varr: "\u2195", vArr: "\u21D5", varrho: "\u03F1", varsigma: "\u03C2", varsubsetneq: "\u228A\uFE00", varsubsetneqq: "\u2ACB\uFE00", varsupsetneq: "\u228B\uFE00", varsupsetneqq: "\u2ACC\uFE00", vartheta: "\u03D1", vartriangleleft: "\u22B2", vartriangleright: "\u22B3", vBar: "\u2AE8", Vbar: "\u2AEB", vBarv: "\u2AE9", Vcy: "\u0412", vcy: "\u0432", vdash: "\u22A2", vDash: "\u22A8", Vdash: "\u22A9", VDash: "\u22AB", Vdashl: "\u2AE6", veebar: "\u22BB", vee: "\u2228", Vee: "\u22C1", veeeq: "\u225A", vellip: "\u22EE", verbar: "|", Verbar: "\u2016", vert: "|", Vert: "\u2016", VerticalBar: "\u2223", VerticalLine: "|", VerticalSeparator: "\u2758", VerticalTilde: "\u2240", VeryThinSpace: "\u200A", Vfr: "\u{1D519}", vfr: "\u{1D533}", vltri: "\u22B2", vnsub: "\u2282\u20D2", vnsup: "\u2283\u20D2", Vopf: "\u{1D54D}", vopf: "\u{1D567}", vprop: "\u221D", vrtri: "\u22B3", Vscr: "\u{1D4B1}", vscr: "\u{1D4CB}", vsubnE: "\u2ACB\uFE00", vsubne: "\u228A\uFE00", vsupnE: "\u2ACC\uFE00", vsupne: "\u228B\uFE00", Vvdash: "\u22AA", vzigzag: "\u299A", Wcirc: "\u0174", wcirc: "\u0175", wedbar: "\u2A5F", wedge: "\u2227", Wedge: "\u22C0", wedgeq: "\u2259", weierp: "\u2118", Wfr: "\u{1D51A}", wfr: "\u{1D534}", Wopf: "\u{1D54E}", wopf: "\u{1D568}", wp: "\u2118", wr: "\u2240", wreath: "\u2240", Wscr: "\u{1D4B2}", wscr: "\u{1D4CC}", xcap: "\u22C2", xcirc: "\u25EF", xcup: "\u22C3", xdtri: "\u25BD", Xfr: "\u{1D51B}", xfr: "\u{1D535}", xharr: "\u27F7", xhArr: "\u27FA", Xi: "\u039E", xi: "\u03BE", xlarr: "\u27F5", xlArr: "\u27F8", xmap: "\u27FC", xnis: "\u22FB", xodot: "\u2A00", Xopf: "\u{1D54F}", xopf: "\u{1D569}", xoplus: "\u2A01", xotime: "\u2A02", xrarr: "\u27F6", xrArr: "\u27F9", Xscr: "\u{1D4B3}", xscr: "\u{1D4CD}", xsqcup: "\u2A06", xuplus: "\u2A04", xutri: "\u25B3", xvee: "\u22C1", xwedge: "\u22C0", Yacute: "\xDD", yacute: "\xFD", YAcy: "\u042F", yacy: "\u044F", Ycirc: "\u0176", ycirc: "\u0177", Ycy: "\u042B", ycy: "\u044B", yen: "\xA5", Yfr: "\u{1D51C}", yfr: "\u{1D536}", YIcy: "\u0407", yicy: "\u0457", Yopf: "\u{1D550}", yopf: "\u{1D56A}", Yscr: "\u{1D4B4}", yscr: "\u{1D4CE}", YUcy: "\u042E", yucy: "\u044E", yuml: "\xFF", Yuml: "\u0178", Zacute: "\u0179", zacute: "\u017A", Zcaron: "\u017D", zcaron: "\u017E", Zcy: "\u0417", zcy: "\u0437", Zdot: "\u017B", zdot: "\u017C", zeetrf: "\u2128", ZeroWidthSpace: "\u200B", Zeta: "\u0396", zeta: "\u03B6", zfr: "\u{1D537}", Zfr: "\u2128", ZHcy: "\u0416", zhcy: "\u0436", zigrarr: "\u21DD", zopf: "\u{1D56B}", Zopf: "\u2124", Zscr: "\u{1D4B5}", zscr: "\u{1D4CF}", zwj: "\u200D", zwnj: "\u200C" };
  }
});

// node_modules/entities/lib/maps/legacy.json
var require_legacy = __commonJS({
  "node_modules/entities/lib/maps/legacy.json"(exports, module) {
    module.exports = { Aacute: "\xC1", aacute: "\xE1", Acirc: "\xC2", acirc: "\xE2", acute: "\xB4", AElig: "\xC6", aelig: "\xE6", Agrave: "\xC0", agrave: "\xE0", amp: "&", AMP: "&", Aring: "\xC5", aring: "\xE5", Atilde: "\xC3", atilde: "\xE3", Auml: "\xC4", auml: "\xE4", brvbar: "\xA6", Ccedil: "\xC7", ccedil: "\xE7", cedil: "\xB8", cent: "\xA2", copy: "\xA9", COPY: "\xA9", curren: "\xA4", deg: "\xB0", divide: "\xF7", Eacute: "\xC9", eacute: "\xE9", Ecirc: "\xCA", ecirc: "\xEA", Egrave: "\xC8", egrave: "\xE8", ETH: "\xD0", eth: "\xF0", Euml: "\xCB", euml: "\xEB", frac12: "\xBD", frac14: "\xBC", frac34: "\xBE", gt: ">", GT: ">", Iacute: "\xCD", iacute: "\xED", Icirc: "\xCE", icirc: "\xEE", iexcl: "\xA1", Igrave: "\xCC", igrave: "\xEC", iquest: "\xBF", Iuml: "\xCF", iuml: "\xEF", laquo: "\xAB", lt: "<", LT: "<", macr: "\xAF", micro: "\xB5", middot: "\xB7", nbsp: "\xA0", not: "\xAC", Ntilde: "\xD1", ntilde: "\xF1", Oacute: "\xD3", oacute: "\xF3", Ocirc: "\xD4", ocirc: "\xF4", Ograve: "\xD2", ograve: "\xF2", ordf: "\xAA", ordm: "\xBA", Oslash: "\xD8", oslash: "\xF8", Otilde: "\xD5", otilde: "\xF5", Ouml: "\xD6", ouml: "\xF6", para: "\xB6", plusmn: "\xB1", pound: "\xA3", quot: '"', QUOT: '"', raquo: "\xBB", reg: "\xAE", REG: "\xAE", sect: "\xA7", shy: "\xAD", sup1: "\xB9", sup2: "\xB2", sup3: "\xB3", szlig: "\xDF", THORN: "\xDE", thorn: "\xFE", times: "\xD7", Uacute: "\xDA", uacute: "\xFA", Ucirc: "\xDB", ucirc: "\xFB", Ugrave: "\xD9", ugrave: "\xF9", uml: "\xA8", Uuml: "\xDC", uuml: "\xFC", Yacute: "\xDD", yacute: "\xFD", yen: "\xA5", yuml: "\xFF" };
  }
});

// node_modules/entities/lib/maps/xml.json
var require_xml = __commonJS({
  "node_modules/entities/lib/maps/xml.json"(exports, module) {
    module.exports = { amp: "&", apos: "'", gt: ">", lt: "<", quot: '"' };
  }
});

// node_modules/entities/lib/maps/decode.json
var require_decode = __commonJS({
  "node_modules/entities/lib/maps/decode.json"(exports, module) {
    module.exports = { "0": 65533, "128": 8364, "130": 8218, "131": 402, "132": 8222, "133": 8230, "134": 8224, "135": 8225, "136": 710, "137": 8240, "138": 352, "139": 8249, "140": 338, "142": 381, "145": 8216, "146": 8217, "147": 8220, "148": 8221, "149": 8226, "150": 8211, "151": 8212, "152": 732, "153": 8482, "154": 353, "155": 8250, "156": 339, "158": 382, "159": 376 };
  }
});

// node_modules/entities/lib/decode_codepoint.js
var require_decode_codepoint = __commonJS({
  "node_modules/entities/lib/decode_codepoint.js"(exports) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var decode_json_1 = __importDefault(require_decode());
    var fromCodePoint = String.fromCodePoint || function(codePoint) {
      var output = "";
      if (codePoint > 65535) {
        codePoint -= 65536;
        output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);
        codePoint = 56320 | codePoint & 1023;
      }
      output += String.fromCharCode(codePoint);
      return output;
    };
    function decodeCodePoint(codePoint) {
      if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
        return "\uFFFD";
      }
      if (codePoint in decode_json_1.default) {
        codePoint = decode_json_1.default[codePoint];
      }
      return fromCodePoint(codePoint);
    }
    exports.default = decodeCodePoint;
  }
});

// node_modules/entities/lib/decode.js
var require_decode2 = __commonJS({
  "node_modules/entities/lib/decode.js"(exports) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;
    var entities_json_1 = __importDefault(require_entities());
    var legacy_json_1 = __importDefault(require_legacy());
    var xml_json_1 = __importDefault(require_xml());
    var decode_codepoint_1 = __importDefault(require_decode_codepoint());
    var strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\da-fA-F]+|#\d+);/g;
    exports.decodeXML = getStrictDecoder(xml_json_1.default);
    exports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);
    function getStrictDecoder(map) {
      var replace = getReplacer(map);
      return function(str2) {
        return String(str2).replace(strictEntityRe, replace);
      };
    }
    var sorter = function(a2, b2) {
      return a2 < b2 ? 1 : -1;
    };
    exports.decodeHTML = function() {
      var legacy = Object.keys(legacy_json_1.default).sort(sorter);
      var keys = Object.keys(entities_json_1.default).sort(sorter);
      for (var i2 = 0, j2 = 0; i2 < keys.length; i2++) {
        if (legacy[j2] === keys[i2]) {
          keys[i2] += ";?";
          j2++;
        } else {
          keys[i2] += ";";
        }
      }
      var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g");
      var replace = getReplacer(entities_json_1.default);
      function replacer(str2) {
        if (str2.substr(-1) !== ";")
          str2 += ";";
        return replace(str2);
      }
      return function(str2) {
        return String(str2).replace(re, replacer);
      };
    }();
    function getReplacer(map) {
      return function replace(str2) {
        if (str2.charAt(1) === "#") {
          var secondChar = str2.charAt(2);
          if (secondChar === "X" || secondChar === "x") {
            return decode_codepoint_1.default(parseInt(str2.substr(3), 16));
          }
          return decode_codepoint_1.default(parseInt(str2.substr(2), 10));
        }
        return map[str2.slice(1, -1)] || str2;
      };
    }
  }
});

// node_modules/entities/lib/encode.js
var require_encode = __commonJS({
  "node_modules/entities/lib/encode.js"(exports) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;
    var xml_json_1 = __importDefault(require_xml());
    var inverseXML = getInverseObj(xml_json_1.default);
    var xmlReplacer = getInverseReplacer(inverseXML);
    exports.encodeXML = getASCIIEncoder(inverseXML);
    var entities_json_1 = __importDefault(require_entities());
    var inverseHTML = getInverseObj(entities_json_1.default);
    var htmlReplacer = getInverseReplacer(inverseHTML);
    exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);
    exports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);
    function getInverseObj(obj) {
      return Object.keys(obj).sort().reduce(function(inverse, name) {
        inverse[obj[name]] = "&" + name + ";";
        return inverse;
      }, {});
    }
    function getInverseReplacer(inverse) {
      var single = [];
      var multiple = [];
      for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {
        var k2 = _a[_i];
        if (k2.length === 1) {
          single.push("\\" + k2);
        } else {
          multiple.push(k2);
        }
      }
      single.sort();
      for (var start = 0; start < single.length - 1; start++) {
        var end = start;
        while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {
          end += 1;
        }
        var count = 1 + end - start;
        if (count < 3)
          continue;
        single.splice(start, count, single[start] + "-" + single[end]);
      }
      multiple.unshift("[" + single.join("") + "]");
      return new RegExp(multiple.join("|"), "g");
    }
    var reNonASCII = /(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g;
    var getCodePoint = String.prototype.codePointAt != null ? function(str2) {
      return str2.codePointAt(0);
    } : function(c2) {
      return (c2.charCodeAt(0) - 55296) * 1024 + c2.charCodeAt(1) - 56320 + 65536;
    };
    function singleCharReplacer(c2) {
      return "&#x" + (c2.length > 1 ? getCodePoint(c2) : c2.charCodeAt(0)).toString(16).toUpperCase() + ";";
    }
    function getInverse(inverse, re) {
      return function(data) {
        return data.replace(re, function(name) {
          return inverse[name];
        }).replace(reNonASCII, singleCharReplacer);
      };
    }
    var reEscapeChars = new RegExp(xmlReplacer.source + "|" + reNonASCII.source, "g");
    function escape2(data) {
      return data.replace(reEscapeChars, singleCharReplacer);
    }
    exports.escape = escape2;
    function escapeUTF8(data) {
      return data.replace(xmlReplacer, singleCharReplacer);
    }
    exports.escapeUTF8 = escapeUTF8;
    function getASCIIEncoder(obj) {
      return function(data) {
        return data.replace(reEscapeChars, function(c2) {
          return obj[c2] || singleCharReplacer(c2);
        });
      };
    }
  }
});

// node_modules/entities/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/entities/lib/index.js"(exports) {
    "use strict";
    init_define_module();
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;
    var decode_1 = require_decode2();
    var encode_1 = require_encode();
    function decode(data, level) {
      return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);
    }
    exports.decode = decode;
    function decodeStrict(data, level) {
      return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);
    }
    exports.decodeStrict = decodeStrict;
    function encode(data, level) {
      return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);
    }
    exports.encode = encode;
    var encode_2 = require_encode();
    Object.defineProperty(exports, "encodeXML", { enumerable: true, get: function() {
      return encode_2.encodeXML;
    } });
    Object.defineProperty(exports, "encodeHTML", { enumerable: true, get: function() {
      return encode_2.encodeHTML;
    } });
    Object.defineProperty(exports, "encodeNonAsciiHTML", { enumerable: true, get: function() {
      return encode_2.encodeNonAsciiHTML;
    } });
    Object.defineProperty(exports, "escape", { enumerable: true, get: function() {
      return encode_2.escape;
    } });
    Object.defineProperty(exports, "escapeUTF8", { enumerable: true, get: function() {
      return encode_2.escapeUTF8;
    } });
    Object.defineProperty(exports, "encodeHTML4", { enumerable: true, get: function() {
      return encode_2.encodeHTML;
    } });
    Object.defineProperty(exports, "encodeHTML5", { enumerable: true, get: function() {
      return encode_2.encodeHTML;
    } });
    var decode_2 = require_decode2();
    Object.defineProperty(exports, "decodeXML", { enumerable: true, get: function() {
      return decode_2.decodeXML;
    } });
    Object.defineProperty(exports, "decodeHTML", { enumerable: true, get: function() {
      return decode_2.decodeHTML;
    } });
    Object.defineProperty(exports, "decodeHTMLStrict", { enumerable: true, get: function() {
      return decode_2.decodeHTMLStrict;
    } });
    Object.defineProperty(exports, "decodeHTML4", { enumerable: true, get: function() {
      return decode_2.decodeHTML;
    } });
    Object.defineProperty(exports, "decodeHTML5", { enumerable: true, get: function() {
      return decode_2.decodeHTML;
    } });
    Object.defineProperty(exports, "decodeHTML4Strict", { enumerable: true, get: function() {
      return decode_2.decodeHTMLStrict;
    } });
    Object.defineProperty(exports, "decodeHTML5Strict", { enumerable: true, get: function() {
      return decode_2.decodeHTMLStrict;
    } });
    Object.defineProperty(exports, "decodeXMLStrict", { enumerable: true, get: function() {
      return decode_2.decodeXML;
    } });
  }
});

// node_modules/ansi-to-html/lib/ansi_to_html.js
var require_ansi_to_html = __commonJS({
  "node_modules/ansi-to-html/lib/ansi_to_html.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i2 = 0; i2 < props.length; i2++) {
        var descriptor = props[i2];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _createForOfIteratorHelper(o) {
      if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {
          var i2 = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i2 >= o.length)
              return { done: true };
            return { done: false, value: o[i2++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var it, normalCompletion = true, didErr = false, err;
      return { s: function s2() {
        it = o[Symbol.iterator]();
      }, n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f2() {
        try {
          if (!normalCompletion && it["return"] != null)
            it["return"]();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
        arr2[i2] = arr[i2];
      }
      return arr2;
    }
    var entities = require_lib2();
    var defaults = {
      fg: "#FFF",
      bg: "#000",
      newline: false,
      escapeXML: false,
      stream: false,
      colors: getDefaultColors()
    };
    function getDefaultColors() {
      var colors = {
        0: "#000",
        1: "#A00",
        2: "#0A0",
        3: "#A50",
        4: "#00A",
        5: "#A0A",
        6: "#0AA",
        7: "#AAA",
        8: "#555",
        9: "#F55",
        10: "#5F5",
        11: "#FF5",
        12: "#55F",
        13: "#F5F",
        14: "#5FF",
        15: "#FFF"
      };
      range(0, 5).forEach(function(red) {
        range(0, 5).forEach(function(green) {
          range(0, 5).forEach(function(blue) {
            return setStyleColor(red, green, blue, colors);
          });
        });
      });
      range(0, 23).forEach(function(gray) {
        var c2 = gray + 232;
        var l = toHexString(gray * 10 + 8);
        colors[c2] = "#" + l + l + l;
      });
      return colors;
    }
    function setStyleColor(red, green, blue, colors) {
      var c2 = 16 + red * 36 + green * 6 + blue;
      var r = red > 0 ? red * 40 + 55 : 0;
      var g = green > 0 ? green * 40 + 55 : 0;
      var b2 = blue > 0 ? blue * 40 + 55 : 0;
      colors[c2] = toColorHexString([r, g, b2]);
    }
    function toHexString(num) {
      var str2 = num.toString(16);
      while (str2.length < 2) {
        str2 = "0" + str2;
      }
      return str2;
    }
    function toColorHexString(ref) {
      var results = [];
      var _iterator = _createForOfIteratorHelper(ref), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var r = _step.value;
          results.push(toHexString(r));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return "#" + results.join("");
    }
    function generateOutput(stack, token, data, options) {
      var result;
      if (token === "text") {
        result = pushText(data, options);
      } else if (token === "display") {
        result = handleDisplay(stack, data, options);
      } else if (token === "xterm256") {
        result = pushForegroundColor(stack, options.colors[data]);
      } else if (token === "rgb") {
        result = handleRgb(stack, data);
      }
      return result;
    }
    function handleRgb(stack, data) {
      data = data.substring(2).slice(0, -1);
      var operation = +data.substr(0, 2);
      var color2 = data.substring(5).split(";");
      var rgb = color2.map(function(value) {
        return ("0" + Number(value).toString(16)).substr(-2);
      }).join("");
      return pushStyle(stack, (operation === 38 ? "color:#" : "background-color:#") + rgb);
    }
    function handleDisplay(stack, code, options) {
      code = parseInt(code, 10);
      var codeMap = {
        "-1": function _2() {
          return "<br/>";
        },
        0: function _2() {
          return stack.length && resetStyles(stack);
        },
        1: function _2() {
          return pushTag(stack, "b");
        },
        3: function _2() {
          return pushTag(stack, "i");
        },
        4: function _2() {
          return pushTag(stack, "u");
        },
        8: function _2() {
          return pushStyle(stack, "display:none");
        },
        9: function _2() {
          return pushTag(stack, "strike");
        },
        22: function _2() {
          return pushStyle(stack, "font-weight:normal;text-decoration:none;font-style:normal");
        },
        23: function _2() {
          return closeTag(stack, "i");
        },
        24: function _2() {
          return closeTag(stack, "u");
        },
        39: function _2() {
          return pushForegroundColor(stack, options.fg);
        },
        49: function _2() {
          return pushBackgroundColor(stack, options.bg);
        },
        53: function _2() {
          return pushStyle(stack, "text-decoration:overline");
        }
      };
      var result;
      if (codeMap[code]) {
        result = codeMap[code]();
      } else if (4 < code && code < 7) {
        result = pushTag(stack, "blink");
      } else if (29 < code && code < 38) {
        result = pushForegroundColor(stack, options.colors[code - 30]);
      } else if (39 < code && code < 48) {
        result = pushBackgroundColor(stack, options.colors[code - 40]);
      } else if (89 < code && code < 98) {
        result = pushForegroundColor(stack, options.colors[8 + (code - 90)]);
      } else if (99 < code && code < 108) {
        result = pushBackgroundColor(stack, options.colors[8 + (code - 100)]);
      }
      return result;
    }
    function resetStyles(stack) {
      var stackClone = stack.slice(0);
      stack.length = 0;
      return stackClone.reverse().map(function(tag) {
        return "</" + tag + ">";
      }).join("");
    }
    function range(low, high) {
      var results = [];
      for (var j2 = low; j2 <= high; j2++) {
        results.push(j2);
      }
      return results;
    }
    function notCategory(category) {
      return function(e) {
        return (category === null || e.category !== category) && category !== "all";
      };
    }
    function categoryForCode(code) {
      code = parseInt(code, 10);
      var result = null;
      if (code === 0) {
        result = "all";
      } else if (code === 1) {
        result = "bold";
      } else if (2 < code && code < 5) {
        result = "underline";
      } else if (4 < code && code < 7) {
        result = "blink";
      } else if (code === 8) {
        result = "hide";
      } else if (code === 9) {
        result = "strike";
      } else if (29 < code && code < 38 || code === 39 || 89 < code && code < 98) {
        result = "foreground-color";
      } else if (39 < code && code < 48 || code === 49 || 99 < code && code < 108) {
        result = "background-color";
      }
      return result;
    }
    function pushText(text, options) {
      if (options.escapeXML) {
        return entities.encodeXML(text);
      }
      return text;
    }
    function pushTag(stack, tag, style) {
      if (!style) {
        style = "";
      }
      stack.push(tag);
      return "<".concat(tag).concat(style ? ' style="'.concat(style, '"') : "", ">");
    }
    function pushStyle(stack, style) {
      return pushTag(stack, "span", style);
    }
    function pushForegroundColor(stack, color2) {
      return pushTag(stack, "span", "color:" + color2);
    }
    function pushBackgroundColor(stack, color2) {
      return pushTag(stack, "span", "background-color:" + color2);
    }
    function closeTag(stack, style) {
      var last;
      if (stack.slice(-1)[0] === style) {
        last = stack.pop();
      }
      if (last) {
        return "</" + style + ">";
      }
    }
    function tokenize(text, options, callback) {
      var ansiMatch = false;
      var ansiHandler = 3;
      function remove() {
        return "";
      }
      function removeXterm256(m2, g1) {
        callback("xterm256", g1);
        return "";
      }
      function newline(m2) {
        if (options.newline) {
          callback("display", -1);
        } else {
          callback("text", m2);
        }
        return "";
      }
      function ansiMess(m2, g1) {
        ansiMatch = true;
        if (g1.trim().length === 0) {
          g1 = "0";
        }
        g1 = g1.trimRight(";").split(";");
        var _iterator2 = _createForOfIteratorHelper(g1), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var g = _step2.value;
            callback("display", g);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        return "";
      }
      function realText(m2) {
        callback("text", m2);
        return "";
      }
      function rgb(m2) {
        callback("rgb", m2);
        return "";
      }
      var tokens = [{
        pattern: /^\x08+/,
        sub: remove
      }, {
        pattern: /^\x1b\[[012]?K/,
        sub: remove
      }, {
        pattern: /^\x1b\[\(B/,
        sub: remove
      }, {
        pattern: /^\x1b\[[34]8;2;\d+;\d+;\d+m/,
        sub: rgb
      }, {
        pattern: /^\x1b\[38;5;(\d+)m/,
        sub: removeXterm256
      }, {
        pattern: /^\n/,
        sub: newline
      }, {
        pattern: /^\r+\n/,
        sub: newline
      }, {
        pattern: /^\x1b\[((?:\d{1,3};?)+|)m/,
        sub: ansiMess
      }, {
        pattern: /^\x1b\[\d?J/,
        sub: remove
      }, {
        pattern: /^\x1b\[\d{0,3};\d{0,3}f/,
        sub: remove
      }, {
        pattern: /^\x1b\[?[\d;]{0,3}/,
        sub: remove
      }, {
        pattern: /^(([^\x1b\x08\r\n])+)/,
        sub: realText
      }];
      function process2(handler2, i3) {
        if (i3 > ansiHandler && ansiMatch) {
          return;
        }
        ansiMatch = false;
        text = text.replace(handler2.pattern, handler2.sub);
      }
      var results1 = [];
      var _text = text, length = _text.length;
      outer:
        while (length > 0) {
          for (var i2 = 0, o = 0, len = tokens.length; o < len; i2 = ++o) {
            var handler = tokens[i2];
            process2(handler, i2);
            if (text.length !== length) {
              length = text.length;
              continue outer;
            }
          }
          if (text.length === length) {
            break;
          }
          results1.push(0);
          length = text.length;
        }
      return results1;
    }
    function updateStickyStack(stickyStack, token, data) {
      if (token !== "text") {
        stickyStack = stickyStack.filter(notCategory(categoryForCode(data)));
        stickyStack.push({
          token,
          data,
          category: categoryForCode(data)
        });
      }
      return stickyStack;
    }
    var Filter = /* @__PURE__ */ function() {
      function Filter2(options) {
        _classCallCheck(this, Filter2);
        options = options || {};
        if (options.colors) {
          options.colors = Object.assign({}, defaults.colors, options.colors);
        }
        this.options = Object.assign({}, defaults, options);
        this.stack = [];
        this.stickyStack = [];
      }
      _createClass(Filter2, [{
        key: "toHtml",
        value: function toHtml(input) {
          var _this = this;
          input = typeof input === "string" ? [input] : input;
          var stack = this.stack, options = this.options;
          var buf = [];
          this.stickyStack.forEach(function(element) {
            var output = generateOutput(stack, element.token, element.data, options);
            if (output) {
              buf.push(output);
            }
          });
          tokenize(input.join(""), options, function(token, data) {
            var output = generateOutput(stack, token, data, options);
            if (output) {
              buf.push(output);
            }
            if (options.stream) {
              _this.stickyStack = updateStickyStack(_this.stickyStack, token, data);
            }
          });
          if (stack.length) {
            buf.push(resetStyles(stack));
          }
          return buf.join("");
        }
      }]);
      return Filter2;
    }();
    module.exports = Filter;
  }
});

// node_modules/@storybook/preview-web/dist/index.js
var require_dist8 = __commonJS({
  "node_modules/@storybook/preview-web/dist/index.js"(exports, module) {
    "use strict";
    init_define_module();
    init_define_process_env();
    var _e = Object.create;
    var L = Object.defineProperty;
    var Ie = Object.getOwnPropertyDescriptor;
    var Me = Object.getOwnPropertyNames;
    var De = Object.getPrototypeOf;
    var ve = Object.prototype.hasOwnProperty;
    var Oe = (o, e) => {
      for (var r in e)
        L(o, r, { get: e[r], enumerable: true });
    };
    var J = (o, e, r, t) => {
      if (e && typeof e == "object" || typeof e == "function")
        for (let n of Me(e))
          !ve.call(o, n) && n !== r && L(o, n, { get: () => e[n], enumerable: !(t = Ie(e, n)) || t.enumerable });
      return o;
    };
    var w = (o, e, r) => (r = o != null ? _e(De(o)) : {}, J(e || !o || !o.__esModule ? L(r, "default", { value: o, enumerable: true }) : r, o));
    var Le = (o) => J(L({}, "__esModule", { value: true }), o);
    var Xe = {};
    Oe(Xe, { DocsContext: () => E, Preview: () => C, PreviewWeb: () => U, composeConfigs: () => Ce.composeConfigs, simulateDOMContentLoaded: () => Y2, simulatePageLoad: () => xe });
    module.exports = Le(Xe);
    var Ce = require_dist6();
    var z = require_dist4();
    var x2 = w(require_window());
    var H = require_synchronous_promise();
    var h2 = (init_core_events(), __toCommonJS(core_events_exports));
    var I = (init_client_logger(), __toCommonJS(client_logger_exports));
    var j2 = (init_addons(), __toCommonJS(addons_exports));
    var te = require_dist6();
    var V = w(require_window());
    var re = (init_client_logger(), __toCommonJS(client_logger_exports));
    var g = (init_core_events(), __toCommonJS(core_events_exports));
    var f2 = new Error("prepareAborted");
    var { AbortController: ee } = V.default;
    function je(o) {
      try {
        let { name: e = "Error", message: r = String(o), stack: t } = o;
        return { name: e, message: r, stack: t };
      } catch {
        return { name: "Error", message: String(o) };
      }
    }
    var F = class {
      constructor(e, r, t, n, s2, a2, d = { autoplay: true }, c2) {
        this.channel = e;
        this.store = r;
        this.renderToScreen = t;
        this.callbacks = n;
        this.id = s2;
        this.viewMode = a2;
        this.renderOptions = d;
        this.type = "story";
        this.notYetRendered = true;
        this.disableKeyListeners = false;
        this.teardownRender = () => {
        };
        this.torndown = false;
        this.abortController = new ee(), c2 && (this.story = c2, this.phase = "preparing");
      }
      async runPhase(e, r, t) {
        this.phase = r, this.channel.emit(g.STORY_RENDER_PHASE_CHANGED, { newPhase: this.phase, storyId: this.id }), t && await t(), e.aborted && (this.phase = "aborted", this.channel.emit(g.STORY_RENDER_PHASE_CHANGED, { newPhase: this.phase, storyId: this.id }));
      }
      async prepare() {
        if (await this.runPhase(this.abortController.signal, "preparing", async () => {
          this.story = await this.store.loadStory({ storyId: this.id });
        }), this.abortController.signal.aborted)
          throw this.store.cleanupStory(this.story), f2;
      }
      isEqual(e) {
        return !!(this.id === e.id && this.story && this.story === e.story);
      }
      isPreparing() {
        return ["preparing"].includes(this.phase);
      }
      isPending() {
        return ["rendering", "playing"].includes(this.phase);
      }
      async renderToElement(e) {
        return this.canvasElement = e, this.render({ initial: true, forceRemount: true });
      }
      storyContext() {
        if (!this.story)
          throw new Error("Cannot call storyContext before preparing");
        return this.store.getStoryContext(this.story);
      }
      async render({ initial: e = false, forceRemount: r = false } = {}) {
        let { canvasElement: t } = this;
        if (!this.story)
          throw new Error("cannot render when not prepared");
        if (!t)
          throw new Error("cannot render when canvasElement is unset");
        let { id: n, componentId: s2, title: a2, name: d, tags: c2, applyLoaders: l, unboundStoryFn: O, playFunction: m2 } = this.story;
        r && !e && (this.cancelRender(), this.abortController = new ee());
        let y2 = this.abortController.signal;
        try {
          let R;
          if (await this.runPhase(y2, "loading", async () => {
            R = await l({ ...this.storyContext(), viewMode: this.viewMode });
          }), y2.aborted)
            return;
          let k2 = { ...R, ...this.storyContext(), abortSignal: y2, canvasElement: t }, _2 = { componentId: s2, title: a2, kind: a2, id: n, name: d, story: d, tags: c2, ...this.callbacks, showError: (S) => (this.phase = "errored", this.callbacks.showError(S)), showException: (S) => (this.phase = "errored", this.callbacks.showException(S)), forceRemount: r || this.notYetRendered, storyContext: k2, storyFn: () => O(k2), unboundStoryFn: O };
          if (await this.runPhase(y2, "rendering", async () => {
            let S = await this.renderToScreen(_2, t);
            this.teardownRender = S || (() => {
            });
          }), this.notYetRendered = false, y2.aborted)
            return;
          if (this.renderOptions.autoplay && r && m2 && this.phase !== "errored") {
            this.disableKeyListeners = true;
            try {
              await this.runPhase(y2, "playing", async () => {
                await m2(_2.storyContext);
              }), await this.runPhase(y2, "played");
            } catch (S) {
              if (re.logger.error(S), await this.runPhase(y2, "errored", async () => {
                this.channel.emit(g.PLAY_FUNCTION_THREW_EXCEPTION, je(S));
              }), this.story.parameters.throwPlayFunctionExceptions !== false)
                throw S;
            }
            if (this.disableKeyListeners = false, y2.aborted)
              return;
          }
          await this.runPhase(y2, "completed", async () => this.channel.emit(g.STORY_RENDERED, n));
        } catch (R) {
          this.phase = "errored", this.callbacks.showException(R);
        }
      }
      async rerender() {
        return this.render();
      }
      async remount() {
        return this.render({ forceRemount: true });
      }
      cancelRender() {
        var e;
        (e = this.abortController) == null || e.abort();
      }
      async teardown() {
        this.torndown = true, this.cancelRender(), this.story && this.store.cleanupStory(this.story);
        for (let e = 0; e < 3; e += 1) {
          if (!this.isPending()) {
            await this.teardownRender();
            return;
          }
          await new Promise((r) => setTimeout(r, 0));
        }
        V.default.window.location.reload(), await new Promise(() => {
        });
      }
    };
    var { fetch: Ne } = x2.default;
    var Ge = "./index.json";
    var C = class {
      constructor(e = j2.addons.getChannel()) {
        this.channel = e;
        this.storyRenders = [];
        var r;
        ((r = x2.default.FEATURES) == null ? void 0 : r.storyStoreV7) && j2.addons.hasServerChannel() && (this.serverChannel = j2.addons.getServerChannel()), this.storyStore = new te.StoryStore();
      }
      initialize({ getStoryIndex: e, importFn: r, getProjectAnnotations: t }) {
        return this.getStoryIndex = e, this.importFn = r, this.setupListeners(), this.getProjectAnnotationsOrRenderError(t).then((n) => this.initializeWithProjectAnnotations(n));
      }
      setupListeners() {
        var e;
        (e = this.serverChannel) == null || e.on(h2.STORY_INDEX_INVALIDATED, this.onStoryIndexChanged.bind(this)), this.channel.on(h2.UPDATE_GLOBALS, this.onUpdateGlobals.bind(this)), this.channel.on(h2.UPDATE_STORY_ARGS, this.onUpdateArgs.bind(this)), this.channel.on(h2.RESET_STORY_ARGS, this.onResetArgs.bind(this)), this.channel.on(h2.FORCE_RE_RENDER, this.onForceReRender.bind(this)), this.channel.on(h2.FORCE_REMOUNT, this.onForceRemount.bind(this));
      }
      getProjectAnnotationsOrRenderError(e) {
        return H.SynchronousPromise.resolve().then(e).then((r) => {
          if (this.renderToDOM = r.renderToDOM, !this.renderToDOM)
            throw new Error(z.dedent`
            Expected your framework's preset to export a \`renderToDOM\` field.

            Perhaps it needs to be upgraded for Storybook 6.4?

            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field
          `);
          return r;
        }).catch((r) => {
          throw this.renderPreviewEntryError("Error reading preview.js:", r), r;
        });
      }
      initializeWithProjectAnnotations(e) {
        var t;
        this.storyStore.setProjectAnnotations(e), this.setInitialGlobals();
        let r;
        if ((t = x2.default.FEATURES) != null && t.storyStoreV7)
          r = this.getStoryIndexFromServer();
        else {
          if (!this.getStoryIndex)
            throw new Error("No `getStoryIndex` passed defined in v6 mode");
          r = H.SynchronousPromise.resolve().then(this.getStoryIndex);
        }
        return r.then((n) => this.initializeWithStoryIndex(n)).catch((n) => {
          throw this.renderPreviewEntryError("Error loading story index:", n), n;
        });
      }
      async setInitialGlobals() {
        this.emitGlobals();
      }
      emitGlobals() {
        if (!this.storyStore.globals || !this.storyStore.projectAnnotations)
          throw new Error("Cannot emit before initialization");
        this.channel.emit(h2.SET_GLOBALS, { globals: this.storyStore.globals.get() || {}, globalTypes: this.storyStore.projectAnnotations.globalTypes || {} });
      }
      async getStoryIndexFromServer() {
        let e = await Ne(Ge);
        if (e.status === 200)
          return e.json();
        throw new Error(await e.text());
      }
      initializeWithStoryIndex(e) {
        var r;
        if (!this.importFn)
          throw new Error("Cannot call initializeWithStoryIndex before initialization");
        return this.storyStore.initialize({ storyIndex: e, importFn: this.importFn, cache: !((r = x2.default.FEATURES) != null && r.storyStoreV7) });
      }
      async onGetProjectAnnotationsChanged({ getProjectAnnotations: e }) {
        delete this.previewEntryError;
        let r = await this.getProjectAnnotationsOrRenderError(e);
        if (!this.storyStore.projectAnnotations) {
          await this.initializeWithProjectAnnotations(r);
          return;
        }
        await this.storyStore.setProjectAnnotations(r), this.emitGlobals();
      }
      async onStoryIndexChanged() {
        if (delete this.previewEntryError, !!this.storyStore.projectAnnotations)
          try {
            let e = await this.getStoryIndexFromServer();
            this.storyStore.storyIndex || await this.initializeWithStoryIndex(e), await this.onStoriesChanged({ storyIndex: e });
          } catch (e) {
            throw this.renderPreviewEntryError("Error loading story index:", e), e;
          }
      }
      async onStoriesChanged({ importFn: e, storyIndex: r }) {
        await this.storyStore.onStoriesChanged({ importFn: e, storyIndex: r });
      }
      async onUpdateGlobals({ globals: e }) {
        if (!this.storyStore.globals)
          throw new Error("Cannot call onUpdateGlobals before initialization");
        this.storyStore.globals.update(e), await Promise.all(this.storyRenders.map((r) => r.rerender())), this.channel.emit(h2.GLOBALS_UPDATED, { globals: this.storyStore.globals.get(), initialGlobals: this.storyStore.globals.initialGlobals });
      }
      async onUpdateArgs({ storyId: e, updatedArgs: r }) {
        this.storyStore.args.update(e, r), await Promise.all(this.storyRenders.filter((t) => t.id === e).map((t) => t.rerender())), this.channel.emit(h2.STORY_ARGS_UPDATED, { storyId: e, args: this.storyStore.args.get(e) });
      }
      async onResetArgs({ storyId: e, argNames: r }) {
        let t = this.storyRenders.find((d) => d.id === e), n = (t == null ? void 0 : t.story) || await this.storyStore.loadStory({ storyId: e }), a2 = (r || [.../* @__PURE__ */ new Set([...Object.keys(n.initialArgs), ...Object.keys(this.storyStore.args.get(e))])]).reduce((d, c2) => (d[c2] = n.initialArgs[c2], d), {});
        await this.onUpdateArgs({ storyId: e, updatedArgs: a2 });
      }
      async onForceReRender() {
        await Promise.all(this.storyRenders.map((e) => e.rerender()));
      }
      async onForceRemount({ storyId: e }) {
        await Promise.all(this.storyRenders.filter((r) => r.id === e).map((r) => r.remount()));
      }
      renderStoryToElement(e, r, t) {
        if (!this.renderToDOM)
          throw new Error("Cannot call renderStoryToElement before initialization");
        let n = new F(this.channel, this.storyStore, this.renderToDOM, this.inlineStoryCallbacks(e.id), e.id, "docs", t, e);
        return n.renderToElement(r), this.storyRenders.push(n), async () => {
          await this.teardownRender(n);
        };
      }
      async teardownRender(e, { viewModeChanged: r } = {}) {
        var t;
        this.storyRenders = this.storyRenders.filter((n) => n !== e), await ((t = e == null ? void 0 : e.teardown) == null ? void 0 : t.call(e, { viewModeChanged: r }));
      }
      async extract(e) {
        var r;
        if (this.previewEntryError)
          throw this.previewEntryError;
        if (!this.storyStore.projectAnnotations)
          throw new Error(z.dedent`Failed to initialize Storybook.

      Do you have an error in your \`preview.js\`? Check your Storybook's browser console for errors.`);
        return (r = x2.default.FEATURES) != null && r.storyStoreV7 && await this.storyStore.cacheAllCSFFiles(), this.storyStore.extract(e);
      }
      inlineStoryCallbacks(e) {
        return { showMain: () => {
        }, showError: (r) => I.logger.error(`Error rendering docs story (${e})`, r), showException: (r) => I.logger.error(`Error rendering docs story (${e})`, r) };
      }
      renderPreviewEntryError(e, r) {
        this.previewEntryError = r, I.logger.error(e), I.logger.error(r), this.channel.emit(h2.CONFIG_ERROR, r);
      }
    };
    var $ = require_dist4();
    var A3 = w(require_window());
    var i2 = (init_core_events(), __toCommonJS(core_events_exports));
    var T2 = (init_client_logger(), __toCommonJS(client_logger_exports));
    var ce = w(require_window());
    var N = w(require_lib());
    var ne = w(require_lib());
    var se = require_dist4();
    var ie = (init_client_logger(), __toCommonJS(client_logger_exports));
    var ae = w(require_isPlainObject());
    var oe = /^[a-zA-Z0-9 _-]*$/;
    var de = /^-?[0-9]+(\.[0-9]+)?$/;
    var We = /^#([a-f0-9]{3,4}|[a-f0-9]{6}|[a-f0-9]{8})$/i;
    var le = /^(rgba?|hsla?)\(([0-9]{1,3}),\s?([0-9]{1,3})%?,\s?([0-9]{1,3})%?,?\s?([0-9](\.[0-9]{1,2})?)?\)$/i;
    var B = (o = "", e) => o === null || o === "" || !oe.test(o) ? false : e == null || e instanceof Date || typeof e == "number" || typeof e == "boolean" ? true : typeof e == "string" ? oe.test(e) || de.test(e) || We.test(e) || le.test(e) : Array.isArray(e) ? e.every((r) => B(o, r)) : (0, ae.default)(e) ? Object.entries(e).every(([r, t]) => B(r, t)) : false;
    var $e = { delimiter: ";", allowDots: true, allowSparse: true, decoder(o, e, r, t) {
      if (t === "value" && o.startsWith("!")) {
        if (o === "!undefined")
          return;
        if (o === "!null")
          return null;
        if (o.startsWith("!date(") && o.endsWith(")"))
          return new Date(o.slice(6, -1));
        if (o.startsWith("!hex(") && o.endsWith(")"))
          return `#${o.slice(5, -1)}`;
        let n = o.slice(1).match(le);
        if (n)
          return o.startsWith("!rgba") ? `${n[1]}(${n[2]}, ${n[3]}, ${n[4]}, ${n[5]})` : o.startsWith("!hsla") ? `${n[1]}(${n[2]}, ${n[3]}%, ${n[4]}%, ${n[5]})` : o.startsWith("!rgb") ? `${n[1]}(${n[2]}, ${n[3]}, ${n[4]})` : `${n[1]}(${n[2]}, ${n[3]}%, ${n[4]}%)`;
      }
      return t === "value" && de.test(o) ? Number(o) : e(o, e, r);
    } };
    var q = (o) => {
      let e = o.split(";").map((r) => r.replace("=", "~").replace(":", "="));
      return Object.entries(ne.default.parse(e.join(";"), $e)).reduce((r, [t, n]) => B(t, n) ? Object.assign(r, { [t]: n }) : (ie.once.warn(se.dedent`
      Omitted potentially unsafe URL args.

      More info: https://storybook.js.org/docs/react/writing-stories/args#setting-args-through-the-url
    `), r), {});
    };
    var { history: he, document: b2 } = ce.default;
    function Ue(o) {
      let e = (o || "").match(/^\/story\/(.+)/);
      if (!e)
        throw new Error(`Invalid path '${o}',  must start with '/story/'`);
      return e[1];
    }
    var ye = ({ selection: o, extraParams: e }) => {
      let { search: r = "" } = b2.location, { path: t, selectedKind: n, selectedStory: s2, ...a2 } = N.default.parse(r, { ignoreQueryPrefix: true });
      return N.default.stringify({ ...a2, ...e, ...o && { id: o.storyId, viewMode: o.viewMode } }, { encode: false, addQueryPrefix: true });
    };
    var Ye = (o) => {
      if (!o)
        return;
      let e = ye({ selection: o }), { hash: r = "" } = b2.location;
      b2.title = o.storyId, he.replaceState({}, "", `${b2.location.pathname}${e}${r}`);
    };
    var Ve = (o) => o != null && typeof o == "object" && Array.isArray(o) === false;
    var M2 = (o) => {
      if (o !== void 0) {
        if (typeof o == "string")
          return o;
        if (Array.isArray(o))
          return M2(o[0]);
        if (Ve(o))
          return M2(Object.values(o).filter(Boolean));
      }
    };
    var ze = () => {
      let o = N.default.parse(b2.location.search, { ignoreQueryPrefix: true }), e = typeof o.args == "string" ? q(o.args) : void 0, r = typeof o.globals == "string" ? q(o.globals) : void 0, t = M2(o.viewMode);
      (typeof t != "string" || !t.match(/docs|story/)) && (t = "story");
      let n = M2(o.path), s2 = n ? Ue(n) : M2(o.id);
      return s2 ? { storySpecifier: s2, args: e, globals: r, viewMode: t } : null;
    };
    var G = class {
      constructor() {
        this.selectionSpecifier = ze();
      }
      setSelection(e) {
        this.selection = e, Ye(this.selection);
      }
      setQueryParams(e) {
        let r = ye({ extraParams: e }), { hash: t = "" } = b2.location;
        he.replaceState({}, "", `${b2.location.pathname}${r}${t}`);
      }
    };
    var Se = w(require_window());
    var we = (init_client_logger(), __toCommonJS(client_logger_exports));
    var ue = w(require_ansi_to_html());
    var fe = require_dist4();
    var Ee = w(require_lib());
    var { document: p } = Se.default;
    var pe = 100;
    var K = { centered: "sb-main-centered", fullscreen: "sb-main-fullscreen", padded: "sb-main-padded" };
    var Re = ((s2) => (s2.MAIN = "MAIN", s2.NOPREVIEW = "NOPREVIEW", s2.PREPARING_STORY = "PREPARING_STORY", s2.PREPARING_DOCS = "PREPARING_DOCS", s2.ERROR = "ERROR", s2))(Re || {});
    var Q = { PREPARING_STORY: "sb-show-preparing-story", PREPARING_DOCS: "sb-show-preparing-docs", MAIN: "sb-show-main", NOPREVIEW: "sb-show-nopreview", ERROR: "sb-show-errordisplay" };
    var me = new ue.default({ escapeXML: true });
    var W2 = class {
      constructor() {
        this.testing = false;
        let { __SPECIAL_TEST_PARAMETER__: e } = Ee.default.parse(p.location.search, { ignoreQueryPrefix: true });
        switch (e) {
          case "preparing-story": {
            this.showPreparingStory(), this.testing = true;
            break;
          }
          case "preparing-docs": {
            this.showPreparingDocs(), this.testing = true;
            break;
          }
          default:
        }
      }
      prepareForStory(e) {
        return this.showStory(), this.applyLayout(e.parameters.layout), p.documentElement.scrollTop = 0, p.documentElement.scrollLeft = 0, this.storyRoot();
      }
      storyRoot() {
        return p.getElementById("storybook-root");
      }
      prepareForDocs() {
        return this.showMain(), this.showDocs(), this.applyLayout("fullscreen"), this.docsRoot();
      }
      docsRoot() {
        return p.getElementById("storybook-docs");
      }
      applyLayout(e = "padded") {
        if (e === "none") {
          p.body.classList.remove(this.currentLayoutClass), this.currentLayoutClass = null;
          return;
        }
        this.checkIfLayoutExists(e);
        let r = K[e];
        p.body.classList.remove(this.currentLayoutClass), p.body.classList.add(r), this.currentLayoutClass = r;
      }
      checkIfLayoutExists(e) {
        K[e] || we.logger.warn(fe.dedent`The desired layout: ${e} is not a valid option.
         The possible options are: ${Object.keys(K).join(", ")}, none.`);
      }
      showMode(e) {
        clearTimeout(this.preparingTimeout), Object.keys(Re).forEach((r) => {
          r === e ? p.body.classList.add(Q[r]) : p.body.classList.remove(Q[r]);
        });
      }
      showErrorDisplay({ message: e = "", stack: r = "" }) {
        let t = e, n = r, s2 = e.split(`
`);
        s2.length > 1 && ([t] = s2, n = s2.slice(1).join(`
`)), p.getElementById("error-message").innerHTML = me.toHtml(t), p.getElementById("error-stack").innerHTML = me.toHtml(n), this.showMode("ERROR");
      }
      showNoPreview() {
        var e, r;
        this.testing || (this.showMode("NOPREVIEW"), (e = this.storyRoot()) == null || e.setAttribute("hidden", "true"), (r = this.docsRoot()) == null || r.setAttribute("hidden", "true"));
      }
      showPreparingStory({ immediate: e = false } = {}) {
        clearTimeout(this.preparingTimeout), e ? this.showMode("PREPARING_STORY") : this.preparingTimeout = setTimeout(() => this.showMode("PREPARING_STORY"), pe);
      }
      showPreparingDocs() {
        clearTimeout(this.preparingTimeout), this.preparingTimeout = setTimeout(() => this.showMode("PREPARING_DOCS"), pe);
      }
      showMain() {
        this.showMode("MAIN");
      }
      showDocs() {
        this.storyRoot().setAttribute("hidden", "true"), this.docsRoot().removeAttribute("hidden");
      }
      showStory() {
        this.docsRoot().setAttribute("hidden", "true"), this.storyRoot().removeAttribute("hidden");
      }
      showStoryDuringRender() {
        p.body.classList.add(Q.MAIN);
      }
    };
    var ge = (init_core_events(), __toCommonJS(core_events_exports));
    var E = class {
      constructor(e, r, t, n, s2 = true) {
        this.channel = e;
        this.store = r;
        this.renderStoryToElement = t;
        this.storyIdByName = (e2) => {
          let r2 = this.nameToStoryId.get(e2);
          if (r2)
            return r2;
          throw new Error(`No story found with that name: ${e2}`);
        };
        this.componentStories = () => this.componentStoriesValue;
        this.storyById = (e2) => {
          if (!e2) {
            if (!this.primaryStory)
              throw new Error("No primary story defined for docs entry. Did you forget to use `<Meta>`?");
            return this.primaryStory;
          }
          let r2 = this.storyIdToCSFFile.get(e2);
          if (!r2)
            throw new Error(`Called \`storyById\` for story that was never loaded: ${e2}`);
          return this.store.storyFromCSFFile({ storyId: e2, csfFile: r2 });
        };
        this.getStoryContext = (e2) => ({ ...this.store.getStoryContext(e2), viewMode: "docs" });
        this.loadStory = (e2) => this.store.loadStory({ storyId: e2 });
        this.storyIdToCSFFile = /* @__PURE__ */ new Map(), this.exportToStoryId = /* @__PURE__ */ new Map(), this.nameToStoryId = /* @__PURE__ */ new Map(), this.componentStoriesValue = [], n.forEach((a2, d) => {
          this.referenceCSFFile(a2, s2 || d === 0);
        });
      }
      referenceCSFFile(e, r) {
        Object.values(e.stories).forEach((t) => {
          if (this.storyIdToCSFFile.set(t.id, e), this.exportToStoryId.set(t.moduleExport, t.id), r) {
            this.nameToStoryId.set(t.name, t.id);
            let n = this.storyById(t.id);
            this.componentStoriesValue.push(n), this.primaryStory || (this.primaryStory = n);
          }
        });
      }
      setMeta(e) {
      }
      storyIdByModuleExport(e, r) {
        let t = this.exportToStoryId.get(e);
        if (t)
          return t;
        throw new Error(`No story found with that export: ${e}`);
      }
    };
    var D = class {
      constructor(e, r, t) {
        this.channel = e;
        this.store = r;
        this.entry = t;
        this.type = "docs";
        this.torndown = false;
        this.disableKeyListeners = false;
        this.preparing = false;
        this.id = t.id;
      }
      isPreparing() {
        return this.preparing;
      }
      async prepare() {
        this.preparing = true;
        let { entryExports: e, csfFiles: r = [] } = await this.store.loadEntry(this.id);
        if (this.torndown)
          throw f2;
        let { importPath: t, title: n } = this.entry, s2 = this.store.processCSFFileWithCache(e, t, n), a2 = Object.keys(s2.stories)[0];
        this.story = this.store.storyFromCSFFile({ storyId: a2, csfFile: s2 }), this.csfFiles = [s2, ...r], this.preparing = false;
      }
      isEqual(e) {
        return !!(this.id === e.id && this.story && this.story === e.story);
      }
      async renderToElement(e, r) {
        if (!this.story || !this.csfFiles)
          throw new Error("Cannot render docs before preparing");
        let t = new E(this.channel, this.store, r, this.csfFiles, true), { docs: n } = this.story.parameters || {};
        if (!n)
          throw new Error("Cannot render a story in viewMode=docs if `@storybook/addon-docs` is not installed");
        let s2 = await n.renderer(), { render: a2 } = s2, d = async () => {
          await new Promise((c2) => a2(t, n, e, c2)), this.channel.emit(ge.DOCS_RENDERED, this.id);
        };
        return this.rerender = async () => d(), this.teardownRender = async ({ viewModeChanged: c2 }) => {
          !c2 || !e || s2.unmount(e);
        }, d();
      }
      async teardown({ viewModeChanged: e } = {}) {
        var r;
        (r = this.teardownRender) == null || r.call(this, { viewModeChanged: e }), this.torndown = true;
      }
    };
    var be = (init_core_events(), __toCommonJS(core_events_exports));
    var v = class {
      constructor(e, r, t) {
        this.channel = e;
        this.store = r;
        this.entry = t;
        this.type = "docs";
        this.torndown = false;
        this.disableKeyListeners = false;
        this.preparing = false;
        this.id = t.id;
      }
      isPreparing() {
        return this.preparing;
      }
      async prepare() {
        this.preparing = true;
        let { entryExports: e, csfFiles: r = [] } = await this.store.loadEntry(this.id);
        if (this.torndown)
          throw f2;
        this.csfFiles = r, this.exports = e, this.preparing = false;
      }
      isEqual(e) {
        return !!(this.id === e.id && this.exports && this.exports === e.exports);
      }
      async renderToElement(e, r) {
        if (!this.exports || !this.csfFiles || !this.store.projectAnnotations)
          throw new Error("Cannot render docs before preparing");
        let t = new E(this.channel, this.store, r, this.csfFiles, false), { docs: n } = this.store.projectAnnotations.parameters || {};
        if (!n)
          throw new Error("Cannot render a story in viewMode=docs if `@storybook/addon-docs` is not installed");
        let s2 = { ...n, page: this.exports.default }, a2 = await n.renderer(), { render: d } = a2, c2 = async () => {
          await new Promise((l) => d(t, s2, e, l)), this.channel.emit(be.DOCS_RENDERED, this.id);
        };
        return this.rerender = async () => c2(), this.teardownRender = async ({ viewModeChanged: l } = {}) => {
          !l || !e || (a2.unmount(e), this.torndown = true);
        }, c2();
      }
      async teardown({ viewModeChanged: e } = {}) {
        var r;
        (r = this.teardownRender) == null || r.call(this, { viewModeChanged: e }), this.torndown = true;
      }
    };
    var { window: He } = A3.default;
    function Be(o) {
      let e = o.target;
      return /input|textarea/i.test(e.tagName) || e.getAttribute("contenteditable") !== null;
    }
    function X(o) {
      return o.type === "story";
    }
    var U = class extends C {
      constructor() {
        super();
        this.view = new W2(), this.urlStore = new G();
      }
      setupListeners() {
        super.setupListeners(), He.onkeydown = this.onKeydown.bind(this), this.channel.on(i2.SET_CURRENT_STORY, this.onSetCurrentStory.bind(this)), this.channel.on(i2.UPDATE_QUERY_PARAMS, this.onUpdateQueryParams.bind(this)), this.channel.on(i2.PRELOAD_ENTRIES, this.onPreloadStories.bind(this));
      }
      initializeWithProjectAnnotations(r) {
        return super.initializeWithProjectAnnotations(r).then(() => this.setInitialGlobals());
      }
      async setInitialGlobals() {
        if (!this.storyStore.globals)
          throw new Error("Cannot call setInitialGlobals before initialization");
        let { globals: r } = this.urlStore.selectionSpecifier || {};
        r && this.storyStore.globals.updateFromPersisted(r), this.emitGlobals();
      }
      initializeWithStoryIndex(r) {
        return super.initializeWithStoryIndex(r).then(() => {
          var t;
          return (t = A3.default.FEATURES) != null && t.storyStoreV7 || this.channel.emit(i2.SET_INDEX, this.storyStore.getSetIndexPayload()), this.selectSpecifiedStory();
        });
      }
      async selectSpecifiedStory() {
        if (!this.storyStore.storyIndex)
          throw new Error("Cannot call selectSpecifiedStory before initialization");
        if (!this.urlStore.selectionSpecifier) {
          this.renderMissingStory();
          return;
        }
        let { storySpecifier: r, args: t } = this.urlStore.selectionSpecifier, n = this.storyStore.storyIndex.entryFromSpecifier(r);
        if (!n) {
          r === "*" ? this.renderStoryLoadingException(r, new Error($.dedent`
            Couldn't find any stories in your Storybook.
            - Please check your stories field of your main.js config.
            - Also check the browser console and terminal for error messages.
          `)) : this.renderStoryLoadingException(r, new Error($.dedent`
            Couldn't find story matching '${r}'.
            - Are you sure a story with that id exists?
            - Please check your stories field of your main.js config.
            - Also check the browser console and terminal for error messages.
          `));
          return;
        }
        let { id: s2, type: a2 } = n;
        this.urlStore.setSelection({ storyId: s2, viewMode: a2 }), this.channel.emit(i2.STORY_SPECIFIED, this.urlStore.selection), this.channel.emit(i2.CURRENT_STORY_WAS_SET, this.urlStore.selection), await this.renderSelection({ persistedArgs: t });
      }
      async onGetProjectAnnotationsChanged({ getProjectAnnotations: r }) {
        await super.onGetProjectAnnotationsChanged({ getProjectAnnotations: r }), this.urlStore.selection && this.renderSelection();
      }
      async onStoriesChanged({ importFn: r, storyIndex: t }) {
        var n;
        await super.onStoriesChanged({ importFn: r, storyIndex: t }), (n = A3.default.FEATURES) != null && n.storyStoreV7 || this.channel.emit(i2.SET_INDEX, await this.storyStore.getSetIndexPayload()), this.urlStore.selection ? await this.renderSelection() : await this.selectSpecifiedStory();
      }
      onKeydown(r) {
        if (!this.storyRenders.find((t) => t.disableKeyListeners) && !Be(r)) {
          let { altKey: t, ctrlKey: n, metaKey: s2, shiftKey: a2, key: d, code: c2, keyCode: l } = r;
          this.channel.emit(i2.PREVIEW_KEYDOWN, { event: { altKey: t, ctrlKey: n, metaKey: s2, shiftKey: a2, key: d, code: c2, keyCode: l } });
        }
      }
      async onSetCurrentStory(r) {
        await this.storyStore.initializationPromise, this.urlStore.setSelection({ viewMode: "story", ...r }), this.channel.emit(i2.CURRENT_STORY_WAS_SET, this.urlStore.selection), this.renderSelection();
      }
      onUpdateQueryParams(r) {
        this.urlStore.setQueryParams(r);
      }
      async onUpdateGlobals({ globals: r }) {
        var t, n;
        super.onUpdateGlobals({ globals: r }), (this.currentRender instanceof v || this.currentRender instanceof D) && await ((n = (t = this.currentRender).rerender) == null ? void 0 : n.call(t));
      }
      async onUpdateArgs({ storyId: r, updatedArgs: t }) {
        super.onUpdateArgs({ storyId: r, updatedArgs: t });
      }
      async onPreloadStories({ ids: r }) {
        await Promise.allSettled(r.map((t) => this.storyStore.loadEntry(t)));
      }
      async renderSelection({ persistedArgs: r } = {}) {
        var R, k2, _2, S;
        let { renderToDOM: t } = this;
        if (!t)
          throw new Error("Cannot call renderSelection before initialization");
        let { selection: n } = this.urlStore;
        if (!n)
          throw new Error("Cannot call renderSelection as no selection was made");
        let { storyId: s2 } = n, a2;
        try {
          a2 = await this.storyStore.storyIdToEntry(s2);
        } catch (u) {
          this.currentRender && await this.teardownRender(this.currentRender), this.renderStoryLoadingException(s2, u);
          return;
        }
        let d = ((R = this.currentSelection) == null ? void 0 : R.storyId) !== s2, c2 = ((k2 = this.currentRender) == null ? void 0 : k2.type) !== a2.type;
        a2.type === "story" ? this.view.showPreparingStory({ immediate: c2 }) : this.view.showPreparingDocs(), (_2 = this.currentRender) != null && _2.isPreparing() && await this.teardownRender(this.currentRender);
        let l;
        a2.type === "story" ? l = new F(this.channel, this.storyStore, (...u) => (this.view.showStoryDuringRender(), t(...u)), this.mainStoryCallbacks(s2), s2, "story") : a2.standalone ? l = new v(this.channel, this.storyStore, a2) : l = new D(this.channel, this.storyStore, a2);
        let O = this.currentSelection;
        this.currentSelection = n;
        let m2 = this.currentRender;
        this.currentRender = l;
        try {
          await l.prepare();
        } catch (u) {
          u !== f2 && (m2 && await this.teardownRender(m2), this.renderStoryLoadingException(s2, u));
          return;
        }
        let y2 = !d && m2 && !l.isEqual(m2);
        if (r && X(l)) {
          if (!l.story)
            throw new Error("Render has not been prepared!");
          this.storyStore.args.updateFromPersisted(l.story, r);
        }
        if (m2 && !m2.torndown && !d && !y2 && !c2) {
          this.currentRender = m2, this.channel.emit(i2.STORY_UNCHANGED, s2), this.view.showMain();
          return;
        }
        if (m2 && await this.teardownRender(m2, { viewModeChanged: c2 }), O && (d || c2) && this.channel.emit(i2.STORY_CHANGED, s2), X(l)) {
          if (!l.story)
            throw new Error("Render has not been prepared!");
          let { parameters: u, initialArgs: Ae, argTypes: ke, args: Z } = this.storyStore.getStoryContext(l.story);
          (S = A3.default.FEATURES) != null && S.storyStoreV7 && this.channel.emit(i2.STORY_PREPARED, { id: s2, parameters: u, initialArgs: Ae, argTypes: ke, args: Z }), (y2 || r) && this.channel.emit(i2.STORY_ARGS_UPDATED, { storyId: s2, args: Z });
        }
        if (X(l)) {
          if (!l.story)
            throw new Error("Render has not been prepared!");
          this.storyRenders.push(l), this.currentRender.renderToElement(this.view.prepareForStory(l.story));
        } else
          this.currentRender.renderToElement(this.view.prepareForDocs(), this.renderStoryToElement.bind(this));
      }
      async teardownRender(r, { viewModeChanged: t = false } = {}) {
        var n;
        this.storyRenders = this.storyRenders.filter((s2) => s2 !== r), await ((n = r == null ? void 0 : r.teardown) == null ? void 0 : n.call(r, { viewModeChanged: t }));
      }
      async extract(r) {
        var t;
        if (this.previewEntryError)
          throw this.previewEntryError;
        if (!this.storyStore.projectAnnotations)
          throw new Error($.dedent`Failed to initialize Storybook.

      Do you have an error in your \`preview.js\`? Check your Storybook's browser console for errors.`);
        return (t = A3.default.FEATURES) != null && t.storyStoreV7 && await this.storyStore.cacheAllCSFFiles(), this.storyStore.extract(r);
      }
      mainStoryCallbacks(r) {
        return { showMain: () => this.view.showMain(), showError: (t) => this.renderError(r, t), showException: (t) => this.renderException(r, t) };
      }
      inlineStoryCallbacks(r) {
        return { showMain: () => {
        }, showError: (t) => T2.logger.error(`Error rendering docs story (${r})`, t), showException: (t) => T2.logger.error(`Error rendering docs story (${r})`, t) };
      }
      renderPreviewEntryError(r, t) {
        super.renderPreviewEntryError(r, t), this.view.showErrorDisplay(t);
      }
      renderMissingStory() {
        this.view.showNoPreview(), this.channel.emit(i2.STORY_MISSING);
      }
      renderStoryLoadingException(r, t) {
        T2.logger.error(t), this.view.showErrorDisplay(t), this.channel.emit(i2.STORY_MISSING, r);
      }
      renderException(r, t) {
        var d;
        let { name: n = "Error", message: s2 = String(t), stack: a2 } = t;
        this.channel.emit(i2.STORY_THREW_EXCEPTION, { name: n, message: s2, stack: a2 }), this.channel.emit(i2.STORY_RENDER_PHASE_CHANGED, { newPhase: "errored", storyId: r }), (d = t.message) != null && d.startsWith("ignoredException") || (this.view.showErrorDisplay(t), T2.logger.error(`Error rendering story '${r}':`), T2.logger.error(t));
      }
      renderError(r, { title: t, description: n }) {
        T2.logger.error(`Error rendering story ${t}: ${n}`), this.channel.emit(i2.STORY_ERRORED, { title: t, description: n }), this.channel.emit(i2.STORY_RENDER_PHASE_CHANGED, { newPhase: "errored", storyId: r }), this.view.showErrorDisplay({ message: t, stack: n });
      }
    };
    var Pe = w(require_window());
    var { document: P2 } = Pe.default;
    var qe = ["application/javascript", "application/ecmascript", "application/x-ecmascript", "application/x-javascript", "text/ecmascript", "text/javascript", "text/javascript1.0", "text/javascript1.1", "text/javascript1.2", "text/javascript1.3", "text/javascript1.4", "text/javascript1.5", "text/jscript", "text/livescript", "text/x-ecmascript", "text/x-javascript", "module"];
    var Ke = "script";
    var Te = "scripts-root";
    function Y2() {
      let o = P2.createEvent("Event");
      o.initEvent("DOMContentLoaded", true, true), P2.dispatchEvent(o);
    }
    function Qe(o, e, r) {
      let t = P2.createElement("script");
      t.type = o.type === "module" ? "module" : "text/javascript", o.src ? (t.onload = e, t.onerror = e, t.src = o.src) : t.textContent = o.innerText, r ? r.appendChild(t) : P2.head.appendChild(t), o.parentNode.removeChild(o), o.src || e();
    }
    function Fe(o, e, r = 0) {
      o[r](() => {
        r++, r === o.length ? e() : Fe(o, e, r);
      });
    }
    function xe(o) {
      let e = P2.getElementById(Te);
      e ? e.innerHTML = "" : (e = P2.createElement("div"), e.id = Te, P2.body.appendChild(e));
      let r = Array.from(o.querySelectorAll(Ke));
      if (r.length) {
        let t = [];
        r.forEach((n) => {
          let s2 = n.getAttribute("type");
          (!s2 || qe.includes(s2)) && t.push((a2) => Qe(n, a2, e));
        }), t.length && Fe(t, Y2, void 0);
      } else
        Y2();
    }
  }
});

// global-externals:@storybook/channels
var channels_exports = {};
__export(channels_exports, {
  Channel: () => Channel,
  default: () => channels_default
});
var channels_default, Channel;
var init_channels = __esm({
  "global-externals:@storybook/channels"() {
    init_define_module();
    init_define_process_env();
    channels_default = __STORYBOOKCHANNELS__;
    ({ Channel } = __STORYBOOKCHANNELS__);
  }
});

// node_modules/@storybook/blocks/dist/index.js
var require_dist9 = __commonJS({
  "node_modules/@storybook/blocks/dist/index.js"(exports, module) {
    init_define_module();
    init_define_process_env();
    var zs = Object.create;
    var ht = Object.defineProperty;
    var Rs = Object.getOwnPropertyDescriptor;
    var Js = Object.getOwnPropertyNames;
    var Gs = Object.getPrototypeOf;
    var Ks = Object.prototype.hasOwnProperty;
    var gr = (e, t) => () => (e && (t = e(e = 0)), t);
    var fr = (e, t) => {
      for (var o in t)
        ht(e, o, { get: t[o], enumerable: true });
    };
    var hr = (e, t, o, r) => {
      if (t && typeof t == "object" || typeof t == "function")
        for (let n of Js(t))
          !Ks.call(e, n) && n !== o && ht(e, n, { get: () => t[n], enumerable: !(r = Rs(t, n)) || r.enumerable });
      return e;
    };
    var f2 = (e, t, o) => (o = e != null ? zs(Gs(e)) : {}, hr(t || !e || !e.__esModule ? ht(o, "default", { value: e, enumerable: true }) : o, e));
    var Ys = (e) => hr(ht({}, "__esModule", { value: true }), e);
    var I;
    var xe;
    var Y2 = gr(() => {
      I = (e) => `control-${e.replace(/\s+/g, "-")}`, xe = (e) => `set-${e.replace(/\s+/g, "-")}`;
    });
    var $n = {};
    fr($n, { ColorControl: () => jn, default: () => Ti });
    var E;
    var $e;
    var K;
    var Ln;
    var ce;
    var me;
    var li;
    var pi;
    var di;
    var ci;
    var mi;
    var ui;
    var yi;
    var Nn;
    var gi;
    var fi;
    var Mn;
    var Lt;
    var hi;
    var bi;
    var xi;
    var Lo;
    var Ci;
    var Si;
    var Mt;
    var Vn;
    var tt;
    var Pi;
    var Ei;
    var jt;
    var ki;
    var jn;
    var Ti;
    var _n = gr(() => {
      E = f2((init_react(), __toCommonJS(react_exports))), $e = require_dist(), K = f2(require_color_convert()), Ln = f2(require_throttle()), ce = (init_theming(), __toCommonJS(theming_exports)), me = (init_components(), __toCommonJS(components_exports));
      Y2();
      li = ce.styled.div({ position: "relative", maxWidth: 250 }), pi = (0, ce.styled)(me.WithTooltip)({ position: "absolute", zIndex: 1, top: 4, left: 4 }), di = ce.styled.div({ width: 200, margin: 5, ".react-colorful__saturation": { borderRadius: "4px 4px 0 0" }, ".react-colorful__hue": { boxShadow: "inset 0 0 0 1px rgb(0 0 0 / 5%)" }, ".react-colorful__last-control": { borderRadius: "0 0 4px 4px" } }), ci = (0, ce.styled)(me.TooltipNote)(({ theme: e }) => ({ fontFamily: e.typography.fonts.base })), mi = ce.styled.div({ display: "grid", gridTemplateColumns: "repeat(9, 16px)", gap: 6, padding: 3, marginTop: 5, width: 200 }), ui = ce.styled.div(({ theme: e, active: t }) => ({ width: 16, height: 16, boxShadow: t ? `${e.appBorderColor} 0 0 0 1px inset, ${e.textMutedColor}50 0 0 0 4px` : `${e.appBorderColor} 0 0 0 1px inset`, borderRadius: e.appBorderRadius })), yi = `url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')`, Nn = ({ value: e, active: t, onClick: o, style: r, ...n }) => {
        let s2 = `linear-gradient(${e}, ${e}), ${yi}, linear-gradient(#fff, #fff)`;
        return E.default.createElement(ui, { ...n, ...{ active: t, onClick: o }, style: { ...r, backgroundImage: s2 } });
      }, gi = (0, ce.styled)(me.Form.Input)(({ theme: e }) => ({ width: "100%", paddingLeft: 30, paddingRight: 30, boxSizing: "border-box", fontFamily: e.typography.fonts.base })), fi = (0, ce.styled)(me.Icons)(({ theme: e }) => ({ position: "absolute", zIndex: 1, top: 6, right: 7, width: 20, height: 20, padding: 4, boxSizing: "border-box", cursor: "pointer", color: e.input.color })), Mn = ((r) => (r.RGB = "rgb", r.HSL = "hsl", r.HEX = "hex", r))(Mn || {}), Lt = Object.values(Mn), hi = /\(([0-9]+),\s*([0-9]+)%?,\s*([0-9]+)%?,?\s*([0-9.]+)?\)/, bi = /^\s*rgba?\(([0-9]+),\s*([0-9]+),\s*([0-9]+),?\s*([0-9.]+)?\)\s*$/i, xi = /^\s*hsla?\(([0-9]+),\s*([0-9]+)%,\s*([0-9]+)%,?\s*([0-9.]+)?\)\s*$/i, Lo = /^\s*#?([0-9a-f]{3}|[0-9a-f]{6})\s*$/i, Ci = /^\s*#?([0-9a-f]{3})\s*$/i, Si = { ["hex"]: $e.HexColorPicker, ["rgb"]: $e.RgbaStringColorPicker, ["hsl"]: $e.HslaStringColorPicker }, Mt = { ["hex"]: "transparent", ["rgb"]: "rgba(0, 0, 0, 0)", ["hsl"]: "hsla(0, 0%, 0%, 0)" }, Vn = (e) => {
        let t = e == null ? void 0 : e.match(hi);
        if (!t)
          return [0, 0, 0, 1];
        let [, o, r, n, s2 = 1] = t;
        return [o, r, n, s2].map(Number);
      }, tt = (e) => {
        if (!e)
          return;
        let t = true;
        if (bi.test(e)) {
          let [a2, i2, l, p] = Vn(e), [c2, d, m2] = K.default.rgb.hsl([a2, i2, l]) || [0, 0, 0];
          return { valid: t, value: e, keyword: K.default.rgb.keyword([a2, i2, l]), colorSpace: "rgb", ["rgb"]: e, ["hsl"]: `hsla(${c2}, ${d}%, ${m2}%, ${p})`, ["hex"]: `#${K.default.rgb.hex([a2, i2, l]).toLowerCase()}` };
        }
        if (xi.test(e)) {
          let [a2, i2, l, p] = Vn(e), [c2, d, m2] = K.default.hsl.rgb([a2, i2, l]) || [0, 0, 0];
          return { valid: t, value: e, keyword: K.default.hsl.keyword([a2, i2, l]), colorSpace: "hsl", ["rgb"]: `rgba(${c2}, ${d}, ${m2}, ${p})`, ["hsl"]: e, ["hex"]: `#${K.default.hsl.hex([a2, i2, l]).toLowerCase()}` };
        }
        let o = e.replace("#", ""), r = K.default.keyword.rgb(o) || K.default.hex.rgb(o), n = K.default.rgb.hsl(r), s2 = e;
        if (/[^#a-f0-9]/i.test(e) ? s2 = o : Lo.test(e) && (s2 = `#${o}`), s2.startsWith("#"))
          t = Lo.test(s2);
        else
          try {
            K.default.keyword.hex(s2);
          } catch {
            t = false;
          }
        return { valid: t, value: s2, keyword: K.default.rgb.keyword(r), colorSpace: "hex", ["rgb"]: `rgba(${r[0]}, ${r[1]}, ${r[2]}, 1)`, ["hsl"]: `hsla(${n[0]}, ${n[1]}%, ${n[2]}%, 1)`, ["hex"]: s2 };
      }, Pi = (e, t, o) => {
        if (!e || !(t != null && t.valid))
          return Mt[o];
        if (o !== "hex")
          return (t == null ? void 0 : t[o]) || Mt[o];
        if (!t.hex.startsWith("#"))
          try {
            return `#${K.default.keyword.hex(t.hex)}`;
          } catch {
            return Mt.hex;
          }
        let r = t.hex.match(Ci);
        if (!r)
          return Lo.test(t.hex) ? t.hex : Mt.hex;
        let [n, s2, a2] = r[1].split("");
        return `#${n}${n}${s2}${s2}${a2}${a2}`;
      }, Ei = (e, t) => {
        let [o, r] = (0, E.useState)(e || ""), [n, s2] = (0, E.useState)(() => tt(o)), [a2, i2] = (0, E.useState)((n == null ? void 0 : n.colorSpace) || "hex");
        (0, E.useEffect)(() => {
          e === void 0 && (r(""), s2(void 0), i2("hex"));
        }, [e]);
        let l = (0, E.useMemo)(() => Pi(o, n, a2).toLowerCase(), [o, n, a2]), p = (0, E.useCallback)((d) => {
          let m2 = tt(d), y2 = (m2 == null ? void 0 : m2.value) || d || "";
          r(y2), y2 === "" && (s2(void 0), t(void 0)), m2 && (s2(m2), i2(m2.colorSpace), t(m2.value));
        }, [t]), c2 = (0, E.useCallback)(() => {
          let d = Lt.indexOf(a2) + 1;
          d >= Lt.length && (d = 0), i2(Lt[d]);
          let m2 = (n == null ? void 0 : n[Lt[d]]) || "";
          r(m2), t(m2);
        }, [n, a2, t]);
        return { value: o, realValue: l, updateValue: p, color: n, colorSpace: a2, cycleColorSpace: c2 };
      }, jt = (e) => e.replace(/\s*/, "").toLowerCase(), ki = (e, t, o) => {
        let [r, n] = (0, E.useState)(t != null && t.valid ? [t] : []);
        (0, E.useEffect)(() => {
          t === void 0 && n([]);
        }, [t]);
        let s2 = (0, E.useMemo)(() => (e || []).map((l) => typeof l == "string" ? tt(l) : l.title ? { ...tt(l.color), keyword: l.title } : tt(l.color)).concat(r).filter(Boolean).slice(-27), [e, r]), a2 = (0, E.useCallback)((i2) => {
          !(i2 != null && i2.valid) || s2.some((l) => jt(l[o]) === jt(i2[o])) || n((l) => l.concat(i2));
        }, [o, s2]);
        return { presets: s2, addPreset: a2 };
      }, jn = ({ name: e, value: t, onChange: o, onFocus: r, onBlur: n, presetColors: s2, startOpen: a2 = false }) => {
        let i2 = (0, E.useCallback)((0, Ln.default)(o, 200), [o]), { value: l, realValue: p, updateValue: c2, color: d, colorSpace: m2, cycleColorSpace: y2 } = Ei(t, i2), { presets: g, addPreset: b2 } = ki(s2, d, m2), x2 = Si[m2];
        return E.default.createElement(li, null, E.default.createElement(pi, { trigger: "click", startOpen: a2, closeOnClick: true, onVisibilityChange: () => b2(d), tooltip: E.default.createElement(di, null, E.default.createElement(x2, { color: p === "transparent" ? "#000000" : p, ...{ onChange: c2, onFocus: r, onBlur: n } }), g.length > 0 && E.default.createElement(mi, null, g.map((h2, C) => E.default.createElement(me.WithTooltip, { key: `${h2.value}-${C}`, hasChrome: false, tooltip: E.default.createElement(ci, { note: h2.keyword || h2.value }) }, E.default.createElement(Nn, { value: h2[m2], active: d && jt(h2[m2]) === jt(d[m2]), onClick: () => c2(h2.value) }))))) }, E.default.createElement(Nn, { value: p, style: { margin: 4 } })), E.default.createElement(gi, { id: I(e), value: l, onChange: (h2) => c2(h2.target.value), onFocus: (h2) => h2.target.select(), placeholder: "Choose color..." }), l ? E.default.createElement(fi, { icon: "markup", onClick: y2 }) : null);
      }, Ti = jn;
    });
    var Hl = {};
    fr(Hl, { AddContext: () => Fl, Anchor: () => pt, AnchorMdx: () => Dl, ArgsTable: () => Wt, BooleanControl: () => fo, Canvas: () => Zo, CodeOrSourceMdx: () => Il, ColorControl: () => Mo, ColorItem: () => ls, ColorPalette: () => ps, ComponentsTable: () => Ro, DateControl: () => bo, Description: () => We, DescriptionType: () => ws, Docs: () => mr, DocsContainer: () => qo, DocsContext: () => P2, DocsPage: () => dr, DocsStory: () => ut, ExternalDocs: () => jl, ExternalDocsContainer: () => $l, FilesControl: () => Vo, HeaderMdx: () => Re, HeadersMdx: () => Ll, Heading: () => pr, IconGallery: () => ms, IconItem: () => cs, Meta: () => _l, NoControlsWarning: () => Qn, NumberControl: () => So, ObjectControl: () => Nt, OptionsControl: () => Se, PRIMARY_STORY: () => se, Primary: () => ir, PureArgsTable: () => ye, RangeControl: () => Bo, Source: () => Pl, SourceContainer: () => Yo, SourceContext: () => Ue, SourceState: () => Xo, Stories: () => qt, Story: () => Xt, StoryTable: () => xs, Subheading: () => sr, Subtitle: () => er, TextControl: () => No, Title: () => Qo, Typeset: () => ts, Wrapper: () => Ul, anchorBlockIdFromId: () => ys, assertIsFn: () => vl, extractComponentArgTypes: () => Go, extractTitle: () => Fs, format: () => Da, formatDate: () => qr, formatTime: () => Qr, getComponent: () => bs, getDescriptionProps: () => As, getSourceProps: () => mt, getStoryId: () => Vs, getStoryProps: () => Ls, parse: () => Co, parseDate: () => Xr, parseTime: () => Zr, storyBlockIdFromId: () => ar });
    module.exports = Ys(Hl);
    var re = f2((init_react(), __toCommonJS(react_exports)));
    var ee = (init_theming(), __toCommonJS(theming_exports));
    var Pr = (init_components(), __toCommonJS(components_exports));
    var br = f2((init_react(), __toCommonJS(react_exports)));
    var xr = require_polished_cjs();
    var Cr = (init_theming(), __toCommonJS(theming_exports));
    var Sr = (init_components(), __toCommonJS(components_exports));
    var Xs = Cr.styled.div(Sr.withReset, ({ theme: e }) => ({ backgroundColor: e.base === "light" ? "rgba(0,0,0,.01)" : "rgba(255,255,255,.01)", borderRadius: e.appBorderRadius, border: `1px dashed ${e.appBorderColor}`, display: "flex", alignItems: "center", justifyContent: "center", padding: 20, margin: "25px 0 40px", color: (0, xr.transparentize)(0.3, e.color.defaultText), fontSize: e.typography.size.s2 }));
    var he = (e) => br.default.createElement(Xs, { ...e, className: "docblock-emptyblock" });
    var Zs = (0, ee.styled)(Pr.SyntaxHighlighter)(({ theme: e }) => ({ fontSize: `${e.typography.size.s2 - 1}px`, lineHeight: "19px", margin: "25px 0 40px", borderRadius: e.appBorderRadius, boxShadow: e.base === "light" ? "rgba(0, 0, 0, 0.10) 0 1px 3px 0" : "rgba(0, 0, 0, 0.20) 0 2px 5px 0", "pre.prismjs": { padding: 20, background: "inherit" } }));
    var qs = ee.styled.div(({ theme: e }) => ({ background: e.background.content, borderRadius: e.appBorderRadius, border: `1px solid ${e.appBorderColor}`, boxShadow: e.base === "light" ? "rgba(0, 0, 0, 0.10) 0 1px 3px 0" : "rgba(0, 0, 0, 0.20) 0 2px 5px 0", margin: "25px 0 40px", padding: "20px 20px 20px 22px" }));
    var bt = ee.styled.div(({ theme: e }) => ({ animation: `${e.animation.glow} 1.5s ease-in-out infinite`, background: e.appBorderColor, height: 17, marginTop: 1, width: "60%", ["&:first-child"]: { margin: 0 } }));
    var Qs = () => re.default.createElement(qs, null, re.default.createElement(bt, null), re.default.createElement(bt, { style: { width: "80%" } }), re.default.createElement(bt, { style: { width: "30%" } }), re.default.createElement(bt, { style: { width: "80%" } }));
    var Ae = (e) => {
      let { isLoading: t, error: o } = e;
      if (t)
        return re.default.createElement(Qs, null);
      if (o)
        return re.default.createElement(he, null, o);
      let { language: r, code: n, dark: s2, format: a2, ...i2 } = e, l = re.default.createElement(Zs, { bordered: true, copyable: true, format: a2, language: r, className: "docblock-source", ...i2 }, n);
      if (typeof s2 > "u")
        return l;
      let p = s2 ? ee.themes.dark : ee.themes.light;
      return re.default.createElement(ee.ThemeProvider, { theme: (0, ee.convert)(p) }, l);
    };
    Ae.defaultProps = { format: false };
    var po = f2((init_react(), __toCommonJS(react_exports)));
    var Er = f2(require_dist2());
    var xt = (init_components(), __toCommonJS(components_exports));
    var kr = ({ markdown: e }) => po.default.createElement(xt.ResetWrapper, null, po.default.createElement(Er.default, { options: { forceBlock: true, overrides: xt.components } }, e));
    var co = (init_components(), __toCommonJS(components_exports));
    var Xe = (init_theming(), __toCommonJS(theming_exports));
    var Tr = require_polished_cjs();
    var ea = f2((init_react(), __toCommonJS(react_exports)));
    var mo = 600;
    var wr = Xe.styled.h1(co.withReset, ({ theme: e }) => ({ color: e.color.defaultText, fontSize: e.typography.size.m3, fontWeight: e.typography.weight.black, lineHeight: "32px", [`@media (min-width: ${mo}px)`]: { fontSize: e.typography.size.l1, lineHeight: "36px", marginBottom: ".5rem" } }));
    var Ar = Xe.styled.h2(co.withReset, ({ theme: e }) => ({ fontWeight: e.typography.weight.regular, fontSize: e.typography.size.s3, lineHeight: "20px", borderBottom: "none", marginBottom: 15, [`@media (min-width: ${mo}px)`]: { fontSize: e.typography.size.m1, lineHeight: "28px", marginBottom: 24 }, color: (0, Tr.transparentize)(0.25, e.color.defaultText) }));
    var vr = Xe.styled.div({ maxWidth: 1e3, width: "100%" });
    var Fr = Xe.styled.div(({ theme: e }) => ({ background: e.background.content, display: "flex", justifyContent: "center", padding: "4rem 20px", minHeight: "100vh", boxSizing: "border-box", [`@media (min-width: ${mo}px)`]: {} }));
    var F = f2((init_react(), __toCommonJS(react_exports)));
    var uo = require_polished_cjs();
    var ve = (init_theming(), __toCommonJS(theming_exports));
    var Mr = f2(require_window());
    var kt = (init_components(), __toCommonJS(components_exports));
    var be = (e) => ({ borderRadius: e.appBorderRadius, background: e.background.content, boxShadow: e.base === "light" ? "rgba(0, 0, 0, 0.10) 0 1px 3px 0" : "rgba(0, 0, 0, 0.20) 0 2px 5px 0", border: `1px solid ${e.appBorderColor}` });
    var O = f2((init_react(), __toCommonJS(react_exports)));
    var Ir = (init_theming(), __toCommonJS(theming_exports));
    var $ = (init_components(), __toCommonJS(components_exports));
    var ta = ({ zoom: e, resetZoom: t }) => O.default.createElement(O.default.Fragment, null, O.default.createElement($.IconButton, { key: "zoomin", onClick: (o) => {
      o.preventDefault(), e(0.8);
    }, title: "Zoom in" }, O.default.createElement($.Icons, { icon: "zoom" })), O.default.createElement($.IconButton, { key: "zoomout", onClick: (o) => {
      o.preventDefault(), e(1.25);
    }, title: "Zoom out" }, O.default.createElement($.Icons, { icon: "zoomout" })), O.default.createElement($.IconButton, { key: "zoomreset", onClick: (o) => {
      o.preventDefault(), t();
    }, title: "Reset zoom" }, O.default.createElement($.Icons, { icon: "zoomreset" })));
    var oa = ({ baseUrl: e, storyId: t }) => O.default.createElement($.IconButton, { key: "opener", href: (0, $.getStoryHref)(e, t), target: "_blank", title: "Open canvas in new tab" }, O.default.createElement($.Icons, { icon: "share" }));
    var ra = (0, Ir.styled)($.FlexBar)({ position: "absolute", left: 0, right: 0, top: 0, transition: "transform .2s linear" });
    var Br = ({ isLoading: e, storyId: t, baseUrl: o, zoom: r, resetZoom: n, ...s2 }) => O.default.createElement(ra, { ...s2 }, O.default.createElement(O.Fragment, { key: "left" }, e ? [1, 2, 3].map((a2) => O.default.createElement($.IconButtonSkeleton, { key: a2 })) : O.default.createElement(ta, { ...{ zoom: r, resetZoom: n } })), O.default.createElement(O.Fragment, { key: "right" }, t && (e ? O.default.createElement($.IconButtonSkeleton, null) : O.default.createElement(oa, { ...{ storyId: t, baseUrl: o } }))));
    var Dr = (init_react(), __toCommonJS(react_exports));
    var Ct = (0, Dr.createContext)({ scale: 1 });
    var Nr = f2(require_window());
    var _2 = f2((init_react(), __toCommonJS(react_exports)));
    var Et = (init_components(), __toCommonJS(components_exports));
    var Pt = f2((init_react(), __toCommonJS(react_exports)));
    var Or = f2(require_window());
    var { window: na } = Or.default;
    var St = class extends Pt.Component {
      constructor() {
        super(...arguments);
        this.iframe = null;
      }
      componentDidMount() {
        let { id: o } = this.props;
        this.iframe = na.document.getElementById(o);
      }
      shouldComponentUpdate(o) {
        let { scale: r } = o;
        return r !== this.props.scale && this.setIframeBodyStyle({ width: `${r * 100}%`, height: `${r * 100}%`, transform: `scale(${1 / r})`, transformOrigin: "top left" }), false;
      }
      setIframeBodyStyle(o) {
        return Object.assign(this.iframe.contentDocument.body.style, o);
      }
      render() {
        let { id: o, title: r, src: n, allowFullScreen: s2, scale: a2, ...i2 } = this.props;
        return Pt.default.createElement("iframe", { id: o, title: r, src: n, ...s2 ? { allow: "fullscreen" } : {}, loading: "lazy", ...i2 });
      }
    };
    var { PREVIEW_URL: sa } = Nr.default;
    var aa = sa || "iframe.html";
    var ia = (e) => e ? `Story "${e}" doesn't exist.` : "No component or story to display";
    var la = ({ storyFn: e, height: t, id: o }) => _2.default.createElement(_2.Fragment, null, t ? _2.default.createElement("style", null, `#story--${o} { min-height: ${t}; transform: translateZ(0); overflow: auto }`) : null, _2.default.createElement(_2.Fragment, null, e ? (0, _2.createElement)(e) : _2.default.createElement(he, null, ia(o))));
    var pa = ({ id: e, title: t, height: o = "500px" }) => _2.default.createElement("div", { style: { width: "100%", height: o } }, _2.default.createElement(Ct.Consumer, null, ({ scale: r }) => _2.default.createElement(St, { key: "iframe", id: `iframe--${e}`, title: t, src: (0, Et.getStoryHref)(aa, e, { viewMode: "story" }), allowFullScreen: true, scale: r, style: { width: "100%", height: "100%", border: "0 none" } })));
    var Vr = ({ children: e, error: t, inline: o, ...r }) => {
      let { id: n, title: s2, height: a2 } = r;
      return t ? _2.default.createElement(he, null, t) : o ? _2.default.createElement(la, { ...r }) : _2.default.createElement(pa, { id: n, title: s2, height: a2 });
    };
    var Ze = () => _2.default.createElement(Et.Loader, null);
    var da = ve.styled.div(({ isColumn: e, columns: t, layout: o }) => ({ display: e || !t ? "block" : "flex", position: "relative", flexWrap: "wrap", overflow: "auto", flexDirection: e ? "column" : "row", "& .innerZoomElementWrapper > *": e ? { width: o !== "fullscreen" ? "calc(100% - 20px)" : "100%", display: "block" } : { maxWidth: o !== "fullscreen" ? "calc(100% - 20px)" : "100%", display: "inline-block" } }), ({ layout: e = "padded" }) => e === "centered" || e === "padded" ? { padding: "30px 20px", margin: -10, "& .innerZoomElementWrapper > *": { width: "auto", border: "10px solid transparent!important" } } : {}, ({ layout: e = "padded" }) => e === "centered" ? { display: "flex", justifyContent: "center", justifyItems: "center", alignContent: "center", alignItems: "center" } : {}, ({ columns: e }) => e && e > 1 ? { ".innerZoomElementWrapper > *": { minWidth: `calc(100% / ${e} - 20px)` } } : {});
    var Lr = (0, ve.styled)(Ae)(({ theme: e }) => ({ margin: 0, borderTopLeftRadius: 0, borderTopRightRadius: 0, borderBottomLeftRadius: e.appBorderRadius, borderBottomRightRadius: e.appBorderRadius, border: "none", background: e.base === "light" ? "rgba(0, 0, 0, 0.85)" : (0, uo.darken)(0.05, e.background.content), color: e.color.lightest, button: { background: e.base === "light" ? "rgba(0, 0, 0, 0.85)" : (0, uo.darken)(0.05, e.background.content) } }));
    var ca = ve.styled.div(({ theme: e, withSource: t, isExpanded: o }) => ({ position: "relative", overflow: "hidden", margin: "25px 0 40px", ...be(e), borderBottomLeftRadius: t && o && 0, borderBottomRightRadius: t && o && 0, borderBottomWidth: o && 0 }), ({ withToolbar: e }) => e && { paddingTop: 40 });
    var ma = (e, t, o) => {
      switch (true) {
        case !!(e && e.error):
          return { source: null, actionItem: { title: "No code available", className: "docblock-code-toggle docblock-code-toggle--disabled", disabled: true, onClick: () => o(false) } };
        case t:
          return { source: F.default.createElement(Lr, { ...e, dark: true }), actionItem: { title: "Hide code", className: "docblock-code-toggle docblock-code-toggle--expanded", onClick: () => o(false) } };
        default:
          return { source: F.default.createElement(Lr, { ...e, dark: true }), actionItem: { title: "Show code", className: "docblock-code-toggle", onClick: () => o(true) } };
      }
    };
    function ua(e) {
      if (F.Children.count(e) === 1) {
        let t = e;
        if (t.props)
          return t.props.id;
      }
      return null;
    }
    var ya = (0, ve.styled)(Br)({ position: "absolute", top: 0, left: 0, right: 0, height: 40 });
    var ga = ve.styled.div({ overflow: "hidden", position: "relative" });
    var fa = (e) => e.reduce((t, o) => t || (typeof o == "string" || typeof o == "number" ? "padded" : o.props && o.props.parameters && o.props.parameters.layout || "padded"), void 0);
    var yo = ({ isLoading: e, isColumn: t, columns: o, children: r, withSource: n, withToolbar: s2 = false, isExpanded: a2 = false, additionalActions: i2, className: l, ...p }) => {
      let [c2, d] = (0, F.useState)(a2), { source: m2, actionItem: y2 } = ma(n, c2, d), [g, b2] = (0, F.useState)(1), x2 = [l].concat(["sbdocs", "sbdocs-preview"]), h2 = n ? [y2] : [], [C, S] = (0, F.useState)(i2 ? [...i2] : []), V = [...h2, ...C], U = fa(F.Children.count(r) === 1 ? [r] : r), { window: w } = Mr.default, A3 = (0, F.useCallback)(async (v) => {
        let { createCopyToClipboardFunction: Q } = await Promise.resolve().then(() => (init_components(), components_exports));
        Q();
      }, []), q = (v) => {
        v.preventDefault(), C.filter((Q) => Q.title === "Copied").length === 0 && A3(m2.props.code).then(() => {
          S([...C, { title: "Copied", onClick: () => {
          } }]), w.setTimeout(() => S(C.filter((Q) => Q.title !== "Copied")), 1500);
        });
      };
      return F.default.createElement(ca, { ...{ withSource: n, withToolbar: s2 }, ...p, className: x2.join(" ") }, s2 && F.default.createElement(ya, { isLoading: e, border: true, zoom: (v) => b2(g * v), resetZoom: () => b2(1), storyId: ua(r), baseUrl: "./iframe.html" }), F.default.createElement(Ct.Provider, { value: { scale: g } }, F.default.createElement(ga, { className: "docs-story", onCopyCapture: n && q }, F.default.createElement(da, { isColumn: t || !Array.isArray(r), columns: o, layout: U }, F.default.createElement(kt.Zoom.Element, { scale: g }, Array.isArray(r) ? r.map((v, Q) => F.default.createElement("div", { key: Q }, v)) : F.default.createElement("div", null, r))), F.default.createElement(kt.ActionBar, { actionItems: V }))), n && c2 && m2);
    };
    var ha = (0, ve.styled)(yo)(() => ({ ".docs-story": { paddingTop: 32, paddingBottom: 40 } }));
    var jr = () => F.default.createElement(ha, { isLoading: true, withToolbar: true }, F.default.createElement(Ze, null));
    var T2 = f2((init_react(), __toCommonJS(react_exports)));
    var Gn = f2(require_pickBy());
    var _t = (init_theming(), __toCommonJS(theming_exports));
    var J = require_polished_cjs();
    var Kn = require_dist3();
    var Yn = (init_client_logger(), __toCommonJS(client_logger_exports));
    var ue = (init_components(), __toCommonJS(components_exports));
    var j2 = f2((init_react(), __toCommonJS(react_exports)));
    var Wn = f2(require_dist2());
    var ot = require_polished_cjs();
    var Ve = (init_theming(), __toCommonJS(theming_exports));
    var zn = (init_components(), __toCommonJS(components_exports));
    var te = f2((init_react(), __toCommonJS(react_exports)));
    var $r = (init_theming(), __toCommonJS(theming_exports));
    var _r = (init_components(), __toCommonJS(components_exports));
    var ba = $r.styled.table(({ theme: e }) => ({ "&&": { borderCollapse: "collapse", borderSpacing: 0, border: "none", tr: { border: "none !important", background: "none" }, "td, th": { padding: 0, border: "none", width: "auto!important" }, marginTop: 0, marginBottom: 0, "th:first-of-type, td:first-of-type": { paddingLeft: 0 }, "th:last-of-type, td:last-of-type": { paddingRight: 0 }, td: { paddingTop: 0, paddingBottom: 4, "&:not(:first-of-type)": { paddingLeft: 10, paddingRight: 0 } }, tbody: { boxShadow: "none", border: "none" }, code: (0, _r.codeCommon)({ theme: e }), "& code": { margin: 0, display: "inline-block", fontSize: e.typography.size.s1 } } }));
    var Ur = ({ tags: e }) => {
      let t = (e.params || []).filter((n) => n.description), o = t.length !== 0, r = e.returns != null && e.returns.description != null;
      return !o && !r ? null : te.default.createElement(ba, null, te.default.createElement("tbody", null, o && t.map((n) => te.default.createElement("tr", { key: n.name }, te.default.createElement("td", null, te.default.createElement("code", null, n.name)), te.default.createElement("td", null, n.description))), r && te.default.createElement("tr", { key: "returns" }, te.default.createElement("td", null, te.default.createElement("code", null, "Returns")), te.default.createElement("td", null, e.returns.description))));
    };
    var M2 = f2((init_react(), __toCommonJS(react_exports)));
    var zr = f2(require_memoizerific());
    var Rr = f2(require_uniq());
    var Fe = (init_theming(), __toCommonJS(theming_exports));
    var ie = (init_components(), __toCommonJS(components_exports));
    var go = 8;
    var Hr = Fe.styled.div(({ isExpanded: e }) => ({ display: "flex", flexDirection: e ? "column" : "row", flexWrap: "wrap", alignItems: "flex-start", marginBottom: "-4px", minWidth: 100 }));
    var xa = Fe.styled.span(ie.codeCommon, ({ theme: e, simple: t = false }) => ({ flex: "0 0 auto", fontFamily: e.typography.fonts.mono, fontSize: e.typography.size.s1, wordBreak: "break-word", whiteSpace: "normal", maxWidth: "100%", margin: 0, marginRight: "4px", marginBottom: "4px", paddingTop: "2px", paddingBottom: "2px", lineHeight: "13px", ...t && { background: "transparent", border: "0 none", paddingLeft: 0 } }));
    var Ca = Fe.styled.button(({ theme: e }) => ({ fontFamily: e.typography.fonts.mono, color: e.color.secondary, marginBottom: "4px", background: "none", border: "none" }));
    var Sa = Fe.styled.div(ie.codeCommon, ({ theme: e }) => ({ fontFamily: e.typography.fonts.mono, color: e.color.secondary, fontSize: e.typography.size.s1, margin: 0, whiteSpace: "nowrap", display: "flex", alignItems: "center" }));
    var Pa = Fe.styled.div(({ theme: e, width: t }) => ({ width: t, minWidth: 200, maxWidth: 800, padding: 15, fontFamily: e.typography.fonts.mono, fontSize: e.typography.size.s1, boxSizing: "content-box", "& code": { padding: "0 !important" } }));
    var Ea = (0, Fe.styled)(ie.Icons)({ height: 10, width: 10, minWidth: 10, marginLeft: 4 });
    var ka = () => M2.default.createElement("span", null, "-");
    var Jr = ({ text: e, simple: t }) => M2.default.createElement(xa, { simple: t }, e);
    var Ta = (0, zr.default)(1e3)((e) => {
      let t = e.split(/\r?\n/);
      return `${Math.max(...t.map((o) => o.length))}ch`;
    });
    var wa = (e) => {
      if (!e)
        return [e];
      let o = e.split("|").map((r) => r.trim());
      return (0, Rr.default)(o);
    };
    var Wr = (e, t = true) => {
      let o = e;
      return t || (o = e.slice(0, go)), o.map((r) => M2.default.createElement(Jr, { key: r, text: r === "" ? '""' : r }));
    };
    var Aa = ({ value: e, initialExpandedArgs: t }) => {
      let { summary: o, detail: r } = e, [n, s2] = (0, M2.useState)(false), [a2, i2] = (0, M2.useState)(t || false);
      if (o == null)
        return null;
      let l = typeof o.toString == "function" ? o.toString() : o;
      if (r == null) {
        if (/[(){}[\]<>]/.test(l))
          return M2.default.createElement(Jr, { text: l });
        let c2 = wa(l), d = c2.length;
        return d > go ? M2.default.createElement(Hr, { isExpanded: a2 }, Wr(c2, a2), M2.default.createElement(Ca, { onClick: () => i2(!a2) }, a2 ? "Show less..." : `Show ${d - go} more...`)) : M2.default.createElement(Hr, null, Wr(c2));
      }
      return M2.default.createElement(ie.WithTooltipPure, { closeOnClick: true, trigger: "click", placement: "bottom", tooltipShown: n, onVisibilityChange: (p) => {
        s2(p);
      }, tooltip: M2.default.createElement(Pa, { width: Ta(r) }, M2.default.createElement(ie.SyntaxHighlighter, { language: "jsx", format: false }, r)) }, M2.default.createElement(Sa, { className: "sbdocs-expandable" }, M2.default.createElement("span", null, l), M2.default.createElement(Ea, { icon: n ? "arrowup" : "arrowdown" })));
    };
    var Tt = ({ value: e, initialExpandedArgs: t }) => e == null ? M2.default.createElement(ka, null) : M2.default.createElement(Aa, { value: e, initialExpandedArgs: t });
    var R = f2((init_react(), __toCommonJS(react_exports)));
    var Ee = f2((init_react(), __toCommonJS(react_exports)));
    var Ce = f2((init_react(), __toCommonJS(react_exports)));
    var Ie = require_polished_cjs();
    var Gr = (init_theming(), __toCommonJS(theming_exports));
    var Kr = (init_components(), __toCommonJS(components_exports));
    Y2();
    var va = Gr.styled.label(({ theme: e }) => ({ lineHeight: "18px", alignItems: "center", marginBottom: 8, display: "inline-block", position: "relative", whiteSpace: "nowrap", background: e.boolean.background, borderRadius: "3em", padding: 1, input: { appearance: "none", width: "100%", height: "100%", position: "absolute", left: 0, top: 0, margin: 0, padding: 0, border: "none", background: "transparent", cursor: "pointer", borderRadius: "3em", "&:focus": { outline: "none", boxShadow: `${e.color.secondary} 0 0 0 1px inset !important` } }, span: { textAlign: "center", fontSize: e.typography.size.s1, fontWeight: e.typography.weight.bold, lineHeight: "1", cursor: "pointer", display: "inline-block", padding: "7px 15px", transition: "all 100ms ease-out", userSelect: "none", borderRadius: "3em", color: (0, Ie.transparentize)(0.5, e.color.defaultText), background: "transparent", "&:hover": { boxShadow: `${(0, Ie.opacify)(0.3, e.appBorderColor)} 0 0 0 1px inset` }, "&:active": { boxShadow: `${(0, Ie.opacify)(0.05, e.appBorderColor)} 0 0 0 2px inset`, color: (0, Ie.opacify)(1, e.appBorderColor) }, "&:first-of-type": { paddingRight: 8 }, "&:last-of-type": { paddingLeft: 8 } }, "input:checked ~ span:last-of-type, input:not(:checked) ~ span:first-of-type": { background: e.boolean.selectedBackground, boxShadow: e.base === "light" ? `${(0, Ie.opacify)(0.1, e.appBorderColor)} 0 0 2px` : `${e.appBorderColor} 0 0 0 1px`, color: e.color.defaultText, padding: "7px 15px" } }));
    var Fa = (e) => e === "true";
    var fo = ({ name: e, value: t, onChange: o, onBlur: r, onFocus: n }) => {
      let s2 = (0, Ce.useCallback)(() => o(false), [o]);
      if (t === void 0)
        return Ce.default.createElement(Kr.Form.Button, { id: xe(e), onClick: s2 }, "Set boolean");
      let a2 = typeof t == "string" ? Fa(t) : t;
      return Ce.default.createElement(va, { htmlFor: e, title: a2 ? "Change to false" : "Change to true" }, Ce.default.createElement("input", { id: I(e), type: "checkbox", onChange: (i2) => o(i2.target.checked), checked: a2, ...{ name: e, onBlur: r, onFocus: n } }), Ce.default.createElement("span", null, "False"), Ce.default.createElement("span", null, "True"));
    };
    var X = f2((init_react(), __toCommonJS(react_exports)));
    var Yr = (init_theming(), __toCommonJS(theming_exports));
    var ho = (init_components(), __toCommonJS(components_exports));
    Y2();
    var Xr = (e) => {
      let [t, o, r] = e.split("-"), n = new Date();
      return n.setFullYear(parseInt(t, 10), parseInt(o, 10) - 1, parseInt(r, 10)), n;
    };
    var Zr = (e) => {
      let [t, o] = e.split(":"), r = new Date();
      return r.setHours(parseInt(t, 10)), r.setMinutes(parseInt(o, 10)), r;
    };
    var qr = (e) => {
      let t = new Date(e), o = `000${t.getFullYear()}`.slice(-4), r = `0${t.getMonth() + 1}`.slice(-2), n = `0${t.getDate()}`.slice(-2);
      return `${o}-${r}-${n}`;
    };
    var Qr = (e) => {
      let t = new Date(e), o = `0${t.getHours()}`.slice(-2), r = `0${t.getMinutes()}`.slice(-2);
      return `${o}:${r}`;
    };
    var Ia = Yr.styled.div(({ theme: e }) => ({ flex: 1, display: "flex", input: { marginLeft: 10, flex: 1, height: 32, "&::-webkit-calendar-picker-indicator": { opacity: 0.5, height: 12, filter: e.base === "light" ? void 0 : "invert(1)" } }, "input:first-of-type": { marginLeft: 0, flexGrow: 4 }, "input:last-of-type": { flexGrow: 3 } }));
    var bo = ({ name: e, value: t, onChange: o, onFocus: r, onBlur: n }) => {
      let [s2, a2] = (0, X.useState)(true), i2 = (0, X.useRef)(), l = (0, X.useRef)();
      (0, X.useEffect)(() => {
        s2 !== false && (i2 && i2.current && (i2.current.value = qr(t)), l && l.current && (l.current.value = Qr(t)));
      }, [t]);
      let p = (m2) => {
        let y2 = Xr(m2.target.value), g = new Date(t);
        g.setFullYear(y2.getFullYear(), y2.getMonth(), y2.getDate());
        let b2 = g.getTime();
        b2 && o(b2), a2(!!b2);
      }, c2 = (m2) => {
        let y2 = Zr(m2.target.value), g = new Date(t);
        g.setHours(y2.getHours()), g.setMinutes(y2.getMinutes());
        let b2 = g.getTime();
        b2 && o(b2), a2(!!b2);
      }, d = I(e);
      return X.default.createElement(Ia, null, X.default.createElement(ho.Form.Input, { type: "date", max: "9999-12-31", ref: i2, id: `${d}-date`, name: `${d}-date`, onChange: p, ...{ onFocus: r, onBlur: n } }), X.default.createElement(ho.Form.Input, { type: "time", id: `${d}-time`, name: `${d}-time`, ref: l, onChange: c2, ...{ onFocus: r, onBlur: n } }), s2 ? null : X.default.createElement("div", null, "invalid"));
    };
    var H = f2((init_react(), __toCommonJS(react_exports)));
    var en = (init_theming(), __toCommonJS(theming_exports));
    var xo = (init_components(), __toCommonJS(components_exports));
    Y2();
    var Ba = en.styled.label({ display: "flex" });
    var Co = (e) => {
      let t = parseFloat(e);
      return Number.isNaN(t) ? void 0 : t;
    };
    var Da = (e) => e != null ? String(e) : "";
    var So = ({ name: e, value: t, onChange: o, min: r, max: n, step: s2, onBlur: a2, onFocus: i2 }) => {
      let [l, p] = (0, H.useState)(typeof t == "number" ? t : ""), [c2, d] = (0, H.useState)(false), [m2, y2] = (0, H.useState)(null), g = (0, H.useCallback)((h2) => {
        p(h2.target.value);
        let C = parseFloat(h2.target.value);
        Number.isNaN(C) ? y2(new Error(`'${h2.target.value}' is not a number`)) : (o(C), y2(null));
      }, [o, y2]), b2 = (0, H.useCallback)(() => {
        p("0"), o(0), d(true);
      }, [d]), x2 = (0, H.useRef)(null);
      return (0, H.useEffect)(() => {
        c2 && x2.current && x2.current.select();
      }, [c2]), (0, H.useEffect)(() => {
        l !== (typeof t == "number" ? t : "") && p(t);
      }, [t]), !c2 && t === void 0 ? H.default.createElement(xo.Form.Button, { id: xe(e), onClick: b2 }, "Set number") : H.default.createElement(Ba, null, H.default.createElement(xo.Form.Input, { ref: x2, id: I(e), type: "number", onChange: g, size: "flex", placeholder: "Edit number...", value: l, valid: m2 ? "error" : null, autoFocus: c2, ...{ name: e, min: r, max: n, step: s2, onFocus: i2, onBlur: a2 } }));
    };
    var pn = f2((init_react(), __toCommonJS(react_exports)));
    var le = f2((init_react(), __toCommonJS(react_exports)));
    var Ft = (init_theming(), __toCommonJS(theming_exports));
    var tn = (init_client_logger(), __toCommonJS(client_logger_exports));
    var wt = (e, t) => {
      let o = t && Object.entries(t).find(([r, n]) => n === e);
      return o ? o[0] : void 0;
    };
    var At = (e, t) => e && t ? Object.entries(t).filter((o) => e.includes(o[1])).map((o) => o[0]) : [];
    var vt = (e, t) => e && t && e.map((o) => t[o]);
    Y2();
    var Oa = Ft.styled.div(({ isInline: e }) => e ? { display: "flex", flexWrap: "wrap", alignItems: "flex-start", label: { display: "inline-flex", marginRight: 15 } } : { label: { display: "flex" } });
    var Na = Ft.styled.span({});
    var Va = Ft.styled.label({ lineHeight: "20px", alignItems: "center", marginBottom: 8, "&:last-child": { marginBottom: 0 }, input: { margin: 0, marginRight: 6 } });
    var Po = ({ name: e, options: t, value: o, onChange: r, isInline: n }) => {
      if (!t)
        return tn.logger.warn(`Checkbox with no options: ${e}`), le.default.createElement(le.default.Fragment, null, "-");
      let s2 = At(o, t), [a2, i2] = (0, le.useState)(s2), l = (c2) => {
        let d = c2.target.value, m2 = [...a2];
        m2.includes(d) ? m2.splice(m2.indexOf(d), 1) : m2.push(d), r(vt(m2, t)), i2(m2);
      }, p = I(e);
      return le.default.createElement(Oa, { isInline: n }, Object.keys(t).map((c2, d) => {
        let m2 = `${p}-${d}`;
        return le.default.createElement(Va, { key: m2, htmlFor: m2 }, le.default.createElement("input", { type: "checkbox", id: m2, name: m2, value: c2, onChange: l, checked: a2 == null ? void 0 : a2.includes(c2) }), le.default.createElement(Na, null, c2));
      }));
    };
    var Be = f2((init_react(), __toCommonJS(react_exports)));
    var It = (init_theming(), __toCommonJS(theming_exports));
    var on = (init_client_logger(), __toCommonJS(client_logger_exports));
    Y2();
    var La = It.styled.div(({ isInline: e }) => e ? { display: "flex", flexWrap: "wrap", alignItems: "flex-start", label: { display: "inline-flex", marginRight: 15 } } : { label: { display: "flex" } });
    var Ma = It.styled.span({});
    var ja = It.styled.label({ lineHeight: "20px", alignItems: "center", marginBottom: 8, "&:last-child": { marginBottom: 0 }, input: { margin: 0, marginRight: 6 } });
    var Eo = ({ name: e, options: t, value: o, onChange: r, isInline: n }) => {
      if (!t)
        return on.logger.warn(`Radio with no options: ${e}`), Be.default.createElement(Be.default.Fragment, null, "-");
      let s2 = wt(o, t), a2 = I(e);
      return Be.default.createElement(La, { isInline: n }, Object.keys(t).map((i2, l) => {
        let p = `${a2}-${l}`;
        return Be.default.createElement(ja, { key: p, htmlFor: p }, Be.default.createElement("input", { type: "radio", id: p, name: p, value: i2, onChange: (c2) => r(t[c2.currentTarget.value]), checked: i2 === s2 }), Be.default.createElement(Ma, null, i2));
      }));
    };
    var G = f2((init_react(), __toCommonJS(react_exports)));
    var ko = (init_theming(), __toCommonJS(theming_exports));
    var nn = (init_client_logger(), __toCommonJS(client_logger_exports));
    var sn = (init_components(), __toCommonJS(components_exports));
    Y2();
    var $a = { appearance: "none", border: "0 none", boxSizing: "inherit", display: " block", margin: " 0", background: "transparent", padding: 0, fontSize: "inherit", position: "relative" };
    var an = ko.styled.select(({ theme: e }) => ({ ...$a, boxSizing: "border-box", position: "relative", padding: "6px 10px", width: "100%", color: e.input.color || "inherit", background: e.input.background, borderRadius: e.input.borderRadius, boxShadow: `${e.input.border} 0 0 0 1px inset`, fontSize: e.typography.size.s2 - 1, lineHeight: "20px", "&:focus": { boxShadow: `${e.color.secondary} 0 0 0 1px inset`, outline: "none" }, "&[disabled]": { cursor: "not-allowed", opacity: 0.5 }, "::placeholder": { color: e.textMutedColor }, "&[multiple]": { overflow: "auto", padding: 0, option: { display: "block", padding: "6px 10px", marginLeft: 1, marginRight: 1 } } }));
    var ln = ko.styled.span(({ theme: e }) => ({ display: "inline-block", lineHeight: "normal", overflow: "hidden", position: "relative", verticalAlign: "top", width: "100%", svg: { position: "absolute", zIndex: 1, pointerEvents: "none", height: "12px", marginTop: "-6px", right: "12px", top: "50%", fill: e.textMutedColor, path: { fill: e.textMutedColor } } }));
    var rn = "Choose option...";
    var _a = ({ name: e, value: t, options: o, onChange: r }) => {
      let n = (i2) => {
        r(o[i2.currentTarget.value]);
      }, s2 = wt(t, o) || rn, a2 = I(e);
      return G.default.createElement(ln, null, G.default.createElement(sn.Icons, { icon: "arrowdown" }), G.default.createElement(an, { id: a2, value: s2, onChange: n }, G.default.createElement("option", { key: "no-selection", disabled: true }, rn), Object.keys(o).map((i2) => G.default.createElement("option", { key: i2 }, i2))));
    };
    var Ua = ({ name: e, value: t, options: o, onChange: r }) => {
      let n = (i2) => {
        let l = Array.from(i2.currentTarget.options).filter((p) => p.selected).map((p) => p.value);
        r(vt(l, o));
      }, s2 = At(t, o), a2 = I(e);
      return G.default.createElement(ln, null, G.default.createElement(an, { id: a2, multiple: true, value: s2, onChange: n }, Object.keys(o).map((i2) => G.default.createElement("option", { key: i2 }, i2))));
    };
    var To = (e) => {
      let { name: t, options: o } = e;
      return o ? e.isMulti ? G.default.createElement(Ua, { ...e }) : G.default.createElement(_a, { ...e }) : (nn.logger.warn(`Select with no options: ${t}`), G.default.createElement(G.default.Fragment, null, "-"));
    };
    var Ha = (e, t) => Array.isArray(e) ? e.reduce((o, r) => (o[(t == null ? void 0 : t[r]) || String(r)] = r, o), {}) : e;
    var Wa = { check: Po, "inline-check": Po, radio: Eo, "inline-radio": Eo, select: To, "multi-select": To };
    var Se = (e) => {
      let { type: t = "select", labels: o, argType: r } = e, n = { ...e, options: r ? Ha(r.options, o) : {}, isInline: t.includes("inline"), isMulti: t.includes("multi") }, s2 = Wa[t];
      if (s2)
        return pn.default.createElement(s2, { ...n });
      throw new Error(`Unknown options type: ${t}`);
    };
    var vn = f2(require_window());
    var Fn = f2(require_cloneDeep());
    var k2 = f2((init_react(), __toCommonJS(react_exports)));
    var pe = (init_theming(), __toCommonJS(theming_exports));
    var Pe = (init_components(), __toCommonJS(components_exports));
    var Oe = f2((init_react(), __toCommonJS(react_exports)));
    var u = f2((init_react(), __toCommonJS(react_exports)));
    var Bt = "value";
    var dn = "key";
    var cn = "Error";
    var mn = "Object";
    var un = "Array";
    var yn = "String";
    var gn = "Number";
    var fn = "Boolean";
    var hn = "Date";
    var bn = "Null";
    var xn = "Undefined";
    var Cn = "Function";
    var Sn = "Symbol";
    var wo = "ADD_DELTA_TYPE";
    var Ao = "REMOVE_DELTA_TYPE";
    var vo = "UPDATE_DELTA_TYPE";
    function oe(e) {
      return e !== null && typeof e == "object" && !Array.isArray(e) && typeof e[Symbol.iterator] == "function" ? "Iterable" : Object.prototype.toString.call(e).slice(8, -1);
    }
    function Fo(e, t) {
      let o = oe(e), r = oe(t);
      return (o === "Function" || r === "Function") && r !== o;
    }
    var qe = class extends u.Component {
      constructor(t) {
        super(t), this.state = { inputRefKey: null, inputRefValue: null }, this.refInputValue = this.refInputValue.bind(this), this.refInputKey = this.refInputKey.bind(this), this.onKeydown = this.onKeydown.bind(this), this.onSubmit = this.onSubmit.bind(this);
      }
      componentDidMount() {
        let { inputRefKey: t, inputRefValue: o } = this.state, { onlyValue: r } = this.props;
        t && typeof t.focus == "function" && t.focus(), r && o && typeof o.focus == "function" && o.focus(), document.addEventListener("keydown", this.onKeydown);
      }
      componentWillUnmount() {
        document.removeEventListener("keydown", this.onKeydown);
      }
      onKeydown(t) {
        t.altKey || t.ctrlKey || t.metaKey || t.shiftKey || t.repeat || ((t.code === "Enter" || t.key === "Enter") && (t.preventDefault(), this.onSubmit()), (t.code === "Escape" || t.key === "Escape") && (t.preventDefault(), this.props.handleCancel()));
      }
      onSubmit() {
        let { handleAdd: t, onlyValue: o, onSubmitValueParser: r, keyPath: n, deep: s2 } = this.props, { inputRefKey: a2, inputRefValue: i2 } = this.state, l = {};
        if (!o) {
          if (!a2.value)
            return;
          l.key = a2.value;
        }
        l.newValue = r(false, n, s2, l.key, i2.value), t(l);
      }
      refInputKey(t) {
        this.state.inputRefKey = t;
      }
      refInputValue(t) {
        this.state.inputRefValue = t;
      }
      render() {
        let { handleCancel: t, onlyValue: o, addButtonElement: r, cancelButtonElement: n, inputElementGenerator: s2, keyPath: a2, deep: i2 } = this.props, l = (0, u.cloneElement)(r, { onClick: this.onSubmit }), p = (0, u.cloneElement)(n, { onClick: t }), c2 = s2(Bt, a2, i2), d = (0, u.cloneElement)(c2, { placeholder: "Value", ref: this.refInputValue }), m2 = null;
        if (!o) {
          let y2 = s2(dn, a2, i2);
          m2 = (0, u.cloneElement)(y2, { placeholder: "Key", ref: this.refInputKey });
        }
        return u.default.createElement("span", { className: "rejt-add-value-node" }, m2, d, p, l);
      }
    };
    qe.defaultProps = { onlyValue: false, addButtonElement: u.default.createElement("button", null, "+"), cancelButtonElement: u.default.createElement("button", null, "c") };
    var Dt = class extends u.Component {
      constructor(t) {
        super(t);
        let o = [...t.keyPath, t.name];
        this.state = { data: t.data, name: t.name, keyPath: o, deep: t.deep, nextDeep: t.deep + 1, collapsed: t.isCollapsed(o, t.deep, t.data), addFormVisible: false }, this.handleCollapseMode = this.handleCollapseMode.bind(this), this.handleRemoveItem = this.handleRemoveItem.bind(this), this.handleAddMode = this.handleAddMode.bind(this), this.handleAddValueAdd = this.handleAddValueAdd.bind(this), this.handleAddValueCancel = this.handleAddValueCancel.bind(this), this.handleEditValue = this.handleEditValue.bind(this), this.onChildUpdate = this.onChildUpdate.bind(this), this.renderCollapsed = this.renderCollapsed.bind(this), this.renderNotCollapsed = this.renderNotCollapsed.bind(this);
      }
      static getDerivedStateFromProps(t, o) {
        return t.data !== o.data ? { data: t.data } : null;
      }
      onChildUpdate(t, o) {
        let { data: r, keyPath: n } = this.state;
        r[t] = o, this.setState({ data: r });
        let { onUpdate: s2 } = this.props, a2 = n.length;
        s2(n[a2 - 1], r);
      }
      handleAddMode() {
        this.setState({ addFormVisible: true });
      }
      handleCollapseMode() {
        this.setState((t) => ({ collapsed: !t.collapsed }));
      }
      handleRemoveItem(t) {
        return () => {
          let { beforeRemoveAction: o, logger: r } = this.props, { data: n, keyPath: s2, nextDeep: a2 } = this.state, i2 = n[t];
          o(t, s2, a2, i2).then(() => {
            let l = { keyPath: s2, deep: a2, key: t, oldValue: i2, type: Ao };
            n.splice(t, 1), this.setState({ data: n });
            let { onUpdate: p, onDeltaUpdate: c2 } = this.props;
            p(s2[s2.length - 1], n), c2(l);
          }).catch(r.error);
        };
      }
      handleAddValueAdd({ newValue: t }) {
        let { data: o, keyPath: r, nextDeep: n } = this.state, { beforeAddAction: s2, logger: a2 } = this.props;
        s2(o.length, r, n, t).then(() => {
          let i2 = [...o, t];
          this.setState({ data: i2 }), this.handleAddValueCancel();
          let { onUpdate: l, onDeltaUpdate: p } = this.props;
          l(r[r.length - 1], i2), p({ type: wo, keyPath: r, deep: n, key: i2.length - 1, newValue: t });
        }).catch(a2.error);
      }
      handleAddValueCancel() {
        this.setState({ addFormVisible: false });
      }
      handleEditValue({ key: t, value: o }) {
        return new Promise((r, n) => {
          let { beforeUpdateAction: s2 } = this.props, { data: a2, keyPath: i2, nextDeep: l } = this.state, p = a2[t];
          s2(t, i2, l, p, o).then(() => {
            a2[t] = o, this.setState({ data: a2 });
            let { onUpdate: c2, onDeltaUpdate: d } = this.props;
            c2(i2[i2.length - 1], a2), d({ type: vo, keyPath: i2, deep: l, key: t, newValue: o, oldValue: p }), r(void 0);
          }).catch(n);
        });
      }
      renderCollapsed() {
        let { name: t, data: o, keyPath: r, deep: n } = this.state, { handleRemove: s2, readOnly: a2, getStyle: i2, dataType: l, minusMenuElement: p } = this.props, { minus: c2, collapsed: d } = i2(t, o, r, n, l), m2 = a2(t, o, r, n, l), y2 = (0, u.cloneElement)(p, { onClick: s2, className: "rejt-minus-menu", style: c2 });
        return u.default.createElement("span", { className: "rejt-collapsed" }, u.default.createElement("span", { className: "rejt-collapsed-text", style: d, onClick: this.handleCollapseMode }, "[...] ", o.length, " ", o.length === 1 ? "item" : "items"), !m2 && y2);
      }
      renderNotCollapsed() {
        let { name: t, data: o, keyPath: r, deep: n, addFormVisible: s2, nextDeep: a2 } = this.state, { isCollapsed: i2, handleRemove: l, onDeltaUpdate: p, readOnly: c2, getStyle: d, dataType: m2, addButtonElement: y2, cancelButtonElement: g, editButtonElement: b2, inputElementGenerator: x2, textareaElementGenerator: h2, minusMenuElement: C, plusMenuElement: S, beforeRemoveAction: V, beforeAddAction: U, beforeUpdateAction: w, logger: A3, onSubmitValueParser: q } = this.props, { minus: v, plus: Q, delimiter: yt, ul: ro, addForm: gt } = d(t, o, r, n, m2), ft = c2(t, o, r, n, m2), Ye = (0, u.cloneElement)(S, { onClick: this.handleAddMode, className: "rejt-plus-menu", style: Q }), no = (0, u.cloneElement)(C, { onClick: l, className: "rejt-minus-menu", style: v }), so = true, ao = "[", io = "]";
        return u.default.createElement("span", { className: "rejt-not-collapsed" }, u.default.createElement("span", { className: "rejt-not-collapsed-delimiter", style: yt }, ao), !s2 && Ye, u.default.createElement("ul", { className: "rejt-not-collapsed-list", style: ro }, o.map((lo, fe) => u.default.createElement(De, { key: fe, name: `${fe}`, data: lo, keyPath: r, deep: a2, isCollapsed: i2, handleRemove: this.handleRemoveItem(fe), handleUpdateValue: this.handleEditValue, onUpdate: this.onChildUpdate, onDeltaUpdate: p, readOnly: c2, getStyle: d, addButtonElement: y2, cancelButtonElement: g, editButtonElement: b2, inputElementGenerator: x2, textareaElementGenerator: h2, minusMenuElement: C, plusMenuElement: S, beforeRemoveAction: V, beforeAddAction: U, beforeUpdateAction: w, logger: A3, onSubmitValueParser: q }))), !ft && s2 && u.default.createElement("div", { className: "rejt-add-form", style: gt }, u.default.createElement(qe, { handleAdd: this.handleAddValueAdd, handleCancel: this.handleAddValueCancel, onlyValue: so, addButtonElement: y2, cancelButtonElement: g, inputElementGenerator: x2, keyPath: r, deep: n, onSubmitValueParser: q })), u.default.createElement("span", { className: "rejt-not-collapsed-delimiter", style: yt }, io), !ft && no);
      }
      render() {
        let { name: t, collapsed: o, data: r, keyPath: n, deep: s2 } = this.state, { dataType: a2, getStyle: i2 } = this.props, l = o ? this.renderCollapsed() : this.renderNotCollapsed(), p = i2(t, r, n, s2, a2);
        return u.default.createElement("div", { className: "rejt-array-node" }, u.default.createElement("span", { onClick: this.handleCollapseMode }, u.default.createElement("span", { className: "rejt-name", style: p.name }, t, " :", " ")), l);
      }
    };
    Dt.defaultProps = { keyPath: [], deep: 0, minusMenuElement: u.default.createElement("span", null, " - "), plusMenuElement: u.default.createElement("span", null, " + ") };
    var Ot = class extends u.Component {
      constructor(t) {
        super(t);
        let o = [...t.keyPath, t.name];
        this.state = { value: t.value, name: t.name, keyPath: o, deep: t.deep, editEnabled: false, inputRef: null }, this.handleEditMode = this.handleEditMode.bind(this), this.refInput = this.refInput.bind(this), this.handleCancelEdit = this.handleCancelEdit.bind(this), this.handleEdit = this.handleEdit.bind(this), this.onKeydown = this.onKeydown.bind(this);
      }
      static getDerivedStateFromProps(t, o) {
        return t.value !== o.value ? { value: t.value } : null;
      }
      componentDidUpdate() {
        let { editEnabled: t, inputRef: o, name: r, value: n, keyPath: s2, deep: a2 } = this.state, { readOnly: i2, dataType: l } = this.props, p = i2(r, n, s2, a2, l);
        t && !p && typeof o.focus == "function" && o.focus();
      }
      componentDidMount() {
        document.addEventListener("keydown", this.onKeydown);
      }
      componentWillUnmount() {
        document.removeEventListener("keydown", this.onKeydown);
      }
      onKeydown(t) {
        t.altKey || t.ctrlKey || t.metaKey || t.shiftKey || t.repeat || ((t.code === "Enter" || t.key === "Enter") && (t.preventDefault(), this.handleEdit()), (t.code === "Escape" || t.key === "Escape") && (t.preventDefault(), this.handleCancelEdit()));
      }
      handleEdit() {
        let { handleUpdateValue: t, originalValue: o, logger: r, onSubmitValueParser: n, keyPath: s2 } = this.props, { inputRef: a2, name: i2, deep: l } = this.state;
        if (!a2)
          return;
        let p = n(true, s2, l, i2, a2.value);
        t({ value: p, key: i2 }).then(() => {
          Fo(o, p) || this.handleCancelEdit();
        }).catch(r.error);
      }
      handleEditMode() {
        this.setState({ editEnabled: true });
      }
      refInput(t) {
        this.state.inputRef = t;
      }
      handleCancelEdit() {
        this.setState({ editEnabled: false });
      }
      render() {
        let { name: t, value: o, editEnabled: r, keyPath: n, deep: s2 } = this.state, { handleRemove: a2, originalValue: i2, readOnly: l, dataType: p, getStyle: c2, editButtonElement: d, cancelButtonElement: m2, textareaElementGenerator: y2, minusMenuElement: g, keyPath: b2 } = this.props, x2 = c2(t, i2, n, s2, p), h2 = null, C = null, S = l(t, i2, n, s2, p);
        if (r && !S) {
          let V = y2(Bt, b2, s2, t, i2, p), U = (0, u.cloneElement)(d, { onClick: this.handleEdit }), w = (0, u.cloneElement)(m2, { onClick: this.handleCancelEdit }), A3 = (0, u.cloneElement)(V, { ref: this.refInput, defaultValue: i2 });
          h2 = u.default.createElement("span", { className: "rejt-edit-form", style: x2.editForm }, A3, " ", w, U), C = null;
        } else {
          h2 = u.default.createElement("span", { className: "rejt-value", style: x2.value, onClick: S ? null : this.handleEditMode }, o);
          let V = (0, u.cloneElement)(g, { onClick: a2, className: "rejt-minus-menu", style: x2.minus });
          C = S ? null : V;
        }
        return u.default.createElement("li", { className: "rejt-function-value-node", style: x2.li }, u.default.createElement("span", { className: "rejt-name", style: x2.name }, t, " :", " "), h2, C);
      }
    };
    Ot.defaultProps = { keyPath: [], deep: 0, handleUpdateValue: () => {
    }, editButtonElement: u.default.createElement("button", null, "e"), cancelButtonElement: u.default.createElement("button", null, "c"), minusMenuElement: u.default.createElement("span", null, " - ") };
    var De = class extends u.Component {
      constructor(t) {
        super(t), this.state = { data: t.data, name: t.name, keyPath: t.keyPath, deep: t.deep };
      }
      static getDerivedStateFromProps(t, o) {
        return t.data !== o.data ? { data: t.data } : null;
      }
      render() {
        let { data: t, name: o, keyPath: r, deep: n } = this.state, { isCollapsed: s2, handleRemove: a2, handleUpdateValue: i2, onUpdate: l, onDeltaUpdate: p, readOnly: c2, getStyle: d, addButtonElement: m2, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, textareaElementGenerator: x2, minusMenuElement: h2, plusMenuElement: C, beforeRemoveAction: S, beforeAddAction: V, beforeUpdateAction: U, logger: w, onSubmitValueParser: A3 } = this.props, q = () => true, v = oe(t);
        switch (v) {
          case cn:
            return u.default.createElement(Qe, { data: t, name: o, isCollapsed: s2, keyPath: r, deep: n, handleRemove: a2, onUpdate: l, onDeltaUpdate: p, readOnly: q, dataType: v, getStyle: d, addButtonElement: m2, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, textareaElementGenerator: x2, minusMenuElement: h2, plusMenuElement: C, beforeRemoveAction: S, beforeAddAction: V, beforeUpdateAction: U, logger: w, onSubmitValueParser: A3 });
          case mn:
            return u.default.createElement(Qe, { data: t, name: o, isCollapsed: s2, keyPath: r, deep: n, handleRemove: a2, onUpdate: l, onDeltaUpdate: p, readOnly: c2, dataType: v, getStyle: d, addButtonElement: m2, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, textareaElementGenerator: x2, minusMenuElement: h2, plusMenuElement: C, beforeRemoveAction: S, beforeAddAction: V, beforeUpdateAction: U, logger: w, onSubmitValueParser: A3 });
          case un:
            return u.default.createElement(Dt, { data: t, name: o, isCollapsed: s2, keyPath: r, deep: n, handleRemove: a2, onUpdate: l, onDeltaUpdate: p, readOnly: c2, dataType: v, getStyle: d, addButtonElement: m2, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, textareaElementGenerator: x2, minusMenuElement: h2, plusMenuElement: C, beforeRemoveAction: S, beforeAddAction: V, beforeUpdateAction: U, logger: w, onSubmitValueParser: A3 });
          case yn:
            return u.default.createElement(ne, { name: o, value: `"${t}"`, originalValue: t, keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: c2, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case gn:
            return u.default.createElement(ne, { name: o, value: t, originalValue: t, keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: c2, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case fn:
            return u.default.createElement(ne, { name: o, value: t ? "true" : "false", originalValue: t, keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: c2, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case hn:
            return u.default.createElement(ne, { name: o, value: t.toISOString(), originalValue: t, keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: q, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case bn:
            return u.default.createElement(ne, { name: o, value: "null", originalValue: "null", keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: c2, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case xn:
            return u.default.createElement(ne, { name: o, value: "undefined", originalValue: "undefined", keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: c2, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case Cn:
            return u.default.createElement(Ot, { name: o, value: t.toString(), originalValue: t, keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: c2, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, textareaElementGenerator: x2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          case Sn:
            return u.default.createElement(ne, { name: o, value: t.toString(), originalValue: t, keyPath: r, deep: n, handleRemove: a2, handleUpdateValue: i2, readOnly: q, dataType: v, getStyle: d, cancelButtonElement: y2, editButtonElement: g, inputElementGenerator: b2, minusMenuElement: h2, logger: w, onSubmitValueParser: A3 });
          default:
            return null;
        }
      }
    };
    De.defaultProps = { keyPath: [], deep: 0 };
    var Qe = class extends u.Component {
      constructor(t) {
        super(t);
        let o = t.deep === -1 ? [] : [...t.keyPath, t.name];
        this.state = { name: t.name, data: t.data, keyPath: o, deep: t.deep, nextDeep: t.deep + 1, collapsed: t.isCollapsed(o, t.deep, t.data), addFormVisible: false }, this.handleCollapseMode = this.handleCollapseMode.bind(this), this.handleRemoveValue = this.handleRemoveValue.bind(this), this.handleAddMode = this.handleAddMode.bind(this), this.handleAddValueAdd = this.handleAddValueAdd.bind(this), this.handleAddValueCancel = this.handleAddValueCancel.bind(this), this.handleEditValue = this.handleEditValue.bind(this), this.onChildUpdate = this.onChildUpdate.bind(this), this.renderCollapsed = this.renderCollapsed.bind(this), this.renderNotCollapsed = this.renderNotCollapsed.bind(this);
      }
      static getDerivedStateFromProps(t, o) {
        return t.data !== o.data ? { data: t.data } : null;
      }
      onChildUpdate(t, o) {
        let { data: r, keyPath: n } = this.state;
        r[t] = o, this.setState({ data: r });
        let { onUpdate: s2 } = this.props, a2 = n.length;
        s2(n[a2 - 1], r);
      }
      handleAddMode() {
        this.setState({ addFormVisible: true });
      }
      handleAddValueCancel() {
        this.setState({ addFormVisible: false });
      }
      handleAddValueAdd({ key: t, newValue: o }) {
        let { data: r, keyPath: n, nextDeep: s2 } = this.state, { beforeAddAction: a2, logger: i2 } = this.props;
        a2(t, n, s2, o).then(() => {
          r[t] = o, this.setState({ data: r }), this.handleAddValueCancel();
          let { onUpdate: l, onDeltaUpdate: p } = this.props;
          l(n[n.length - 1], r), p({ type: wo, keyPath: n, deep: s2, key: t, newValue: o });
        }).catch(i2.error);
      }
      handleRemoveValue(t) {
        return () => {
          let { beforeRemoveAction: o, logger: r } = this.props, { data: n, keyPath: s2, nextDeep: a2 } = this.state, i2 = n[t];
          o(t, s2, a2, i2).then(() => {
            let l = { keyPath: s2, deep: a2, key: t, oldValue: i2, type: Ao };
            delete n[t], this.setState({ data: n });
            let { onUpdate: p, onDeltaUpdate: c2 } = this.props;
            p(s2[s2.length - 1], n), c2(l);
          }).catch(r.error);
        };
      }
      handleCollapseMode() {
        this.setState((t) => ({ collapsed: !t.collapsed }));
      }
      handleEditValue({ key: t, value: o }) {
        return new Promise((r, n) => {
          let { beforeUpdateAction: s2 } = this.props, { data: a2, keyPath: i2, nextDeep: l } = this.state, p = a2[t];
          s2(t, i2, l, p, o).then(() => {
            a2[t] = o, this.setState({ data: a2 });
            let { onUpdate: c2, onDeltaUpdate: d } = this.props;
            c2(i2[i2.length - 1], a2), d({ type: vo, keyPath: i2, deep: l, key: t, newValue: o, oldValue: p }), r();
          }).catch(n);
        });
      }
      renderCollapsed() {
        let { name: t, keyPath: o, deep: r, data: n } = this.state, { handleRemove: s2, readOnly: a2, dataType: i2, getStyle: l, minusMenuElement: p } = this.props, { minus: c2, collapsed: d } = l(t, n, o, r, i2), m2 = Object.getOwnPropertyNames(n), y2 = a2(t, n, o, r, i2), g = (0, u.cloneElement)(p, { onClick: s2, className: "rejt-minus-menu", style: c2 });
        return u.default.createElement("span", { className: "rejt-collapsed" }, u.default.createElement("span", { className: "rejt-collapsed-text", style: d, onClick: this.handleCollapseMode }, "{...}", " ", m2.length, " ", m2.length === 1 ? "key" : "keys"), !y2 && g);
      }
      renderNotCollapsed() {
        let { name: t, data: o, keyPath: r, deep: n, nextDeep: s2, addFormVisible: a2 } = this.state, { isCollapsed: i2, handleRemove: l, onDeltaUpdate: p, readOnly: c2, getStyle: d, dataType: m2, addButtonElement: y2, cancelButtonElement: g, editButtonElement: b2, inputElementGenerator: x2, textareaElementGenerator: h2, minusMenuElement: C, plusMenuElement: S, beforeRemoveAction: V, beforeAddAction: U, beforeUpdateAction: w, logger: A3, onSubmitValueParser: q } = this.props, { minus: v, plus: Q, addForm: yt, ul: ro, delimiter: gt } = d(t, o, r, n, m2), ft = Object.getOwnPropertyNames(o), Ye = c2(t, o, r, n, m2), no = (0, u.cloneElement)(S, { onClick: this.handleAddMode, className: "rejt-plus-menu", style: Q }), so = (0, u.cloneElement)(C, { onClick: l, className: "rejt-minus-menu", style: v }), ao = ft.map((fe) => u.default.createElement(De, { key: fe, name: fe, data: o[fe], keyPath: r, deep: s2, isCollapsed: i2, handleRemove: this.handleRemoveValue(fe), handleUpdateValue: this.handleEditValue, onUpdate: this.onChildUpdate, onDeltaUpdate: p, readOnly: c2, getStyle: d, addButtonElement: y2, cancelButtonElement: g, editButtonElement: b2, inputElementGenerator: x2, textareaElementGenerator: h2, minusMenuElement: C, plusMenuElement: S, beforeRemoveAction: V, beforeAddAction: U, beforeUpdateAction: w, logger: A3, onSubmitValueParser: q })), io = "{", lo = "}";
        return u.default.createElement("span", { className: "rejt-not-collapsed" }, u.default.createElement("span", { className: "rejt-not-collapsed-delimiter", style: gt }, io), !Ye && no, u.default.createElement("ul", { className: "rejt-not-collapsed-list", style: ro }, ao), !Ye && a2 && u.default.createElement("div", { className: "rejt-add-form", style: yt }, u.default.createElement(qe, { handleAdd: this.handleAddValueAdd, handleCancel: this.handleAddValueCancel, addButtonElement: y2, cancelButtonElement: g, inputElementGenerator: x2, keyPath: r, deep: n, onSubmitValueParser: q })), u.default.createElement("span", { className: "rejt-not-collapsed-delimiter", style: gt }, lo), !Ye && so);
      }
      render() {
        let { name: t, collapsed: o, data: r, keyPath: n, deep: s2 } = this.state, { getStyle: a2, dataType: i2 } = this.props, l = o ? this.renderCollapsed() : this.renderNotCollapsed(), p = a2(t, r, n, s2, i2);
        return u.default.createElement("div", { className: "rejt-object-node" }, u.default.createElement("span", { onClick: this.handleCollapseMode }, u.default.createElement("span", { className: "rejt-name", style: p.name }, t, " :", " ")), l);
      }
    };
    Qe.defaultProps = { keyPath: [], deep: 0, minusMenuElement: u.default.createElement("span", null, " - "), plusMenuElement: u.default.createElement("span", null, " + ") };
    var ne = class extends u.Component {
      constructor(t) {
        super(t);
        let o = [...t.keyPath, t.name];
        this.state = { value: t.value, name: t.name, keyPath: o, deep: t.deep, editEnabled: false, inputRef: null }, this.handleEditMode = this.handleEditMode.bind(this), this.refInput = this.refInput.bind(this), this.handleCancelEdit = this.handleCancelEdit.bind(this), this.handleEdit = this.handleEdit.bind(this), this.onKeydown = this.onKeydown.bind(this);
      }
      static getDerivedStateFromProps(t, o) {
        return t.value !== o.value ? { value: t.value } : null;
      }
      componentDidUpdate() {
        let { editEnabled: t, inputRef: o, name: r, value: n, keyPath: s2, deep: a2 } = this.state, { readOnly: i2, dataType: l } = this.props, p = i2(r, n, s2, a2, l);
        t && !p && typeof o.focus == "function" && o.focus();
      }
      componentDidMount() {
        document.addEventListener("keydown", this.onKeydown);
      }
      componentWillUnmount() {
        document.removeEventListener("keydown", this.onKeydown);
      }
      onKeydown(t) {
        t.altKey || t.ctrlKey || t.metaKey || t.shiftKey || t.repeat || ((t.code === "Enter" || t.key === "Enter") && (t.preventDefault(), this.handleEdit()), (t.code === "Escape" || t.key === "Escape") && (t.preventDefault(), this.handleCancelEdit()));
      }
      handleEdit() {
        let { handleUpdateValue: t, originalValue: o, logger: r, onSubmitValueParser: n, keyPath: s2 } = this.props, { inputRef: a2, name: i2, deep: l } = this.state;
        if (!a2)
          return;
        let p = n(true, s2, l, i2, a2.value);
        t({ value: p, key: i2 }).then(() => {
          Fo(o, p) || this.handleCancelEdit();
        }).catch(r.error);
      }
      handleEditMode() {
        this.setState({ editEnabled: true });
      }
      refInput(t) {
        this.state.inputRef = t;
      }
      handleCancelEdit() {
        this.setState({ editEnabled: false });
      }
      render() {
        let { name: t, value: o, editEnabled: r, keyPath: n, deep: s2 } = this.state, { handleRemove: a2, originalValue: i2, readOnly: l, dataType: p, getStyle: c2, editButtonElement: d, cancelButtonElement: m2, inputElementGenerator: y2, minusMenuElement: g, keyPath: b2 } = this.props, x2 = c2(t, i2, n, s2, p), h2 = l(t, i2, n, s2, p), C = r && !h2, S = y2(Bt, b2, s2, t, i2, p), V = (0, u.cloneElement)(d, { onClick: this.handleEdit }), U = (0, u.cloneElement)(m2, { onClick: this.handleCancelEdit }), w = (0, u.cloneElement)(S, { ref: this.refInput, defaultValue: JSON.stringify(i2) }), A3 = (0, u.cloneElement)(g, { onClick: a2, className: "rejt-minus-menu", style: x2.minus });
        return u.default.createElement("li", { className: "rejt-value-node", style: x2.li }, u.default.createElement("span", { className: "rejt-name", style: x2.name }, t, " : "), C ? u.default.createElement("span", { className: "rejt-edit-form", style: x2.editForm }, w, " ", U, V) : u.default.createElement("span", { className: "rejt-value", style: x2.value, onClick: h2 ? null : this.handleEditMode }, String(o)), !h2 && !C && A3);
      }
    };
    ne.defaultProps = { keyPath: [], deep: 0, handleUpdateValue: () => Promise.resolve(), editButtonElement: u.default.createElement("button", null, "e"), cancelButtonElement: u.default.createElement("button", null, "c"), minusMenuElement: u.default.createElement("span", null, " - ") };
    var Pn = { minus: { color: "red" }, plus: { color: "green" }, collapsed: { color: "grey" }, delimiter: {}, ul: { padding: "0px", margin: "0 0 0 25px", listStyle: "none" }, name: { color: "#2287CD" }, addForm: {} };
    var En = { minus: { color: "red" }, plus: { color: "green" }, collapsed: { color: "grey" }, delimiter: {}, ul: { padding: "0px", margin: "0 0 0 25px", listStyle: "none" }, name: { color: "#2287CD" }, addForm: {} };
    var kn = { minus: { color: "red" }, editForm: {}, value: { color: "#7bba3d" }, li: { minHeight: "22px", lineHeight: "22px", outline: "0px" }, name: { color: "#2287CD" } };
    function Tn(e) {
      let t = e;
      if (t.indexOf("function") === 0)
        return (0, eval)(`(${t})`);
      try {
        t = JSON.parse(e);
      } catch {
      }
      return t;
    }
    var et = class extends Oe.Component {
      constructor(t) {
        super(t), this.state = { data: t.data, rootName: t.rootName }, this.onUpdate = this.onUpdate.bind(this), this.removeRoot = this.removeRoot.bind(this);
      }
      static getDerivedStateFromProps(t, o) {
        return t.data !== o.data || t.rootName !== o.rootName ? { data: t.data, rootName: t.rootName } : null;
      }
      onUpdate(t, o) {
        this.setState({ data: o }), this.props.onFullyUpdate(o);
      }
      removeRoot() {
        this.onUpdate(null, null);
      }
      render() {
        let { data: t, rootName: o } = this.state, { isCollapsed: r, onDeltaUpdate: n, readOnly: s2, getStyle: a2, addButtonElement: i2, cancelButtonElement: l, editButtonElement: p, inputElement: c2, textareaElement: d, minusMenuElement: m2, plusMenuElement: y2, beforeRemoveAction: g, beforeAddAction: b2, beforeUpdateAction: x2, logger: h2, onSubmitValueParser: C, fallback: S = null } = this.props, V = oe(t), U = s2;
        oe(s2) === "Boolean" && (U = () => s2);
        let w = c2;
        c2 && oe(c2) !== "Function" && (w = () => c2);
        let A3 = d;
        return d && oe(d) !== "Function" && (A3 = () => d), V === "Object" || V === "Array" ? Oe.default.createElement("div", { className: "rejt-tree" }, Oe.default.createElement(De, { data: t, name: o, deep: -1, isCollapsed: r, onUpdate: this.onUpdate, onDeltaUpdate: n, readOnly: U, getStyle: a2, addButtonElement: i2, cancelButtonElement: l, editButtonElement: p, inputElementGenerator: w, textareaElementGenerator: A3, minusMenuElement: m2, plusMenuElement: y2, handleRemove: this.removeRoot, beforeRemoveAction: g, beforeAddAction: b2, beforeUpdateAction: x2, logger: h2, onSubmitValueParser: C })) : S;
      }
    };
    et.defaultProps = { rootName: "root", isCollapsed: (e, t) => t !== -1, getStyle: (e, t, o, r, n) => {
      switch (n) {
        case "Object":
        case "Error":
          return Pn;
        case "Array":
          return En;
        default:
          return kn;
      }
    }, readOnly: () => false, onFullyUpdate: () => {
    }, onDeltaUpdate: () => {
    }, beforeRemoveAction: () => Promise.resolve(), beforeAddAction: () => Promise.resolve(), beforeUpdateAction: () => Promise.resolve(), logger: { error: () => {
    } }, onSubmitValueParser: (e, t, o, r, n) => Tn(n), inputElement: () => Oe.default.createElement("input", null), textareaElement: () => Oe.default.createElement("textarea", null), fallback: null };
    Y2();
    var { window: Ga } = vn.default;
    var Ka = pe.styled.div(({ theme: e }) => ({ position: "relative", display: "flex", ".rejt-tree": { marginLeft: "1rem", fontSize: "13px" }, ".rejt-value-node, .rejt-object-node > .rejt-collapsed, .rejt-array-node > .rejt-collapsed, .rejt-object-node > .rejt-not-collapsed, .rejt-array-node > .rejt-not-collapsed": { "& > svg": { opacity: 0, transition: "opacity 0.2s" } }, ".rejt-value-node:hover, .rejt-object-node:hover > .rejt-collapsed, .rejt-array-node:hover > .rejt-collapsed, .rejt-object-node:hover > .rejt-not-collapsed, .rejt-array-node:hover > .rejt-not-collapsed": { "& > svg": { opacity: 1 } }, ".rejt-edit-form button": { display: "none" }, ".rejt-add-form": { marginLeft: 10 }, ".rejt-add-value-node": { display: "inline-flex", alignItems: "center" }, ".rejt-name": { lineHeight: "22px" }, ".rejt-not-collapsed-delimiter": { lineHeight: "22px" }, ".rejt-plus-menu": { marginLeft: 5 }, ".rejt-object-node > span > *": { position: "relative", zIndex: 2 }, ".rejt-object-node, .rejt-array-node": { position: "relative" }, ".rejt-object-node > span:first-of-type::after, .rejt-array-node > span:first-of-type::after, .rejt-collapsed::before, .rejt-not-collapsed::before": { content: '""', position: "absolute", top: 0, display: "block", width: "100%", marginLeft: "-1rem", padding: "0 4px 0 1rem", height: 22 }, ".rejt-collapsed::before, .rejt-not-collapsed::before": { zIndex: 1, background: "transparent", borderRadius: 4, transition: "background 0.2s", pointerEvents: "none", opacity: 0.1 }, ".rejt-object-node:hover, .rejt-array-node:hover": { "& > .rejt-collapsed::before, & > .rejt-not-collapsed::before": { background: e.color.secondary } }, ".rejt-collapsed::after, .rejt-not-collapsed::after": { content: '""', position: "absolute", display: "inline-block", pointerEvents: "none", width: 0, height: 0 }, ".rejt-collapsed::after": { left: -8, top: 8, borderTop: "3px solid transparent", borderBottom: "3px solid transparent", borderLeft: "3px solid rgba(153,153,153,0.6)" }, ".rejt-not-collapsed::after": { left: -10, top: 10, borderTop: "3px solid rgba(153,153,153,0.6)", borderLeft: "3px solid transparent", borderRight: "3px solid transparent" }, ".rejt-value": { display: "inline-block", border: "1px solid transparent", borderRadius: 4, margin: "1px 0", padding: "0 4px", cursor: "text", color: e.color.defaultText }, ".rejt-value-node:hover > .rejt-value": { background: e.color.lighter, borderColor: e.appBorderColor } }));
    var Io = pe.styled.button(({ theme: e, primary: t }) => ({ border: 0, height: 20, margin: 1, borderRadius: 4, background: t ? e.color.secondary : "transparent", color: t ? e.color.lightest : e.color.dark, fontWeight: t ? "bold" : "normal", cursor: "pointer", order: t ? "initial" : 9 }));
    var wn = (0, pe.styled)(Pe.Icons)(({ theme: e, icon: t, disabled: o }) => ({ display: "inline-block", verticalAlign: "middle", width: 15, height: 15, padding: 3, marginLeft: 5, cursor: o ? "not-allowed" : "pointer", color: e.textMutedColor, "&:hover": o ? {} : { color: t === "subtract" ? e.color.negative : e.color.ancillary }, "svg + &": { marginLeft: 0 } }));
    var An = pe.styled.input(({ theme: e, placeholder: t }) => ({ outline: 0, margin: t ? 1 : "1px 0", padding: "3px 4px", color: e.color.defaultText, background: e.background.app, border: `1px solid ${e.appBorderColor}`, borderRadius: 4, lineHeight: "14px", width: t === "Key" ? 80 : 120, "&:focus": { border: `1px solid ${e.color.secondary}` } }));
    var Ya = (0, pe.styled)(Pe.IconButton)(({ theme: e }) => ({ position: "absolute", zIndex: 2, top: 2, right: 2, height: 21, padding: "0 3px", background: e.background.bar, border: `1px solid ${e.appBorderColor}`, borderRadius: 3, color: e.textMutedColor, fontSize: "9px", fontWeight: "bold", textDecoration: "none", span: { marginLeft: 3, marginTop: 1 } }));
    var Xa = (0, pe.styled)(Pe.Form.Textarea)(({ theme: e }) => ({ flex: 1, padding: "7px 6px", fontFamily: e.typography.fonts.mono, fontSize: "12px", lineHeight: "18px", "&::placeholder": { fontFamily: e.typography.fonts.base, fontSize: "13px" }, "&:placeholder-shown": { padding: "7px 10px" } }));
    var Za = { bubbles: true, cancelable: true, key: "Enter", code: "Enter", keyCode: 13 };
    var qa = (e) => {
      e.currentTarget.dispatchEvent(new Ga.KeyboardEvent("keydown", Za));
    };
    var Qa = (e) => {
      e.currentTarget.select();
    };
    var ei = (e) => () => ({ name: { color: e.color.secondary }, collapsed: { color: e.color.dark }, ul: { listStyle: "none", margin: "0 0 0 1rem", padding: 0 }, li: { outline: 0 } });
    var Nt = ({ name: e, value: t, onChange: o }) => {
      let r = (0, pe.useTheme)(), n = (0, k2.useMemo)(() => t && (0, Fn.default)(t), [t]), s2 = n != null, [a2, i2] = (0, k2.useState)(!s2), [l, p] = (0, k2.useState)(null), c2 = (0, k2.useCallback)((x2) => {
        try {
          x2 && o(JSON.parse(x2)), p(void 0);
        } catch (h2) {
          p(h2);
        }
      }, [o]), [d, m2] = (0, k2.useState)(false), y2 = (0, k2.useCallback)(() => {
        o({}), m2(true);
      }, [m2]), g = (0, k2.useRef)(null);
      if ((0, k2.useEffect)(() => {
        d && g.current && g.current.select();
      }, [d]), !s2)
        return k2.default.createElement(Pe.Form.Button, { id: xe(e), onClick: y2 }, "Set object");
      let b2 = k2.default.createElement(Xa, { ref: g, id: I(e), name: e, defaultValue: t === null ? "" : JSON.stringify(t, null, 2), onBlur: (x2) => c2(x2.target.value), placeholder: "Edit JSON string...", autoFocus: d, valid: l ? "error" : null });
      return k2.default.createElement(Ka, null, ["Object", "Array"].includes(oe(n)) && k2.default.createElement(Ya, { href: "#", onClick: (x2) => {
        x2.preventDefault(), i2((h2) => !h2);
      } }, k2.default.createElement(Pe.Icons, { icon: a2 ? "eyeclose" : "eye" }), k2.default.createElement("span", null, "RAW")), a2 ? b2 : k2.default.createElement(et, { data: n, rootName: e, onFullyUpdate: o, getStyle: ei(r), cancelButtonElement: k2.default.createElement(Io, { type: "button" }, "Cancel"), editButtonElement: k2.default.createElement(Io, { type: "submit" }, "Save"), addButtonElement: k2.default.createElement(Io, { type: "submit", primary: true }, "Save"), plusMenuElement: k2.default.createElement(wn, { icon: "add" }), minusMenuElement: k2.default.createElement(wn, { icon: "subtract" }), inputElement: (x2, h2, C, S) => S ? k2.default.createElement(An, { onFocus: Qa, onBlur: qa }) : k2.default.createElement(An, null), fallback: b2 }));
    };
    var Ne = f2((init_react(), __toCommonJS(react_exports)));
    var Vt = (init_theming(), __toCommonJS(theming_exports));
    var B = require_polished_cjs();
    Y2();
    var ti = Vt.styled.input(({ theme: e, min: t, max: o, value: r }) => ({ "&": { width: "100%", backgroundColor: "transparent", appearance: "none" }, "&::-webkit-slider-runnable-track": { background: e.base === "light" ? `linear-gradient(to right, 
            ${e.color.green} 0%, ${e.color.green} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.darken)(0.02, e.input.background)} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.darken)(0.02, e.input.background)} 100%)` : `linear-gradient(to right, 
            ${e.color.green} 0%, ${e.color.green} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.lighten)(0.02, e.input.background)} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.lighten)(0.02, e.input.background)} 100%)`, boxShadow: `${e.appBorderColor} 0 0 0 1px inset`, borderRadius: 6, width: "100%", height: 6, cursor: "pointer" }, "&::-webkit-slider-thumb": { marginTop: "-6px", width: 16, height: 16, border: `1px solid ${(0, B.rgba)(e.appBorderColor, 0.2)}`, borderRadius: "50px", boxShadow: `0 1px 3px 0px ${(0, B.rgba)(e.appBorderColor, 0.2)}`, cursor: "grab", appearance: "none", background: `${e.input.background}`, transition: "all 150ms ease-out", "&:hover": { background: `${(0, B.darken)(0.05, e.input.background)}`, transform: "scale3d(1.1, 1.1, 1.1) translateY(-1px)", transition: "all 50ms ease-out" }, "&:active": { background: `${e.input.background}`, transform: "scale3d(1, 1, 1) translateY(0px)", cursor: "grabbing" } }, "&:focus": { outline: "none", "&::-webkit-slider-runnable-track": { borderColor: (0, B.rgba)(e.color.secondary, 0.4) }, "&::-webkit-slider-thumb": { borderColor: e.color.secondary, boxShadow: `0 0px 5px 0px ${e.color.secondary}` } }, "&::-moz-range-track": { background: e.base === "light" ? `linear-gradient(to right, 
            ${e.color.green} 0%, ${e.color.green} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.darken)(0.02, e.input.background)} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.darken)(0.02, e.input.background)} 100%)` : `linear-gradient(to right, 
            ${e.color.green} 0%, ${e.color.green} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.lighten)(0.02, e.input.background)} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.lighten)(0.02, e.input.background)} 100%)`, boxShadow: `${e.appBorderColor} 0 0 0 1px inset`, borderRadius: 6, width: "100%", height: 6, cursor: "pointer", outline: "none" }, "&::-moz-range-thumb": { width: 16, height: 16, border: `1px solid ${(0, B.rgba)(e.appBorderColor, 0.2)}`, borderRadius: "50px", boxShadow: `0 1px 3px 0px ${(0, B.rgba)(e.appBorderColor, 0.2)}`, cursor: "grab", background: `${e.input.background}`, transition: "all 150ms ease-out", "&:hover": { background: `${(0, B.darken)(0.05, e.input.background)}`, transform: "scale3d(1.1, 1.1, 1.1) translateY(-1px)", transition: "all 50ms ease-out" }, "&:active": { background: `${e.input.background}`, transform: "scale3d(1, 1, 1) translateY(0px)", cursor: "grabbing" } }, "&::-ms-track": { background: e.base === "light" ? `linear-gradient(to right, 
            ${e.color.green} 0%, ${e.color.green} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.darken)(0.02, e.input.background)} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.darken)(0.02, e.input.background)} 100%)` : `linear-gradient(to right, 
            ${e.color.green} 0%, ${e.color.green} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.lighten)(0.02, e.input.background)} ${(r - t) / (o - t) * 100}%, 
            ${(0, B.lighten)(0.02, e.input.background)} 100%)`, boxShadow: `${e.appBorderColor} 0 0 0 1px inset`, color: "transparent", width: "100%", height: "6px", cursor: "pointer" }, "&::-ms-fill-lower": { borderRadius: 6 }, "&::-ms-fill-upper": { borderRadius: 6 }, "&::-ms-thumb": { width: 16, height: 16, background: `${e.input.background}`, border: `1px solid ${(0, B.rgba)(e.appBorderColor, 0.2)}`, borderRadius: 50, cursor: "grab", marginTop: 0 }, "@supports (-ms-ime-align:auto)": { "input[type=range]": { margin: "0" } } }));
    var In = Vt.styled.span({ paddingLeft: 5, paddingRight: 5, fontSize: 12, whiteSpace: "nowrap", fontFeatureSettings: "tnum", fontVariantNumeric: "tabular-nums" });
    var oi = Vt.styled.div({ display: "flex", alignItems: "center", width: "100%" });
    function ri(e) {
      let t = e.toString().match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
      return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0;
    }
    var Bo = ({ name: e, value: t, onChange: o, min: r = 0, max: n = 100, step: s2 = 1, onBlur: a2, onFocus: i2 }) => {
      let l = (d) => {
        o(Co(d.target.value));
      }, p = t !== void 0, c2 = (0, Ne.useMemo)(() => ri(s2), [s2]);
      return Ne.default.createElement(oi, null, Ne.default.createElement(In, null, r), Ne.default.createElement(ti, { id: I(e), type: "range", onChange: l, ...{ name: e, value: t, min: r, max: n, step: s2, onFocus: i2, onBlur: a2 } }), Ne.default.createElement(In, null, `${p ? t.toFixed(c2) : "--"}`, " / ", n));
    };
    var de = f2((init_react(), __toCommonJS(react_exports)));
    var Oo = (init_theming(), __toCommonJS(theming_exports));
    var Do = (init_components(), __toCommonJS(components_exports));
    Y2();
    var ni = Oo.styled.label({ display: "flex" });
    var si = Oo.styled.div(({ isMaxed: e }) => ({ marginLeft: "0.75rem", paddingTop: "0.35rem", color: e ? "red" : void 0 }));
    var No = ({ name: e, value: t, onChange: o, onFocus: r, onBlur: n, maxLength: s2 }) => {
      let a2 = (d) => {
        o(d.target.value);
      }, [i2, l] = (0, de.useState)(false), p = (0, de.useCallback)(() => {
        o(""), l(true);
      }, [l]);
      if (t === void 0)
        return de.default.createElement(Do.Form.Button, { id: xe(e), onClick: p }, "Set string");
      let c2 = typeof t == "string";
      return de.default.createElement(ni, null, de.default.createElement(Do.Form.Textarea, { id: I(e), maxLength: s2, onChange: a2, size: "flex", placeholder: "Edit string...", autoFocus: i2, valid: c2 ? null : "error", ...{ name: e, value: c2 ? t : "", onFocus: r, onBlur: n } }), s2 && de.default.createElement(si, { isMaxed: (t == null ? void 0 : t.length) === s2 }, (t == null ? void 0 : t.length) ?? 0, " / ", s2));
    };
    var Bn = f2((init_react(), __toCommonJS(react_exports)));
    var Dn = (init_theming(), __toCommonJS(theming_exports));
    var On = (init_components(), __toCommonJS(components_exports));
    Y2();
    var ai = (0, Dn.styled)(On.Form.Input)({ padding: 10 });
    function ii(e) {
      e.forEach((t) => {
        t.startsWith("blob:") && URL.revokeObjectURL(t);
      });
    }
    var Vo = ({ onChange: e, name: t, accept: o = "image/*", value: r }) => {
      function n(s2) {
        if (!s2.target.files)
          return;
        let a2 = Array.from(s2.target.files).map((i2) => URL.createObjectURL(i2));
        e(a2), ii(r);
      }
      return Bn.default.createElement(ai, { id: I(t), type: "file", name: t, multiple: true, onChange: n, accept: o, size: "flex" });
    };
    var wi = (0, Ee.lazy)(() => Promise.resolve().then(() => (_n(), $n)));
    var Mo = (e) => Ee.default.createElement(Ee.Suspense, { fallback: Ee.default.createElement("div", null) }, Ee.default.createElement(wi, { ...e }));
    var Ai = { array: Nt, object: Nt, boolean: fo, color: Mo, date: bo, number: So, check: Se, "inline-check": Se, radio: Se, "inline-radio": Se, select: Se, "multi-select": Se, range: Bo, text: No, file: Vo };
    var Un = () => R.default.createElement(R.default.Fragment, null, "-");
    var Hn = ({ row: e, arg: t, updateArgs: o }) => {
      let { key: r, control: n } = e, [s2, a2] = (0, R.useState)(false), [i2, l] = (0, R.useState)({ value: t });
      (0, R.useEffect)(() => {
        s2 || l({ value: t });
      }, [s2, t]);
      let p = (0, R.useCallback)((g) => (l({ value: g }), o({ [r]: g }), g), [o, r]), c2 = (0, R.useCallback)(() => a2(false), []), d = (0, R.useCallback)(() => a2(true), []);
      if (!n || n.disable)
        return R.default.createElement(Un, null);
      let m2 = { name: r, argType: e, value: i2.value, onChange: p, onBlur: c2, onFocus: d }, y2 = Ai[n.type] || Un;
      return R.default.createElement(y2, { ...m2, ...n, controlType: n.type });
    };
    var vi = Ve.styled.span({ fontWeight: "bold" });
    var Fi = Ve.styled.span(({ theme: e }) => ({ color: e.color.negative, fontFamily: e.typography.fonts.mono, cursor: "help" }));
    var Ii = Ve.styled.div(({ theme: e }) => ({ "&&": { p: { margin: "0 0 10px 0" }, a: { color: e.color.secondary } }, code: { ...(0, zn.codeCommon)({ theme: e }), fontSize: 12, fontFamily: e.typography.fonts.mono }, "& code": { margin: 0, display: "inline-block" }, "& pre > code": { whiteSpace: "pre-wrap" } }));
    var Bi = Ve.styled.div(({ theme: e, hasDescription: t }) => ({ color: e.base === "light" ? (0, ot.transparentize)(0.1, e.color.defaultText) : (0, ot.transparentize)(0.2, e.color.defaultText), marginTop: t ? 4 : 0 }));
    var Di = Ve.styled.div(({ theme: e, hasDescription: t }) => ({ color: e.base === "light" ? (0, ot.transparentize)(0.1, e.color.defaultText) : (0, ot.transparentize)(0.2, e.color.defaultText), marginTop: t ? 12 : 0, marginBottom: 12 }));
    var Oi = Ve.styled.td(({ theme: e, expandable: t }) => ({ paddingLeft: t ? "40px !important" : "20px !important" }));
    var rt = (e) => {
      var y2;
      let { row: t, updateArgs: o, compact: r, expandable: n, initialExpandedArgs: s2 } = e, { name: a2, description: i2 } = t, l = t.table || {}, p = l.type || t.type, c2 = l.defaultValue || t.defaultValue, d = (y2 = t.type) == null ? void 0 : y2.required, m2 = i2 != null && i2 !== "";
      return j2.default.createElement("tr", null, j2.default.createElement(Oi, { expandable: n }, j2.default.createElement(vi, null, a2), d ? j2.default.createElement(Fi, { title: "Required" }, "*") : null), r ? null : j2.default.createElement("td", null, m2 && j2.default.createElement(Ii, null, j2.default.createElement(Wn.default, null, i2)), l.jsDocTags != null ? j2.default.createElement(j2.default.Fragment, null, j2.default.createElement(Di, { hasDescription: m2 }, j2.default.createElement(Tt, { value: p, initialExpandedArgs: s2 })), j2.default.createElement(Ur, { tags: l.jsDocTags })) : j2.default.createElement(Bi, { hasDescription: m2 }, j2.default.createElement(Tt, { value: p, initialExpandedArgs: s2 }))), r ? null : j2.default.createElement("td", null, j2.default.createElement(Tt, { value: c2, initialExpandedArgs: s2 })), o ? j2.default.createElement("td", null, j2.default.createElement(Hn, { ...e })) : null);
    };
    var Z = f2((init_react(), __toCommonJS(react_exports)));
    var nt = require_polished_cjs();
    var ke = (init_theming(), __toCommonJS(theming_exports));
    var Jn = (init_components(), __toCommonJS(components_exports));
    var Ni = (0, ke.styled)(Jn.Icons)(({ theme: e }) => ({ marginRight: 8, marginLeft: -10, marginTop: -2, height: 12, width: 12, color: e.base === "light" ? (0, nt.transparentize)(0.25, e.color.defaultText) : (0, nt.transparentize)(0.3, e.color.defaultText), border: "none", display: "inline-block" }));
    var Vi = ke.styled.span(({ theme: e }) => ({ display: "flex", lineHeight: "20px", alignItems: "center" }));
    var Li = ke.styled.td(({ theme: e }) => ({ position: "relative", letterSpacing: "0.35em", textTransform: "uppercase", fontWeight: e.typography.weight.black, fontSize: e.typography.size.s1 - 1, color: e.base === "light" ? (0, nt.transparentize)(0.4, e.color.defaultText) : (0, nt.transparentize)(0.6, e.color.defaultText), background: `${e.background.app} !important`, "& ~ td": { background: `${e.background.app} !important` } }));
    var Mi = ke.styled.td(({ theme: e }) => ({ position: "relative", fontWeight: e.typography.weight.bold, fontSize: e.typography.size.s2 - 1, background: e.background.content }));
    var ji = ke.styled.td(({ theme: e }) => ({ position: "relative" }));
    var $i = ke.styled.tr(({ theme: e }) => ({ "&:hover > td": { backgroundColor: `${e.background.hoverable} !important`, boxShadow: `${e.color.mediumlight} 0 - 1px 0 0 inset`, cursor: "row-resize" } }));
    var Rn = ke.styled.button(() => ({ background: "none", border: "none", padding: "0", font: "inherit", position: "absolute", top: 0, bottom: 0, left: 0, right: 0, height: "100%", width: "100%", color: "transparent", cursor: "row-resize !important" }));
    var $t = ({ level: e = "section", label: t, children: o, initialExpanded: r = true, colSpan: n = 3 }) => {
      let [s2, a2] = (0, Z.useState)(r), i2 = e === "subsection" ? Mi : Li, l = (o == null ? void 0 : o.length) || 0, p = e === "subsection" ? `${l} item${l !== 1 ? "s" : ""}` : "", c2 = s2 ? "arrowdown" : "arrowright", d = `${s2 ? "Hide" : "Show"} ${e === "subsection" ? l : t} item${l !== 1 ? "s" : ""}`;
      return Z.default.createElement(Z.default.Fragment, null, Z.default.createElement($i, { title: d }, Z.default.createElement(i2, { colSpan: 1 }, Z.default.createElement(Rn, { onClick: (m2) => a2(!s2), tabIndex: 0 }, d), Z.default.createElement(Vi, null, Z.default.createElement(Ni, { icon: c2 }), t)), Z.default.createElement(ji, { colSpan: n - 1 }, Z.default.createElement(Rn, { onClick: (m2) => a2(!s2), tabIndex: -1, style: { outline: "none" } }, d), s2 ? null : p)), s2 ? o : null);
    };
    var _i = _t.styled.table(({ theme: e, compact: t, inAddonPanel: o }) => ({ "&&": { borderCollapse: "collapse", borderSpacing: 0, color: e.color.defaultText, "td, th": { padding: 0, border: "none", verticalAlign: "top", textOverflow: "ellipsis" }, fontSize: e.typography.size.s2 - 1, lineHeight: "20px", textAlign: "left", width: "100%", marginTop: o ? 0 : 25, marginBottom: o ? 0 : 40, "thead th:first-of-type, td:first-of-type": { width: "25%" }, "th:first-of-type, td:first-of-type": { paddingLeft: 20 }, "th:nth-of-type(2), td:nth-of-type(2)": { ...t ? null : { width: "35%" } }, "td:nth-of-type(3)": { ...t ? null : { width: "15%" } }, "th:last-of-type, td:last-of-type": { paddingRight: 20, ...t ? null : { width: "25%" } }, th: { color: e.base === "light" ? (0, J.transparentize)(0.25, e.color.defaultText) : (0, J.transparentize)(0.45, e.color.defaultText), paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15 }, td: { paddingTop: "10px", paddingBottom: "10px", "&:not(:first-of-type)": { paddingLeft: 15, paddingRight: 15 }, "&:last-of-type": { paddingRight: 20 } }, marginLeft: o ? 0 : 1, marginRight: o ? 0 : 1, ["tr:first-child"]: { ["td:first-child, th:first-child"]: { borderTopLeftRadius: o ? 0 : e.appBorderRadius }, ["td:last-child, th:last-child"]: { borderTopRightRadius: o ? 0 : e.appBorderRadius } }, ["tr:last-child"]: { ["td:first-child, th:first-child"]: { borderBottomLeftRadius: o ? 0 : e.appBorderRadius }, ["td:last-child, th:last-child"]: { borderBottomRightRadius: o ? 0 : e.appBorderRadius } }, tbody: { boxShadow: !o && (e.base === "light" ? `rgba(0, 0, 0, 0.10) 0 1px 3px 1px,
          ${(0, J.transparentize)(0.035, e.appBorderColor)} 0 0 0 1px` : `rgba(0, 0, 0, 0.20) 0 2px 5px 1px,
          ${(0, J.opacify)(0.05, e.appBorderColor)} 0 0 0 1px`), borderRadius: e.appBorderRadius, "@media not all and (min-resolution:.001dpcm)": { "@supports (-webkit-appearance:none)": { borderWidth: 1, borderStyle: "solid", ...o && { borderColor: "transparent" }, ...!o && { borderColor: e.base === "light" ? (0, J.transparentize)(0.035, e.appBorderColor) : (0, J.opacify)(0.05, e.appBorderColor) } } }, tr: { background: "transparent", overflow: "hidden", ...o ? { borderTopWidth: 1, borderTopStyle: "solid", borderTopColor: e.base === "light" ? (0, J.darken)(0.1, e.background.content) : (0, J.lighten)(0.05, e.background.content) } : { ["&:not(:first-child)"]: { borderTopWidth: 1, borderTopStyle: "solid", borderTopColor: e.base === "light" ? (0, J.darken)(0.1, e.background.content) : (0, J.lighten)(0.05, e.background.content) } } }, td: { background: e.background.content } } } }), ({ isLoading: e, theme: t }) => e ? { "th span, td span, td button": { display: "inline", backgroundColor: t.appBorderColor, animation: `${t.animation.glow} 1.5s ease-in-out infinite`, color: "transparent", boxShadow: "none", borderRadius: 0 } } : {});
    var Ui = (0, _t.styled)(ue.IconButton)(({ theme: e }) => ({ color: e.barTextColor, margin: "-4px -12px -4px 0" }));
    var Hi = _t.styled.span({ display: "flex", justifyContent: "space-between" });
    var Wi = { alpha: (e, t) => e.name.localeCompare(t.name), requiredFirst: (e, t) => {
      var o, r;
      return Number(!!((o = t.type) != null && o.required)) - Number(!!((r = e.type) != null && r.required)) || e.name.localeCompare(t.name);
    }, none: void 0 };
    var jo = (e) => ({ key: e, name: "propertyName", description: "This is a short description", control: { type: "text" }, table: { type: { summary: "summary" }, defaultValue: { summary: "defaultValue" } } });
    var zi = { rows: { row1: jo("row1"), row2: jo("row2"), row3: jo("row3") } };
    var Ri = (e, t) => {
      let o = { ungrouped: [], ungroupedSubsections: {}, sections: {} };
      if (!e)
        return o;
      Object.entries(e).forEach(([a2, i2]) => {
        let { category: l, subcategory: p } = (i2 == null ? void 0 : i2.table) || {};
        if (l) {
          let c2 = o.sections[l] || { ungrouped: [], subsections: {} };
          if (!p)
            c2.ungrouped.push({ key: a2, ...i2 });
          else {
            let d = c2.subsections[p] || [];
            d.push({ key: a2, ...i2 }), c2.subsections[p] = d;
          }
          o.sections[l] = c2;
        } else if (p) {
          let c2 = o.ungroupedSubsections[p] || [];
          c2.push({ key: a2, ...i2 }), o.ungroupedSubsections[p] = c2;
        } else
          o.ungrouped.push({ key: a2, ...i2 });
      });
      let r = Wi[t], n = (a2) => r ? Object.keys(a2).reduce((i2, l) => ({ ...i2, [l]: a2[l].sort(r) }), {}) : a2;
      return { ungrouped: o.ungrouped.sort(r), ungroupedSubsections: n(o.ungroupedSubsections), sections: Object.keys(o.sections).reduce((a2, i2) => ({ ...a2, [i2]: { ungrouped: o.sections[i2].ungrouped.sort(r), subsections: n(o.sections[i2].subsections) } }), {}) };
    };
    var Ji = (e, t, o) => {
      try {
        return (0, Kn.includeConditionalArg)(e, t, o);
      } catch (r) {
        return Yn.once.warn(r.message), false;
      }
    };
    var ye = (e) => {
      if ("error" in e)
        return T2.default.createElement(he, null, e.error, "\xA0", T2.default.createElement(ue.Link, { href: "http://storybook.js.org/docs/", target: "_blank", withArrow: true }, "Read the docs"));
      let { updateArgs: t, resetArgs: o, compact: r, inAddonPanel: n, initialExpandedArgs: s2, sort: a2 = "none" } = e, i2 = "isLoading" in e, { rows: l, args: p, globals: c2 } = "rows" in e ? e : zi, d = Ri((0, Gn.default)(l, (b2) => {
        var x2;
        return !((x2 = b2 == null ? void 0 : b2.table) != null && x2.disable) && Ji(b2, p || {}, c2 || {});
      }), a2);
      if (d.ungrouped.length === 0 && Object.entries(d.sections).length === 0 && Object.entries(d.ungroupedSubsections).length === 0)
        return T2.default.createElement(he, null, "No inputs found for this component.\xA0", T2.default.createElement(ue.Link, { href: "http://storybook.js.org/docs/", target: "_blank", withArrow: true }, "Read the docs"));
      let m2 = 1;
      t && (m2 += 1), r || (m2 += 2);
      let y2 = Object.keys(d.sections).length > 0, g = { updateArgs: t, compact: r, inAddonPanel: n, initialExpandedArgs: s2 };
      return T2.default.createElement(ue.ResetWrapper, null, T2.default.createElement(_i, { "aria-hidden": i2, ...{ compact: r, inAddonPanel: n, isLoading: i2 }, className: "docblock-argstable" }, T2.default.createElement("thead", { className: "docblock-argstable-head" }, T2.default.createElement("tr", null, T2.default.createElement("th", null, T2.default.createElement("span", null, "Name")), r ? null : T2.default.createElement("th", null, T2.default.createElement("span", null, "Description")), r ? null : T2.default.createElement("th", null, T2.default.createElement("span", null, "Default")), t ? T2.default.createElement("th", null, T2.default.createElement(Hi, null, "Control", " ", !i2 && o && T2.default.createElement(Ui, { onClick: () => o(), title: "Reset controls" }, T2.default.createElement(ue.Icons, { icon: "undo", "aria-hidden": true })))) : null)), T2.default.createElement("tbody", { className: "docblock-argstable-body" }, d.ungrouped.map((b2) => T2.default.createElement(rt, { key: b2.key, row: b2, arg: p && p[b2.key], ...g })), Object.entries(d.ungroupedSubsections).map(([b2, x2]) => T2.default.createElement($t, { key: b2, label: b2, level: "subsection", colSpan: m2 }, x2.map((h2) => T2.default.createElement(rt, { key: h2.key, row: h2, arg: p && p[h2.key], expandable: y2, ...g })))), Object.entries(d.sections).map(([b2, x2]) => T2.default.createElement($t, { key: b2, label: b2, level: "section", colSpan: m2 }, x2.ungrouped.map((h2) => T2.default.createElement(rt, { key: h2.key, row: h2, arg: p && p[h2.key], ...g })), Object.entries(x2.subsections).map(([h2, C]) => T2.default.createElement($t, { key: h2, label: h2, level: "subsection", colSpan: m2 }, C.map((S) => T2.default.createElement(rt, { key: S.key, row: S, arg: p && p[S.key], expandable: y2, ...g })))))))));
    };
    var st = f2((init_react(), __toCommonJS(react_exports)));
    var Xn = (init_components(), __toCommonJS(components_exports));
    var $o = ({ tabs: e, ...t }) => {
      let o = Object.entries(e);
      return o.length === 1 ? st.default.createElement(ye, { ...o[0][1], ...t }) : st.default.createElement(Xn.TabsState, null, o.map((r) => {
        let [n, s2] = r, a2 = `prop_table_div_${n}`;
        return st.default.createElement("div", { key: a2, id: a2, title: n }, ({ active: l }) => l ? st.default.createElement(ye, { key: `prop_table_${n}`, ...s2, ...t }) : null);
      }));
    };
    var _o = f2((init_react(), __toCommonJS(react_exports)));
    var Zn = (init_theming(), __toCommonJS(theming_exports));
    var qn = (init_components(), __toCommonJS(components_exports));
    var Gi = Zn.styled.div(({ theme: e }) => ({ background: e.background.warning, color: e.color.darkest, padding: "10px 15px", lineHeight: "20px", boxShadow: `${e.appBorderColor} 0 -1px 0 0 inset` }));
    var Qn = () => _o.default.createElement(Gi, null, "This story is not configured to handle controls.", " ", _o.default.createElement(qn.Link, { href: "https://storybook.js.org/docs/react/essentials/controls", target: "_blank", cancel: false, withArrow: true }, "Learn how to add controls"));
    var at = f2((init_react(), __toCommonJS(react_exports)));
    var Uo = require_polished_cjs();
    var it = (init_theming(), __toCommonJS(theming_exports));
    var es = (init_components(), __toCommonJS(components_exports));
    var Ki = it.styled.div(({ theme: e }) => ({ marginRight: 30, fontSize: `${e.typography.size.s1}px`, color: e.base === "light" ? (0, Uo.transparentize)(0.4, e.color.defaultText) : (0, Uo.transparentize)(0.6, e.color.defaultText) }));
    var Yi = it.styled.div({ overflow: "hidden", whiteSpace: "nowrap", textOverflow: "ellipsis" });
    var Xi = it.styled.div({ display: "flex", flexDirection: "row", alignItems: "baseline", "&:not(:last-child)": { marginBottom: "1rem" } });
    var Zi = it.styled.div(es.withReset, ({ theme: e }) => ({ ...be(e), margin: "25px 0 40px", padding: "30px 20px" }));
    var ts = ({ fontFamily: e, fontSizes: t, fontWeight: o, sampleText: r, ...n }) => at.default.createElement(Zi, { ...n, className: "docblock-typeset" }, t.map((s2) => at.default.createElement(Xi, { key: s2 }, at.default.createElement(Ki, null, s2), at.default.createElement(Yi, { style: { fontFamily: e, fontSize: s2, fontWeight: o, lineHeight: 1.2 } }, r || "Was he a beast if music could move him so?"))));
    var N = f2((init_react(), __toCommonJS(react_exports)));
    var Le = require_polished_cjs();
    var z = (init_theming(), __toCommonJS(theming_exports));
    var is = (init_components(), __toCommonJS(components_exports));
    var qi = z.styled.div(({ theme: e }) => ({ fontWeight: e.typography.weight.bold, color: e.color.defaultText }));
    var Qi = z.styled.div(({ theme: e }) => ({ color: e.base === "light" ? (0, Le.transparentize)(0.2, e.color.defaultText) : (0, Le.transparentize)(0.6, e.color.defaultText) }));
    var el = z.styled.div({ flex: "0 0 30%", lineHeight: "20px", marginTop: 5 });
    var tl = z.styled.div(({ theme: e }) => ({ flex: 1, textAlign: "center", fontFamily: e.typography.fonts.mono, fontSize: e.typography.size.s1, lineHeight: 1, overflow: "hidden", color: e.base === "light" ? (0, Le.transparentize)(0.4, e.color.defaultText) : (0, Le.transparentize)(0.6, e.color.defaultText), "> div": { display: "inline-block", overflow: "hidden", maxWidth: "100%", textOverflow: "ellipsis" }, span: { display: "block", marginTop: 2 } }));
    var os = z.styled.div({ display: "flex", flexDirection: "row" });
    var ol = z.styled.div(({ background: e }) => ({ position: "relative", flex: 1, "&::before": { position: "absolute", top: 0, left: 0, width: "100%", height: "100%", background: e, content: '""' } }));
    var rs = z.styled.div(({ theme: e }) => ({ ...be(e), display: "flex", flexDirection: "row", height: 50, marginBottom: 5, overflow: "hidden", backgroundColor: "white", backgroundImage: "repeating-linear-gradient(-45deg, #ccc, #ccc 1px, #fff 1px, #fff 16px)", backgroundClip: "padding-box" }));
    var ns = z.styled.div({ display: "flex", flexDirection: "column", flex: 1, position: "relative", marginBottom: 30 });
    var rl = z.styled.div({ flex: 1, display: "flex", flexDirection: "row" });
    var nl = z.styled.div({ display: "flex", alignItems: "flex-start" });
    var sl = z.styled.div({ flex: "0 0 30%" });
    var al = z.styled.div({ flex: 1 });
    var il = z.styled.div(({ theme: e }) => ({ display: "flex", flexDirection: "row", alignItems: "center", paddingBottom: 20, fontWeight: e.typography.weight.bold, color: e.base === "light" ? (0, Le.transparentize)(0.4, e.color.defaultText) : (0, Le.transparentize)(0.6, e.color.defaultText) }));
    var ll = z.styled.div(({ theme: e }) => ({ fontSize: e.typography.size.s2, lineHeight: "20px", display: "flex", flexDirection: "column" }));
    function ss(e, t) {
      return N.default.createElement(ol, { key: `${e}-${t}`, title: e, background: e });
    }
    function as(e, t, o) {
      return N.default.createElement(tl, { key: `${e}-${t}`, title: e }, N.default.createElement("div", null, e, o && N.default.createElement("span", null, o)));
    }
    function pl(e) {
      return Array.isArray(e) ? N.default.createElement(ns, null, N.default.createElement(rs, null, e.map((t, o) => ss(t, o))), N.default.createElement(os, null, e.map((t, o) => as(t, o)))) : N.default.createElement(ns, null, N.default.createElement(rs, null, Object.values(e).map((t, o) => ss(t, o))), N.default.createElement(os, null, Object.keys(e).map((t, o) => as(t, o, e[t]))));
    }
    var ls = ({ title: e, subtitle: t, colors: o }) => N.default.createElement(nl, null, N.default.createElement(el, null, N.default.createElement(qi, null, e), N.default.createElement(Qi, null, t)), N.default.createElement(rl, null, pl(o)));
    var ps = ({ children: e, ...t }) => N.default.createElement(is.ResetWrapper, null, N.default.createElement(ll, { ...t, className: "docblock-colorpalette" }, N.default.createElement(il, null, N.default.createElement(sl, null, "Name"), N.default.createElement(al, null, "Swatches")), e));
    var _e = f2((init_react(), __toCommonJS(react_exports)));
    var lt = (init_theming(), __toCommonJS(theming_exports));
    var ds = (init_components(), __toCommonJS(components_exports));
    var dl = lt.styled.div(({ theme: e }) => ({ fontFamily: e.typography.fonts.base, fontSize: e.typography.size.s2, color: e.color.defaultText, marginLeft: 10, lineHeight: 1.2 }));
    var cl = lt.styled.div(({ theme: e }) => ({ ...be(e), overflow: "hidden", height: 40, width: 40, display: "flex", alignItems: "center", justifyContent: "center", flex: "none", "> img, > svg": { width: 20, height: 20 } }));
    var ml = lt.styled.div({ display: "inline-flex", flexDirection: "row", alignItems: "center", flex: "0 1 calc(20% - 10px)", minWidth: 120, margin: "0px 10px 30px 0" });
    var ul = lt.styled.div({ display: "flex", flexFlow: "row wrap" });
    var cs = ({ name: e, children: t }) => _e.default.createElement(ml, null, _e.default.createElement(cl, null, t), _e.default.createElement(dl, null, e));
    var ms = ({ children: e, ...t }) => _e.default.createElement(ds.ResetWrapper, null, _e.default.createElement(ul, { ...t, className: "docblock-icongallery" }, e));
    var us = f2((init_react(), __toCommonJS(react_exports)));
    var ys = (e) => `anchor--${e}`;
    var pt = ({ storyId: e, children: t }) => us.default.createElement("div", { id: ys(e) }, t);
    var D = f2((init_react(), __toCommonJS(react_exports)));
    var hs = f2(require_mapValues());
    var Jo = require_dist6();
    var ae = (init_core_events(), __toCommonJS(core_events_exports));
    var Ho = (init_react(), __toCommonJS(react_exports));
    var Me = require_window();
    Me.window && Me.window.__DOCS_CONTEXT__ === void 0 && (Me.window.__DOCS_CONTEXT__ = (0, Ho.createContext)(null), Me.window.__DOCS_CONTEXT__.displayName = "DocsContext");
    var P2 = Me.window ? Me.window.__DOCS_CONTEXT__ : (0, Ho.createContext)(null);
    var se = "^";
    var yl = (e) => e.split("-").map((t) => t.charAt(0).toUpperCase() + t.slice(1)).join("");
    var Wo = (e) => {
      if (!!e)
        return typeof e == "string" ? e.includes("-") ? yl(e) : e : e.__docgenInfo && e.__docgenInfo.displayName ? e.__docgenInfo.displayName : e.name;
    };
    function gs(e, t = "start") {
      e.scrollIntoView({ behavior: "smooth", block: t, inline: "nearest" });
    }
    var Ut = (init_react(), __toCommonJS(react_exports));
    function Ht(e, t) {
      let o = dt([e], t);
      return o && o[0];
    }
    function dt(e, t) {
      let [o, r] = (0, Ut.useState)({});
      return (0, Ut.useEffect)(() => {
        Promise.all(e.map(async (n) => {
          let s2 = await t.loadStory(n);
          r((a2) => a2[n] === s2 ? a2 : { ...a2, [n]: s2 });
        }));
      }), e.map((n) => {
        if (o[n])
          return o[n];
        try {
          return t.storyById(n);
        } catch {
          return null;
        }
      });
    }
    var gl = (e, t) => {
      let o = t.getStoryContext(t.storyById()), [r, n] = (0, D.useState)(o.args);
      (0, D.useEffect)(() => {
        let i2 = (l) => {
          l.storyId === e && n(l.args);
        };
        return t.channel.on(ae.STORY_ARGS_UPDATED, i2), () => t.channel.off(ae.STORY_ARGS_UPDATED, i2);
      }, [e]);
      let s2 = (0, D.useCallback)((i2) => t.channel.emit(ae.UPDATE_STORY_ARGS, { storyId: e, updatedArgs: i2 }), [e]), a2 = (0, D.useCallback)((i2) => t.channel.emit(ae.RESET_STORY_ARGS, { storyId: e, argNames: i2 }), [e]);
      return [r, s2, a2];
    };
    var fl = (e) => {
      let t = e.getStoryContext(e.storyById()), [o, r] = (0, D.useState)(t.globals);
      return (0, D.useEffect)(() => {
        let n = (s2) => {
          r(s2.globals);
        };
        return e.channel.on(ae.GLOBALS_UPDATED, n), () => e.channel.off(ae.GLOBALS_UPDATED, n);
      }, []), [o];
    };
    var Go = (e, t, o, r) => {
      let { parameters: n } = t.storyById(), { extractArgTypes: s2 } = n.docs || {};
      if (!s2)
        throw new Error("Args unsupported. See Args documentation for your framework.");
      let a2 = s2(e);
      return a2 = (0, Jo.filterArgTypes)(a2, o, r), a2;
    };
    var fs = (e) => e && [se].includes(e);
    var bs = (e = {}, t) => {
      let { of: o } = e, { story: r } = e, { component: n } = t.storyById();
      if (fs(o) || fs(r))
        return n || null;
      if (!o)
        throw new Error("No component found.");
      return o;
    };
    var zo = (e, t, o, r, n, s2) => ({ ...e, ...(0, hs.default)(t, (a2) => ({ rows: Go(a2, o, r, n), sort: s2 })) });
    var xs = (e) => {
      let t = (0, D.useContext)(P2), { story: o, component: r, subcomponents: n, showComponent: s2, include: a2, exclude: i2, sort: l } = e;
      try {
        let p;
        switch (o) {
          case se: {
            p = t.storyById().id;
            break;
          }
          default:
            p = t.storyIdByName(o);
        }
        let c2 = Ht(p, t), [d, m2, y2] = gl(p, t), [g] = fl(t);
        if (!c2)
          return D.default.createElement(ye, { isLoading: true, updateArgs: m2, resetArgs: y2 });
        let b2 = (0, Jo.filterArgTypes)(c2.argTypes, a2, i2), x2 = Wo(r) || "Story", h2 = { [x2]: { rows: b2, args: d, globals: g, updateArgs: m2, resetArgs: y2 } }, C = b2 && Object.values(b2).find((S) => !!(S != null && S.control));
        if (C || (m2 = null, y2 = null, h2 = {}), r && (!C || s2) && (h2 = zo(h2, { [x2]: r }, t, a2, i2)), n) {
          if (Array.isArray(n))
            throw new Error("Unexpected subcomponents array. Expected an object whose keys are tab labels and whose values are components.");
          h2 = zo(h2, n, t, a2, i2);
        }
        return D.default.createElement($o, { tabs: h2, sort: l });
      } catch (p) {
        return D.default.createElement(ye, { error: p.message });
      }
    };
    var Ro = (e) => {
      let t = (0, D.useContext)(P2), { components: o, include: r, exclude: n, sort: s2 } = e, a2 = zo({}, o, t, r, n);
      return D.default.createElement($o, { tabs: a2, sort: s2 });
    };
    var Wt = (e) => {
      let t = (0, D.useContext)(P2), { parameters: { controls: o }, subcomponents: r } = t.storyById(), { include: n, exclude: s2, components: a2, sort: i2 } = e, { story: l } = e, p = i2 || (o == null ? void 0 : o.sort), c2 = bs(e, t);
      if (l)
        return D.default.createElement(xs, { ...e, component: c2, ...{ subcomponents: r, sort: p } });
      if (!a2 && !r) {
        let m2;
        try {
          m2 = { rows: Go(c2, t, n, s2) };
        } catch (y2) {
          m2 = { error: y2.message };
        }
        return D.default.createElement(ye, { ...m2, sort: p });
      }
      if (a2)
        return D.default.createElement(Ro, { ...e, ...{ components: a2, sort: p } });
      let d = Wo(c2);
      return D.default.createElement(Ro, { ...e, components: { [d]: c2, ...r }, sort: p });
    };
    Wt.defaultProps = { of: se };
    var He = f2((init_react(), __toCommonJS(react_exports)));
    var Te = f2((init_react(), __toCommonJS(react_exports)));
    var Cs = require_dist5();
    var Ko = require_dist7();
    var Ue = (0, Te.createContext)({ sources: {} });
    var Yo = ({ children: e, channel: t }) => {
      let [o, r] = (0, Te.useState)({});
      return (0, Te.useEffect)(() => {
        let n = (s2, a2, i2 = false) => {
          o[s2] && o[s2].code === a2 || r((l) => {
            let p = { ...l, [s2]: { code: a2, format: i2 } };
            return (0, Cs.dequal)(l, p) ? l : p;
          });
        };
        return t.on(Ko.SNIPPET_RENDERED, n), () => t.off(Ko.SNIPPET_RENDERED, n);
      }, []), Te.default.createElement(Ue.Provider, { value: { sources: o } }, e);
    };
    var ct = f2((init_react(), __toCommonJS(react_exports)));
    var zt = require_dist7();
    var Ss = require_dist6();
    function hl(e, t) {
      let { startBody: o, endBody: r } = e;
      if (o.line === r.line && t[o.line - 1] !== void 0)
        return t[o.line - 1].substring(o.col, r.col);
      let n = t[o.line - 1], s2 = t[r.line - 1];
      return n === void 0 || s2 === void 0 ? null : [n.substring(o.col), ...t.slice(o.line, r.line - 1), s2.substring(0, r.col)].join(`
`);
    }
    var bl = (e) => e.replace(/^.*?--/, "");
    var xl = (e, { source: t, locationsMap: o }) => {
      if (!o)
        return t;
      let r = bl(e), n = o[r];
      if (!n)
        return t;
      let s2 = t.split(`
`);
      return hl(n, s2);
    };
    var Ps = (e) => {
      var l;
      let { id: t, parameters: o } = e, { storySource: r, docs: n = {} } = o, { transformSource: s2 } = n;
      if (!(r != null && r.source) || ((l = n.source) == null ? void 0 : l.code))
        return null;
      let a2 = xl(t, r), i2 = s2 ? s2(a2, e) : a2;
      return { docs: (0, Ss.combineParameters)(n, { source: { code: i2 } }) };
    };
    var Xo = ((r) => (r.OPEN = "open", r.CLOSED = "closed", r.NONE = "none", r))(Xo || {});
    var Cl = (e) => {
      let t = e.map((o) => {
        var r, n;
        return (n = (r = o.parameters.docs) == null ? void 0 : r.source) == null ? void 0 : n.state;
      }).filter(Boolean);
      return t.length === 0 ? "closed" : t[0];
    };
    var Es = (e, t) => {
      let { sources: o } = t;
      return (o == null ? void 0 : o[e]) || { code: "", format: false };
    };
    var Sl = (e, t) => {
      var i2, l, p, c2, d, m2, y2, g, b2, x2;
      if (!t)
        return e;
      let { parameters: o } = t, r = o.__isArgsStory, n = ((l = (i2 = o.docs) == null ? void 0 : i2.source) == null ? void 0 : l.type) || zt.SourceType.AUTO, s2 = (c2 = (p = o.docs) == null ? void 0 : p.source) == null ? void 0 : c2.code;
      if (s2 !== void 0)
        return s2;
      if (n === zt.SourceType.DYNAMIC)
        return ((m2 = (d = o.docs) == null ? void 0 : d.transformSource) == null ? void 0 : m2.call(d, e, t)) || e;
      if (n === zt.SourceType.AUTO && e && r)
        return ((g = (y2 = o.docs) == null ? void 0 : y2.transformSource) == null ? void 0 : g.call(y2, e, t)) || e;
      let a2 = Ps(t) || o;
      return ((x2 = (b2 = a2 == null ? void 0 : a2.docs) == null ? void 0 : b2.source) == null ? void 0 : x2.code) || "";
    };
    var mt = (e, t, o) => {
      let { id: r, parameters: n } = t.storyById(), s2 = e, a2 = e, i2 = e, l = s2.code, { format: p } = s2, d = (i2.ids || [a2.id || r]).map((h2) => h2), m2 = dt(d, t);
      if (!m2.every(Boolean))
        return { error: "Oh no! The source is not available.", state: "none" };
      l || ({ format: p } = Es(d[0], o), l = d.map((h2, C) => {
        let { code: S } = Es(h2, o), V = m2[C];
        return Sl(S, V);
      }).join(`

`));
      let y2 = Cl(m2), { docs: g = {} } = n, { source: b2 = {} } = g, { language: x2 = null } = b2;
      return l ? { code: l, state: y2, format: p, language: e.language || x2 || "jsx", dark: e.dark || false } : { error: "Oh no! The source is not available.", state: y2 };
    };
    var Pl = (e) => {
      let t = (0, ct.useContext)(Ue), o = (0, ct.useContext)(P2), r = mt(e, o, t);
      return ct.default.createElement(Ae, { ...r });
    };
    var El = ({ withSource: e, mdxSource: t, children: o, ...r }, n, s2) => {
      let a2 = e, i2 = false;
      if (a2 === "none")
        return { isLoading: i2, previewProps: r };
      if (t)
        return { isLoading: i2, previewProps: { ...r, withSource: mt({ code: decodeURI(t) }, n, s2), isExpanded: a2 === "open" } };
      let c2 = (Array.isArray(o) ? o : [o]).filter((g) => g.props && (g.props.id || g.props.name || g.props.of)).map(({ props: { id: g, of: b2, name: x2 } }) => g || (b2 ? n.storyIdByModuleExport(b2) : n.storyIdByName(x2))), d = mt({ ids: c2 }, n, s2);
      a2 || (a2 = d.state);
      let m2 = c2.map((g) => g);
      return i2 = dt(m2, n).some((g) => !g), { isLoading: i2, previewProps: { ...r, withSource: d, isExpanded: a2 === "open" } };
    };
    var Zo = (e) => {
      let t = (0, He.useContext)(P2), o = (0, He.useContext)(Ue), { isLoading: r, previewProps: n } = El(e, t, o), { children: s2 } = e;
      return r ? He.default.createElement(jr, null) : He.default.createElement(yo, { ...n }, s2);
    };
    var Jt = f2((init_react(), __toCommonJS(react_exports)));
    var Rt = require_dist7();
    var ws = ((s2) => (s2.INFO = "info", s2.NOTES = "notes", s2.DOCGEN = "docgen", s2.LEGACY_5_2 = "legacy-5.2", s2.AUTO = "auto", s2))(ws || {});
    var ks = (e) => e && (typeof e == "string" ? e : (0, Rt.str)(e.markdown) || (0, Rt.str)(e.text));
    var Ts = (e) => e && (typeof e == "string" ? e : (0, Rt.str)(e.text));
    var kl = (e) => null;
    var As = ({ of: e, type: t, markdown: o, children: r }, { storyById: n }) => {
      let { component: s2, parameters: a2 } = n();
      if (r || o)
        return { markdown: r || o };
      let { notes: i2, info: l, docs: p } = a2, { extractComponentDescription: c2 = kl, description: d } = p || {}, m2 = [se].includes(e) ? s2 : e, y2 = d == null ? void 0 : d.component;
      if (y2)
        return { markdown: y2 };
      switch (t) {
        case "info":
          return { markdown: Ts(l) };
        case "notes":
          return { markdown: ks(i2) };
        case "legacy-5.2":
          return { markdown: `
${ks(i2) || Ts(l) || ""}

${c2(m2) || ""}
`.trim() };
        case "docgen":
        case "auto":
        default:
          return { markdown: c2(m2, { component: s2, ...a2 }) };
      }
    };
    var We = (e) => {
      let t = (0, Jt.useContext)(P2), { markdown: o } = As(e, t);
      return o ? Jt.default.createElement(kr, { markdown: o }) : null;
    };
    We.defaultProps = { of: se };
    var cr = f2((init_react(), __toCommonJS(react_exports)));
    var we = f2((init_react(), __toCommonJS(react_exports)));
    var vs = f2(require_window());
    var Gt = (init_theming(), __toCommonJS(theming_exports));
    var { document: Tl, window: wl } = vs.default;
    var qo = ({ context: e, theme: t, children: o }) => ((0, we.useEffect)(() => {
      let r;
      try {
        if (r = new URL(wl.parent.location), r.hash) {
          let n = Tl.getElementById(r.hash.substring(1));
          n && setTimeout(() => {
            gs(n);
          }, 200);
        }
      } catch {
      }
    }), we.default.createElement(P2.Provider, { value: e }, we.default.createElement(Yo, { channel: e.channel }, we.default.createElement(Gt.ThemeProvider, { theme: (0, Gt.ensure)(t) }, we.default.createElement(Fr, { className: "sbdocs sbdocs-wrapper" }, we.default.createElement(vr, { className: "sbdocs sbdocs-content" }, o))))));
    var ge = f2((init_react(), __toCommonJS(react_exports)));
    var Kt = f2((init_react(), __toCommonJS(react_exports)));
    var Al = /\s*\/\s*/;
    var Fs = (e) => {
      let t = e.trim().split(Al);
      return t && t[t.length - 1] || e;
    };
    var Qo = ({ children: e }) => {
      let t = (0, Kt.useContext)(P2), o = e;
      return o || (o = Fs(t.storyById().title)), o ? Kt.default.createElement(wr, { className: "sbdocs-title" }, o) : null;
    };
    var Yt = f2((init_react(), __toCommonJS(react_exports)));
    var er = ({ children: e }) => {
      let t = (0, Yt.useContext)(P2), { parameters: o } = t.storyById(), r = e;
      return r || (r = o == null ? void 0 : o.componentSubtitle), r ? Yt.default.createElement(Ar, { className: "sbdocs-subtitle" }, r) : null;
    };
    var Zt = f2((init_react(), __toCommonJS(react_exports)));
    var Je = f2((init_react(), __toCommonJS(react_exports)));
    var nr = f2((init_react(), __toCommonJS(react_exports)));
    var Ns = (init_components(), __toCommonJS(components_exports));
    var L = f2((init_react(), __toCommonJS(react_exports)));
    var Is = (init_core_events(), __toCommonJS(core_events_exports));
    var ze = (init_components(), __toCommonJS(components_exports));
    var Bs = f2(require_window());
    var or = (init_theming(), __toCommonJS(theming_exports));
    var { document: Ds } = Bs.default;
    var vl = (e) => {
      if (typeof e != "function")
        throw new Error(`Expected story function, got: ${e}`);
      return e;
    };
    var Fl = (e) => {
      let { children: t, ...o } = e, r = L.default.useContext(P2);
      return L.default.createElement(P2.Provider, { value: { ...r, ...o } }, t);
    };
    var Il = ({ className: e, children: t, ...o }) => {
      if (typeof e != "string" && (typeof t != "string" || !t.match(/[\n\r]/g)))
        return L.default.createElement(ze.Code, null, t);
      let r = e && e.split("-");
      return L.default.createElement(Ae, { language: r && r[1] || "plaintext", format: false, code: t, ...o });
    };
    function rr(e, t) {
      e.channel.emit(Is.NAVIGATE_URL, t);
    }
    var tr = ze.components.a;
    var Bl = ({ hash: e, children: t }) => {
      let o = (0, L.useContext)(P2);
      return L.default.createElement(tr, { href: e, target: "_self", onClick: (r) => {
        let n = e.substring(1);
        Ds.getElementById(n) && rr(o, e);
      } }, t);
    };
    var Dl = (e) => {
      let { href: t, target: o, children: r, ...n } = e, s2 = (0, L.useContext)(P2);
      if (t) {
        if (t.startsWith("#"))
          return L.default.createElement(Bl, { hash: t }, r);
        if (o !== "_blank" && !t.startsWith("https://"))
          return L.default.createElement(tr, { href: t, onClick: (a2) => {
            a2.preventDefault(), rr(s2, a2.currentTarget.getAttribute("href"));
          }, target: o, ...n }, r);
      }
      return L.default.createElement(tr, { ...e });
    };
    var Os = ["h1", "h2", "h3", "h4", "h5", "h6"];
    var Ol = Os.reduce((e, t) => ({ ...e, [t]: (0, or.styled)(ze.components[t])({ "& svg": { visibility: "hidden" }, "&:hover svg": { visibility: "visible" } }) }), {});
    var Nl = or.styled.a(() => ({ float: "left", paddingRight: "4px", marginLeft: "-20px", color: "inherit" }));
    var Vl = ({ as: e, id: t, children: o, ...r }) => {
      let n = (0, L.useContext)(P2), s2 = Ol[e], a2 = `#${t}`;
      return L.default.createElement(s2, { id: t, ...r }, L.default.createElement(Nl, { "aria-hidden": "true", href: a2, tabIndex: -1, target: "_self", onClick: (i2) => {
        Ds.getElementById(t) && rr(n, a2);
      } }, L.default.createElement("svg", { viewBox: "0 0 16 16", version: "1.1", width: "16", height: "16", "aria-hidden": "true", fill: "currentColor" }, L.default.createElement("path", { fillRule: "evenodd", d: "M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" }))), o);
    };
    var Re = (e) => {
      let { as: t, id: o, children: r, ...n } = e;
      if (o)
        return L.default.createElement(Vl, { as: t, id: o, ...n }, r);
      let s2 = ze.components[t];
      return L.default.createElement(s2, { ...e });
    };
    var Ll = Os.reduce((e, t) => ({ ...e, [t]: (o) => L.default.createElement(Re, { as: t, ...o }) }), {});
    var sr = ({ children: e, disableAnchor: t }) => {
      if (t || typeof e != "string")
        return nr.default.createElement(Ns.H3, null, e);
      let o = e.toLowerCase().replace(/[^a-z0-9]/gi, "-");
      return nr.default.createElement(Re, { as: "h3", id: o }, e);
    };
    var W2 = f2((init_react(), __toCommonJS(react_exports)));
    var ar = (e) => `story--${e}`;
    var Vs = (e, t) => {
      let { id: o, of: r, meta: n } = e;
      if (r)
        return t.storyIdByModuleExport(r, n);
      let { name: s2 } = e;
      return o || t.storyIdByName(s2);
    };
    var Ls = ({ height: e, inline: t }, o) => {
      let { name: r, parameters: n = {} } = o || {}, { docs: s2 = {} } = n;
      if (s2.disable)
        return null;
      let { inlineStories: a2 = false, iframeHeight: i2 = 100 } = s2, l = typeof t == "boolean" ? t : a2;
      return { inline: l, id: o == null ? void 0 : o.id, height: e || (l ? void 0 : i2), title: r, ...l && { parameters: n } };
    };
    var Xt = (e) => {
      let t = (0, W2.useContext)(P2), o = (0, W2.useRef)(), r = Vs(e, t), n = Ht(r, t), [s2, a2] = (0, W2.useState)(true);
      if ((0, W2.useEffect)(() => {
        let l;
        if (n && o.current) {
          let p = o.current, { autoplay: c2 } = n.parameters.docs || {};
          l = t.renderStoryToElement(n, p, { autoplay: c2 }), a2(false);
        }
        return () => l && l();
      }, [t, n]), !n)
        return W2.default.createElement(Ze, null);
      let i2 = Ls(e, n);
      if (!i2)
        return null;
      if (i2.inline) {
        let l = "<span></span>", { height: p } = i2;
        return W2.default.createElement("div", { id: ar(n.id) }, p ? W2.default.createElement("style", null, `#story--${n.id} { min-height: ${p}px; transform: translateZ(0); overflow: auto }`) : null, s2 && W2.default.createElement(Ze, null), W2.default.createElement("div", { ref: o, "data-name": n.name, dangerouslySetInnerHTML: { __html: l } }));
      }
      return W2.default.createElement("div", { id: ar(n.id) }, W2.default.createElement(Vr, { ...i2 }));
    };
    Xt.defaultProps = { children: null, name: null };
    var ut = ({ id: e, name: t, expanded: o = true, withToolbar: r = false, parameters: n = {} }) => {
      var l;
      let s2, { docs: a2 } = n;
      o && a2 && (s2 = (l = a2.description) == null ? void 0 : l.story);
      let i2 = o && t;
      return Je.default.createElement(pt, { storyId: e }, i2 && Je.default.createElement(sr, null, i2), s2 && Je.default.createElement(We, { markdown: s2 }), Je.default.createElement(Zo, { withToolbar: r }, Je.default.createElement(Xt, { id: e, parameters: n })));
    };
    var ir = ({ name: e }) => {
      let t = (0, Zt.useContext)(P2), o = e && t.storyIdByName(e), r = t.storyById(o);
      return r ? Zt.default.createElement(ut, { ...r, expanded: false, withToolbar: true }) : null;
    };
    var je = f2((init_react(), __toCommonJS(react_exports)));
    var lr = f2((init_react(), __toCommonJS(react_exports)));
    var Ms = (init_components(), __toCommonJS(components_exports));
    var pr = ({ children: e, disableAnchor: t }) => {
      if (t || typeof e != "string")
        return lr.default.createElement(Ms.H2, null, e);
      let o = e.toLowerCase().replace(/[^a-z0-9]/gi, "-");
      return lr.default.createElement(Re, { as: "h2", id: o }, e);
    };
    var qt = ({ title: e, includePrimary: t = false }) => {
      let { componentStories: o } = (0, je.useContext)(P2), r = o();
      return r = r.filter((n) => {
        var s2, a2;
        return !((a2 = (s2 = n.parameters) == null ? void 0 : s2.docs) != null && a2.disable);
      }), t || (r = r.slice(1)), !r || r.length === 0 ? null : je.default.createElement(je.default.Fragment, null, je.default.createElement(pr, null, e), r.map((n) => n && je.default.createElement(ut, { key: n.id, ...n, expanded: true })));
    };
    qt.defaultProps = { title: "Stories" };
    var dr = () => ge.default.createElement(ge.default.Fragment, null, ge.default.createElement(Qo, null), ge.default.createElement(er, null), ge.default.createElement(We, null), ge.default.createElement(ir, null), ge.default.createElement(Wt, { story: se }), ge.default.createElement(qt, null));
    var mr = ({ docsParameter: e, context: t }) => {
      let o = e.container || qo, r = e.page || dr;
      return cr.default.createElement(o, { context: t, theme: e.theme }, cr.default.createElement(r, null));
    };
    var to = f2((init_react(), __toCommonJS(react_exports)));
    var Hs = require_dist6();
    var $s = require_dist8();
    var _s = require_dist6();
    var Us = (init_channels(), __toCommonJS(channels_exports));
    var js = require_dist8();
    var Qt = class extends js.DocsContext {
      constructor(o, r, n, s2) {
        super(o, r, n, [], true);
        this.channel = o;
        this.store = r;
        this.renderStoryToElement = n;
        this.processMetaExports = s2;
        this.setMeta = (o2) => {
          let r2 = this.processMetaExports(o2);
          this.referenceCSFFile(r2, true);
        };
      }
      storyIdByModuleExport(o, r) {
        if (r) {
          let n = this.processMetaExports(r);
          this.referenceCSFFile(n, false);
        }
        return super.storyIdByModuleExport(o);
      }
    };
    var eo = class {
      constructor(t) {
        this.prefix = t;
        this.entries = /* @__PURE__ */ new Map();
      }
      get(t) {
        return this.entries.has(t) || this.entries.set(t, `${this.prefix}${this.entries.size}`), this.entries.get(t);
      }
    };
    var Ge = class extends $s.Preview {
      constructor(o) {
        super(new Us.Channel());
        this.projectAnnotations = o;
        this.importPaths = new eo("./importPath/");
        this.titles = new eo("title-");
        this.storyIndex = { v: 4, entries: {} };
        this.moduleExportsByImportPath = {};
        this.processMetaExports = (o2) => {
          let r = this.importPaths.get(o2);
          this.moduleExportsByImportPath[r] = o2;
          let n = o2.default.title || this.titles.get(o2), s2 = this.storyStore.processCSFFileWithCache(o2, r, n);
          return Object.values(s2.stories).forEach(({ id: a2, name: i2 }) => {
            this.storyIndex.entries[a2] = { id: a2, importPath: r, title: n, name: i2, type: "story" };
          }), this.onStoriesChanged({ storyIndex: this.storyIndex }), s2;
        };
        this.docsContext = () => new Qt(this.channel, this.storyStore, this.renderStoryToElement.bind(this), this.processMetaExports.bind(this));
        this.initialize({ getStoryIndex: () => this.storyIndex, importFn: (r) => Promise.resolve(this.moduleExportsByImportPath[r]), getProjectAnnotations: () => (0, _s.composeConfigs)([{ parameters: { docs: { inlineStories: true } } }, this.projectAnnotations]) });
      }
    };
    function Ml(e) {
      let t = (0, to.useRef)();
      return t.current || (t.current = new Ge(e)), t.current;
    }
    var jl = ({ projectAnnotationsList: e, children: t }) => {
      var s2;
      let o = (0, Hs.composeConfigs)(e), r = Ml(o), n = { ...(s2 = o.parameters) == null ? void 0 : s2.docs, page: () => t };
      return to.default.createElement(mr, { docsParameter: n, context: r.docsContext() });
    };
    var yr = f2((init_react(), __toCommonJS(react_exports)));
    var Ke = (init_theming(), __toCommonJS(theming_exports));
    var ur;
    var $l = ({ projectAnnotations: e, children: t }) => (ur || (ur = new Ge(e)), yr.default.createElement(P2.Provider, { value: ur.docsContext() }, yr.default.createElement(Ke.ThemeProvider, { theme: (0, Ke.ensure)(Ke.themes.light) }, t)));
    var oo = f2((init_react(), __toCommonJS(react_exports)));
    var _l = ({ of: e }) => {
      let t = (0, oo.useContext)(P2);
      e && t.setMeta(e);
      try {
        let o = t.storyById();
        return oo.default.createElement(pt, { storyId: o.id });
      } catch {
        return null;
      }
    };
    var Ws = f2((init_react(), __toCommonJS(react_exports)));
    var Ul = ({ children: e }) => Ws.default.createElement("div", { style: { fontFamily: "sans-serif" } }, e);
  }
});

// node_modules/@storybook/addon-controls/manager.js
init_define_module();
init_define_process_env();

// node_modules/@storybook/addon-controls/dist/manager.js
init_define_module();
init_define_process_env();
var T = Object.create;
var y = Object.defineProperty;
var W = Object.getOwnPropertyDescriptor;
var j = Object.getOwnPropertyNames;
var k = Object.getPrototypeOf;
var M = Object.prototype.hasOwnProperty;
var Y = (o, t, r, p) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let e of j(t))
      !M.call(o, e) && e !== r && y(o, e, { get: () => t[e], enumerable: !(p = W(t, e)) || p.enumerable });
  return o;
};
var b = (o, t, r) => (r = o != null ? T(k(o)) : {}, Y(t || !o || !o.__esModule ? y(r, "default", { value: o, enumerable: true }) : r, o));
var f = b((init_react(), __toCommonJS(react_exports)));
var m = (init_addons(), __toCommonJS(addons_exports));
var h = (init_components(), __toCommonJS(components_exports));
var x = (init_api(), __toCommonJS(api_exports));
var i = b((init_react(), __toCommonJS(react_exports)));
var s = (init_api(), __toCommonJS(api_exports));
var A2 = require_dist9();
var a = "addon-controls";
var c = "controls";
var _ = () => {
  let [o, t, r] = (0, s.useArgs)(), [p] = (0, s.useGlobals)(), e = (0, s.useArgTypes)(), D = (0, s.useParameter)("__isArgsStory", false), { expanded: S, sort: I, presetColors: N, hideNoControlsWarning: w = false } = (0, s.useParameter)(c, {}), { path: O } = (0, s.useStorybookState)(), u = Object.values(e).some((l) => l == null ? void 0 : l.control), E = !(u && D) && !w, K = Object.entries(e).reduce((l, [d, n]) => {
    var P2, C;
    return ((P2 = n == null ? void 0 : n.control) == null ? void 0 : P2.type) !== "color" || ((C = n == null ? void 0 : n.control) == null ? void 0 : C.presetColors) ? l[d] = n : l[d] = { ...n, control: { ...n.control, presetColors: N } }, l;
  }, {});
  return i.default.createElement(i.default.Fragment, null, E && i.default.createElement(A2.NoControlsWarning, null), i.default.createElement(A2.PureArgsTable, { ...{ key: O, compact: !S && u, rows: K, args: o, globals: p, updateArgs: t, resetArgs: r, inAddonPanel: true, sort: I } }));
};
m.addons.register(a, (o) => {
  m.addons.addPanel(a, { title() {
    let t = (0, x.useArgTypes)(), r = Object.values(t).filter((e) => e == null ? void 0 : e.control).length;
    return `Controls${r === 0 ? "" : ` (${r})`}`;
  }, type: m.types.PANEL, paramKey: c, render: ({ key: t, active: r }) => !r || !o.getCurrentStoryData() ? null : f.default.createElement(h.AddonPanel, { key: t, active: r }, f.default.createElement(_, null)) });
});
//# sourceMappingURL=manager.mjs.map
