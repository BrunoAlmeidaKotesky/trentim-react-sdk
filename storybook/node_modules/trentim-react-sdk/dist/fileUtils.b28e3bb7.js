"use strict";class i{constructor(e,r,t,s){this.blob=e,this.byteArrays=r,this.mimeType=t,this.fileName=s}getBlob(){return this.blob}getFile(){return new File([this.getBlob()],this==null?void 0:this.fileName,{type:this==null?void 0:this.mimeType})}getByteArray(){return this.byteArrays}}async function y(o,e,r=null){try{const t=await fetch(o,r).then(a=>a.blob());return new File([t],e.fileName,{type:e==null?void 0:e.fileMime,lastModified:(e==null?void 0:e.lastModified)||new Date().getTime()})}catch(t){return console.error(t==null?void 0:t.message),null}}const m=async(o,e)=>{var t;const r=(t=e==null?void 0:e.readAs)!=null?t:"DataURL";try{return new Promise((s,a)=>{const n=new FileReader;n.onloadend=async()=>{const l=n==null?void 0:n.result;if(l||a(new Error("[TRS] - FileReader error on blobToBase64")),e!=null&&e.customCb){const b=await(e==null?void 0:e.customCb(l));return s(b)}else{const b=/^data:.+;base64,/;return s(l==null?void 0:l.replace(b,""))}},n.onerror=l=>a(l),e!=null&&e.encoding?n[`readAs${r}`](o):n[`readAs${r}`](o,e==null?void 0:e.encoding)})}catch(s){return console.log(s),null}};function c(o,e,r){r=r||this.checkIfHasMime(e);let t=512,s=atob(decodeURIComponent(o)),a=[];for(let l=0;l<s.length;l+=t){let b=s==null?void 0:s.slice(l,l+t),h=new Array(b.length);for(let u=0;u<b.length;u++)h[u]=b.charCodeAt(u);let d=new Uint8Array(h);a.push(d)}const n=r?new Blob(a,{type:r}):new Blob(a);return new i(n,a,r,e)}exports.ConversionOptions=i;exports.blobToBase64=m;exports.convertBase64To=c;exports.urlToFile=y;
