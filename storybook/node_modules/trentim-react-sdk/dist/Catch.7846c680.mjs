function h(n = !1, t) {
  return function(f, c, i) {
    const o = i.value;
    return n || (i.value = function(...u) {
      const e = performance.now(), r = o.apply(this, u), l = performance.now();
      return console.log(`%c${c} - Execution time: ${l - e} milliseconds`, t != null ? t : "color: white; background-color: #3e88ef"), r;
    }), i;
  };
}
function s(n) {
  return n && Promise.resolve(n) === n;
}
function v(n) {
  return typeof n == "function" || n instanceof Function;
}
function a(n, t) {
  return (f, c, i) => {
    const { value: o } = i;
    return t || (t = n, n = void 0), i.value = async function(...u) {
      try {
        const e = o.apply(this, u);
        return s(e) ? await e : Promise.resolve(e);
      } catch (e) {
        if (v(t) && (n === void 0 || e instanceof n))
          return t.call(null, e, this, ...u);
        throw e;
      }
    }, i;
  };
}
function m(n, t) {
  return a(n, t);
}
function y(n) {
  return a(n);
}
export {
  m as C,
  y as D,
  h as M
};
